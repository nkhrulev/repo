var n = 0;
var code_adsense = "";
var footer = "<hr /><footer><p class='text-right'>&copy; " + new Date().getFullYear() + " - Copyright all rights reserved</p></footer>";
var back = "<h3 id='hrefBack'><a href='#' class='icon fa-reply' onclick='work()' title='Already leave'> come back</a></h3>";
var back_c = "<h3 id='hrefBack'><a href='#' class='icon fa-reply' onclick='c()' title='Already leave'> come back</a></h3>";
var nav = "<nav class='navbar navbar-expand-lg navbar-light bg-white sticky-top border-bottom'><button class='navbar-toggler navbar-toggler-right' type='button' onclick='load_nav()' data-toggle='collapse' data-target='.navbar-collapse' aria-controls='navbar-collapse' aria-expanded='false' aria-label='Toggle navigation'><span class='navbar-toggler-icon'></span></button><div><a class='navbar-brand icon fa-home' href='#' onclick='home()'></a><a class='navbar-brand' href='#' onclick='load_lang()'><span class='flag en' id='flag'>flag en</span></a></div><div class='collapse navbar-collapse' id='navbar-collapse'><ul class='navbar-nav mr-auto mt-2 mt-md-0'><li class='nav-item'><a class='nav-link' href='#' onclick='about()'>About</a></li><li class='nav-item'><a class='nav-link' href='#' onclick='contact()'>Contact</a></li><li class='nav-item'><a class='nav-link' href='#' onclick='work()'>Working out</a></li><li class='nav-item'><a class='nav-link' href='#' onclick='literature()'>Literature</a></li></ul><form class='form-inline my-2 my-lg-0'><input class='form-control mr-sm-2' type='search' placeholder='Search' id='search_text'/><button class='btn btn-outline-success my-2 my-sm-0' type='button' onclick='search()' id='search_button'>Search</button></form></div></nav>";

function publish_date() {
	var d = new Date();
	d.setDate(d.getDate() - (7 * n));
	n++;
	if (document.getElementById('flag').innerHTML === 'flag ru')
		document.write("<p id='createdDate'>Дата публикации: <b>" + d.toLocaleDateString() + "</b></p>");
	else
		document.write("<p id='createdDate'>Date of publication: <b>" + d.toLocaleDateString() + "</b></p>");
}

function foo() {
	document.write(
		"<hr /><footer><p class='text-right'>© nicols co 2008 - " + new Date().getFullYear() + "</p></footer>"
	);
}

function comeback() {
	if (document.getElementById('flag').innerHTML === 'flag ru')
		document.write(
			"<h3 id='hrefBack'><a href='../work.html' class='icon fa-reply' onclick='work()' title='Уже уходите'> вернуться</a></h3>"
		);
	else
		document.write(
			"<h3 id='hrefBack'><a href='../work.html' class='icon fa-reply' onclick='work()' title='Already leave'> come back</a></h3>"
		);
}

function hasClass(el, className) {
	if (el.classList)
		return el.classList.contains(className);
	else
		return !!el.className.match(new RegExp('(\\s|^)' + className + '(\\s|$)'));
}

function addClass(el, className) {
	if (el.classList)
		el.classList.add(className);
	else if (!hasClass(el, className)) 
		el.className += " " + className;
}

function removeClass(el, className) {
	if (el.classList)
		el.classList.remove(className);
	else if (hasClass(el, className)) {
		var reg = new RegExp('(\\s|^)' + className + '(\\s|$)');
		el.className=el.className.replace(reg, ' ');
	}
}

function change_css(title) {
	var el = document.getElementById('navbar-collapse');
	document.title = title;
	if (el !== null) {
		addClass(el, 'collapse');
		removeClass(el, 'in');
	}
}

function search() {
	var el = document.getElementById('search_text');
	if (document.getElementById('flag').innerHTML === 'flag ru')
		el.placeholder = 'Думаешь он работает ?.';
	else
		el.placeholder = 'Do you think it works ?.';
	
	el.value = "";
}

function load_nav() {
	var el = document.getElementById('navbar-collapse');

	if ( hasClass(el, 'in')) {
		addClass(el, 'collapse');
		removeClass(el, 'in');
	} else {
		addClass(el, 'in');
		removeClass(el, 'collapse');
		el.style.height = 'auto';
	}
}

function hny() {
	timeend = new Date(new Date().getFullYear() + 1, 0, 1);
	today = Math.floor((timeend-new Date()) / 1000);
	var el = document.getElementById('flag');
	if (el !== null && el.innerHTML === 'flag ru')
		timestr = 'До начала нового ' + (new Date().getFullYear() + 1) + ' года, осталось: ' + today + ' секунд';
	else
		timestr = 'Before the new ' + (new Date().getFullYear() + 1) + ' year, there are: ' + today + ' seconds';
	if (document.getElementById("timer") !== null)
		document.getElementById("timer").innerHTML = timestr;
	window.setTimeout('hny()', 999);
};

function date_publish(days) {
	var d = new Date();
	d.setDate(d.getDate() - (7 * days));
	n++;
	if (document.getElementById('flag').innerHTML === 'flag ru')
		return "Дата публикации: <b>" + d.toLocaleDateString() + "</b>";
	else
		return "Date of publication: <b>" + d.toLocaleDateString() + "</b>";
}

function home() {
	var el = document.getElementById('flag');
	var title = '';
	if (el !== null && el.innerHTML === 'flag ru')
		title = 'Домой';
	else
		title = 'Home';

	load_page("<div id='wrapper'><div id='bg'></div><div id='overlay'></div><div id='main'><header id='header'><h1>n. khrulev</h1><p>Security Chief &nbsp;&bull;&nbsp; Cyborg &nbsp;&bull;&nbsp; Never asked for this &nbsp;&bull;&nbsp; Design HTML5</p><nav><ul><li><a href='https://instagram.com/i.valde' target='_blank' class='icon fa-instagram'><span class='label'>Instagram</span></a></li><li><a href='http://wallbtc.com/auth/signup?partner=6703' target='_blank' class='icon fa-btc'><span class='label'>Bitcoin</span></a></li><li><a href='http://github.com/nkhrulev/n.khrulev' target='_blank' class='icon fa-github'><span class='label'>Github</span></a></li><li><a href='mailto:hru91nik@mail.ru' class='icon fa-envelope-o'><span class='label'>Email</span></a></li><li><a href='http://www.youtube.com/channel/UCLjDm3z5-5qzJCjk5dX92hA' target='_blank' class='icon fa-youtube-play'><span class='label'>Go</span></a></li><li><a href='#' onclick='about()' class='icon fa-chevron-circle-right'><span class='label'>Go</span></a></li></ul></nav></header></div></div>", title);
};

function about() {
	var el = document.getElementById('flag');
	if (el !== null && el.innerHTML === 'flag ru')
		load_page(nav + "<h2>Обо мне.</h2><p>На мой взгляд, хорошая программа — это прежде всего программа, которой пользуются длительное время. Факт длительного использования программы принципиально важен. Ведь никто же не будет пользоваться программой длительное время, считая ее плохой. Плохим программам всегда хочется найти замену. Плохими программами почти никто не пользуется долго. И обычно, довольно быстро замена находится. А на хорошие программы есть спрос. И при этом совершенно не важно, с использованием какой технологии и какого языка программирования создана программа. У хорошей программы, могут быть и недостатки, и недостатки могут быть существенными. Но, если программой пользуются, то в следующих версиях программы существенных недостатков, как правило, становится меньше. В этом смысле замечательный пример хорошей программы ОС Windows. Если провести аналогии, быть может и не совсем уместные, но хороший программист — это тот, чьими услугами пользуются длительное время. При этом его владение теми или иными технологиями всегда уйдет на второй план, по сравнению c такими особенностями хорошего программиста как:</p><ul><li>Четкое выполнение всех требований указанных спецификациях на разработку;</li><li>Способность критически оценить полученное задание на непротиворечивость;</li><li>Минимальный процент не выполненных требований;</li><li>Передача задач на тестирование с минимальным количеством багов;</li><li>Высокоскоростное кодирование;</li><li>Ну, и наконец, хороший программист должен любить делать свою работу;</li></ul><p>А как только программиста перестает «переть» от процесса написания кода, от процесса отладки и оптимизации и т.п., он перестает быть хорошим программистом. Овладеть технологиями способны многие, а вот потом в течении длительного времени применять освоенным технологии по назначению и решать поставленные задачи, дано только хорошим программистам. При этом не важно ставит ли он себе задачи сам, или постановкой занимаются другие. В большинстве случаев никому не нужен хороший программист, а именно нужен профессионал — человек решающий задачи других (<b>а не выходящий из бадуна гений, программирующий сферического коня в вакууме</b>). Хорошие программисты, пишут хорошие программы, потому что они всегда востребованы, теми, кто умеет формировать требования к хорошим программам, умеет проектировать удобные интерфейсы, выбирать оптимальные средства разработки, привлекать инвестиции и подвигать к пользователям хорошие программы:</p><ul><li>Программирование сегодня — это гонка разработчиков программ, стремящихся писать программы больше и с лучшей идиотоустойчивостью, и вселенной, которая пытается создавать больших и лучших идиотов. Пока вселенная побеждает;</li><li>Я всегда мечтал о том, чтобы моим компьютером можно было пользоваться так же легко, как телефоном. Моя мечта сбылась: я уже не могу разобраться, как пользоваться моим телефоном;</li><li>Обучение программированию не может научить быть экспертом, также как и изучение кистей и красок не может превратить кого-либо в художника;</li><li>Не волнуйтесь, если что-то не работает. Если бы всё работало, вас бы уволили;</li><li>Учитывая текущее плачевное состояние наших программ, можно сказать, что программирование определенно все ещё черная магия и, пока, мы не можем называть его технической дисциплиной;</li><li>Болтовня ничего не стоит. Покажите мне код;</li><li>Программирование на С похоже на быстрые танцы на только что отполированном полу людей с острыми бритвами в руках; PHP — это маленькое зло, созданное некомпетентными новичками, в то время как Perl — это большое и коварное зло, созданное умелыми, но извращёнными профессионалами;</li><li>Лучшие программисты не чуть-чуть лучше хороших. Они на порядок лучше по любым меркам: концептуальное мышление, скорость, изобретательность и способность находить решения;</li><li>Опасайтесь багов в приведенном выше коде. Я только доказал корректность, но не запускал его;</li><li>Иногда лучше остаться спать дома в понедельник, чем провести всю неделю отлаживая написанный в понедельник код;</li><li>Люди считают, что программирование — это наука избранных, но в реальности все наоборот — просто много людей создают программы, которые используют чужие программы, как-будто строя стену из маленьких кирпичиков;</li><li>Сначала учите науку программирования и всю теорию. Далее выработаете свой программистский стиль. Затем забудьте все и просто программируйте;</li><li>Многие из вас знакомы с достоинствами программиста. Их всего три, и разумеется это: <b>лень, нетерпеливость и гордыня</b>. Большинство программ на сегодняшний день подобны египетским пирамидам из миллиона кирпичиков друг на друге и без конструктивной целостности — они просто построены грубой силой и тысячами рабов;</li><li>Большинство хороших программистов делают свою работу не потому, что ожидают оплаты или признания, а потому что получают удовольствие от программирования.</li></ul>", 'Обо мне');
	else 
		load_page(nav + "<h2>About.</h2><p>In my opinion, a good program - is first and foremost a program which is used for a long time. The fact that long-term use of the program is fundamentally important. After all, no one did not use the program for a long time, considering it bad. Bad program you always want to find a replacement. Bad program almost no one uses it for a long time. And usually, quite quickly is replacing. And on good programs there is a demand. And while it does not matter what technology to use and what a programming language created by the program. A good program, there may be drawbacks and disadvantages can be significant. But if you use the program, then in the next release of significant shortcomings, as a rule, it becomes smaller. In this sense, a great example of a good program of Windows.To draw an analogy, perhaps not entirely relevant, but a good programmer - is the one whose services are used for a long time. At this his possession by various technologies have always gone by the wayside, compared such features as a good programmer:</p><ul><li>Clear that all the requirements of these specifications to develop;</li><li>The ability to critically assess the consistency of the resulting job;</li><li>The minimum percentage requirements are not fulfilled;</li><li>The transfer of tasks to test with a minimum amount of bugs;</li><li>High speed coding;</li><li>Well, and, finally, a good programmer should like him to do;</li></ul><p>Master the technology is capable of a lot, but then for a long time to apply the development of technology for the purpose and to solve tasks, given only a good programmer. It does not matter if he puts himself the task itself, or the formulation of doing more.Good programmers write good programs, because they are always in demand, those who know how to shape the requirements for a good program, is able to design a user-friendly interface to choose the best means to develop, attract investments and to move users to the good programs:</p><ul><li>Programming today - it's a race program developers seeking to write programs with more and better idiotoustoychivostyu, and the universe, which is trying to create bigger and better idiots. So far, the universe is winning;</li><li>I always dreamed that my computer could use as easily as a telephone; My dream came true: I can not figure out how to use my telephone;</li><li>Education can not teach programming to be an expert, as well as the study of brushes and paints can not turn anyone into an artist;</li><li>Do not worry if something is not working. If it worked, you would be fired;</li><li>Given the current deplorable state of our programs, we can say that the programming is definitely still a black art, and yet we can not call it a technical discipline;</li><li>Chatter is worthless. Show me the code;</li><li>With - a quirky, imperfect, but incredibly successful language;</li><li>PHP - this little evil, created by incompetent novices, while Perl - it is a great and insidious evil created by skillful, but perverted professionals;</li><li>The best programmers are not a bit better quality. They are much better than by any standards: conceptual thinking, speed, creativity and ability to find solutions;</li><li>Beware of bugs in the above code; I just proved correct, but do not run it;</li><li>Sometimes it's better to stay at home to sleep on Monday, than spend the rest of the week debugging Monday's code is written;</li><li>People believe that the programming - is the science of the elect, but the reality is the opposite - a lot of people are creating programs that use the wrong program, as if building a wall of small bricks;</li><li>Please teach the science of programming and the whole theory. Then you work your programmer's style. Then forget everything and simply programmable;</li><li>Many of you are familiar with the virtues of a programmer. There are only three, and say it: laziness, impatience and hubris;</li><li>Most programs today are like the Egyptian pyramids in a million bricks on each other and without the structural integrity - they just built brute force and thousands of slaves;</li><li>Most good programmers do their work, not because they expect payment or recognition, but because they enjoy the programming.</li></ul>", 'About');
};

function contact() {
	if (document.getElementById('flag').innerHTML === 'flag ru')
		load_page(nav + "<h2>Контакты.</h2><p><b>Адрес:</b> Красная площадь 3, Россия, Москва</p><p><b>Поддержка:</b> <a href='mailto:developerkolyn@yandex.ru'>developerkolyn@yandex.ru</a></p><p><b>Телефон:</b> 8.917.573.2052</p><p><b>Факс:</b> 8.917.573.2052</p><p><b>Маркетинг:</b></p><ul><li><a href='http://atlanticgam.es/partner=P09201483980046' target='_blank'>A.G.A.M (Questra World)</a></li><li><a href='mailto:hru91nik@mail.ru'>hru91nik@mail.ru</a></li><li><a href='http://nlstar.com/ref/p1b38s/' target='_blank'>Energy Diet</a></li><li><a href='#' onclick='story()'>История из жизни</a></li></ul><iframe src='https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2245.2170875047377!2d37.619439150877675!3d55.754730999216136!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x46b54a5a1c716c07%3A0x72f16fa7fabe17ae!2z0JrRgNCw0YHQvdCw0Y8g0L_Quy4sIDMsINCc0L7RgdC60LLQsCwgMTAxMDAw!5e0!3m2!1sru!2sru!4v1506345194011' width='240' frameborder='1'></iframe>" + code_adsense, 'Контакты');
	else
		load_page(nav + "<h2>Contact.</h2><p><b>Address:</b> Red Area 3, Russia, Moscow</p><p><b>Support:</b> <a href='mailto:developerkolyn@yandex.ru'>developerkolyn@yandex.ru</a></p><p><b>Phone:</b> 8.917.573.2052</p><p><b>Fax:</b> 8.917.573.2052</p><p><b>Marketing:</b></p><ul><li><a href='http://atlanticgam.es/partner=P09201483980046' target='_blank'>A.G.A.M (Questra World)</a></li><li><a href='mailto:hru91nik@mail.ru'>hru91nik@mail.ru</a></li><li><a href='http://nlstar.com/ref/p1b38s/' target='_blank'>Energy Diet</a></li><li><a href='#' onclick='story()'>Story</a></li></ul><iframe src='https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2245.2170875047377!2d37.619439150877675!3d55.754730999216136!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x46b54a5a1c716c07%3A0x72f16fa7fabe17ae!2z0JrRgNCw0YHQvdCw0Y8g0L_Quy4sIDMsINCc0L7RgdC60LLQsCwgMTAxMDAw!5e0!3m2!1sru!2sru!4v1506345194011' width='240' frameborder='1'></iframe>" + code_adsense, 'Contact');
};

function story(){
	if (document.getElementById('flag').innerHTML === 'flag ru')
		load_page(nav + "<h2>История из жизни.</h2><p><h4>Введение</h4>Сегодня 13 марта 2017 года, за окном минус 5 градусов по Цельсию. Погода шепчет, автомобили двигаются с бешеной скоростью, люди идущие Николсу навстречу грустны. В этот день Николс двигался на работу, было около семи часов утра. Сказать что это было чудесное утро, не сказать ничего. Оно было настолько прекрасное, что Николс как прежде не торопился на работу. Он старался рассмотреть все то, что его окружало: автомобили, деревья, скамейки, замерзшие лужи, голуби, доедающие вчерашние кожурки от семечек. Этот день ему запомнился на всю жизнь. Николс - главный герой этой истории, он работает программистом в очень крупной компании под названием \"N\". С детства ему хотелось работать с машинами, в школе до 11 класса он хотел стать архитектором, и только в 11 классе он решил стать проектировщиком. Почему проектировщиком? потому что ему нравилось черчение. Поступая в ВУЗ он выбрал САПР (Системы Автоматизированного ПРоектирования), думая что он будет чертить, со временем он понимал, что проектирования в ВУЗе мало, зато сильная подготовка по программированию. Курсе на третьем Николс понимает, что выбрал именно ту профессию, в которой хотел бы развиваться всю свою жизнь. И здесь начинаются его приключения.<br /><br /><h4>Глава 1</h4>Как то раз, сидя за студенческой скамьей, Николс размышлял, чего бы он хотел больше всего в своей жизни. Его мысли были настолько разнообразны, но первое чтобы он хотел реализовать - это написание своего первого приложения, простого, нативного. Когда дали необходимые инструменты, он начинал кодить, день и ночь, день и ночь. В его папках на рабочем столе было столько информации, что он время от времени, зачищал их, потому что он любил порядок. Николс постоянно читал последние новости, был в курсе всего того что происходит во всем мире. В своих программах он писал чистый, понятный каждому код, никогда не писал комментариев, считал их излишними. Однажды, он проснулся ранним утром в районе трех часов и решил погрузиться в мир дискретной математики. Ему легко давалась математика, и он с легкостью понимал каждое написанное слово. Каждый раз читая теорему, он старался ее доказывать самостоятельно. Иногда багажа его знаний не хватало, он обращался к различным источникам. Что касается гуманитарных наук, он их попросту не переносил. Технарь - есть технарь. Когда начинало светать, Николс закончил с математикой и его накрыл полуторачасовой сон.<br /><br /><h4>Глава 2</h4>После пробуждения, Николс заварил себе кофе. Он любил кофе, но не пил более одной чашки в день. Часов в десять утра, он сел за компьютер, ознакомился с актуальными новостями, и принялся за написание программы. Снова он открывал IDE (Интегрированную Среду Разработки) \"Visual Studio\", создавал новый проект и начинал воплощать свои мечты в реальность. Его главной задачей было написание настолько понятного приложения, что даже ребенок мог бы в нем разобраться без труда. На тот момент, у Николса за плечами было разработано порядка пары сотен программ, они были на самые разные тематики. Это были как веб-сервисы, так и клиент-серверные приложения, а также пара интернет-магазинов, но ни одного детского приложения у него не было. И вот спутся два - три года Николс начал писать детское приложение. Почему детское? Да потому, что все дети любят играть. Он взял за основу игру \"Tap Tap Revenge 4\", видоизменил интерфейс, полностью изменил логику в приложении, дополнил его контентом. На то время она была всего лишь для двух платформ - iOS и Android. Он также сделал его кроссплатформенным, это те же платформы iOS и Andoid, плюс разработка для Windows Phone. Когда настала пора публикации приложения в магазины, Николс проверял его сотни раз в день, пока не удостоверился не было ли каких-нибудь там ошибок. После 100% уверенности он его опубликовал. История данного приложения была невероятной, притом что он не тратил денег ни на рекламу, ни на раскрутку, ни на все те мелочи на которые тратят другие разработчики. Его приложение скачивали по всему миру, оно стало настолько популярным, что каждый ребенок знал кто такой Николс.<br /><br /><h4>Глава 3</h4>Спустя месяца два, наш герой появляется в Австралии, в настолько необычном для него месте. В этой стране Николс впервые, он начинает познавать культуру и приобретает себе жилье и предметы первой необходимости. Здесь у него появляются новые друзья, партнеры по бизнесу. Года три назад, у Николса не было ничего (только ноутбук благодаря которому, впоследствии он сделал состояние), а сейчас у него свой собственный бизнес. Он перестал работать в найм, у него появилось много свободного времени. Теперь все свое свободное время Николс путешествует и берет от жизни все. Одной из причин, почему он перебрался за бугор, была мечта заняться серфингом. Он жил на острове Роттнест, катался на доске. Это был великолепный остров, лето было там круглый год. Николс любил проводить вечера на острове со своим другом, это был пес по кличке Напарник. Лучших друзей я не видел. Напарник любил покушать, частенько озорничал, но он всегда был под рукой у своего друга. Может быть поэтому Николс прозвал его Напарником. Однажды Николс с Напарником поехали на рыбалку, это была первая рыбалка, в этом сезоне и первая поездка на рыбалку у Напарника. До этого Николс своего друга не брал. Приехали они засветло, было около пяти часов вечера. Николс занялся сборкой палатки, а Напарник не долго думая понесся в воду. Вода на ощупь была градусов восемнадцать по Цельсию. Вначале шестого Николс, разложил удилище, поставил рогатку и начал ловить рыбу. Больше одной удочки он не брал. Вы бы видели как он мастерски подсекал, подсечка была отточена на сто процентов. Часа за четыре, Николс наловил порядка сотен рыб. Это были как окуни, так и скумбрии, как треска, так и сомы. У Николса был один золотой принцип, из-за которого я его уважал, это был принцип \"catch-and-release\" - поймал, отпусти. Рыбалка для Николса была чем то по-настоящему стоящим, он мог сутками напролет смотреть на поплавок. Напарник очень радовался улову хозяина, и время от времени вытаскивал из сачка одну-две рыбки, пока Николс делал прикорм или был занят чем-то другим. Уже было часов двенадцать ночи, как Напарник увидел вдали, какой-то мерцающий объект. Он испугался и прижал хвост, Николс взял его на руки и сказал \"не бойся, это светлячок\". Впереди была теплая ночь, и восход ожидался в районе семи часов.<br /><br /><h4>Глава 4</h4>В семь утра было 14 градусов выше нуля, Напарник проснулся чуть раньше восьми. Николс всю ночь просидел не спамши. В начале девятого, клев немного ухудшился, возможно из-за погоды, т.к. ветер менял свое направление. Ветер дул то с северо-западного направления, то с юго-восточного. Но вскоре он вовсе прекратился и совсем распогодилось. Часы показывали без пятнадцати двенадцать, как Николс решил перекусить. Он любил брать с собой гору еды, т.к. был не один. Покормив Напарника, Николс принялся за приготовление ухи. Он любил этот суп и мог есть его днями. После обеда, Николс и Напарник принялись за ловлю рыбы, Николс ловил на поплавочную удочку, Напарник все время мешался под ногами, он делал это не специально. Просидев до позднего вечера, так и не увидев ни одной поклевки, Николс решил вздремнуть, попросив Напарника в случае поклевки, незамедлительно разбудить его. Николс проспал всю ночь, и проснулся в районе шести утра, увидев Напарника засыпающим перед удочкой. Он погладил его, накрыл теплым пледом, дал ему косточку и уложил возле себя, а сам принялся за ловлю. Пока Напарник спал, Николс наловил чуть больше полсотни отборной скумбрии, вероятно он хорошо прикормил. Каждая следующая была на 200-300 грамм крупнее предыдущей. И вот очередная поклевка, Николс подсекает и рыба на крючке. Это была триста сорок седьмая рыба по счету, а уж без счета вышло за все четыреста, посидев еще с полчаса, он решил остановиться. Рыбалка была завершена дня на четыре точно. Николс закутал и накормил Напарника, перекусил сам и выдвинулись они в сторону дома. Дорога была свободна, на часах было давно за полночь, Николс никогда никуда не торопился. Как он всегда говорил еще пара тройка деньков в копилку. Рано утром Николс с Напарником добрались до дома, дорога заняла чуть больше трех с половиной часов. Вывалившись из машины Напарник мухой рванул к себе на койку и вырубился дня на полтора. Николс тем временем убрал все снасти, повесил удочку на место, постирал всю одежду, и планировал приняться за трапезу, как вдруг зазвонил телефон. По трубке говорил его старый знакомый Кеша. Они разговаривали около тридцати семи минут, если быть точным тридцать шесть минут сорок две секунды. После разговора Николс активировал авиарежим и принялся за трапезу. Дело было ближе к обеду как Николс дошел до своей кровати и плюхнулся без задних лап.<br /><br /><h4>Глава 5</h4>Очередным ранним утром, Николс принялся за составление плана. План заключался в следующем: \"Необходимо было автоматизировать процесс преобразования энергии...\". Николс любил познавать все новое, находить какие-то нестандартные пути в решении поставленных задач. Данные задачи он ставил себе самостоятельно, потому что уже около пяти лет он работал на себя. Утро было солнечным, Николс вышел на веранду и вдохнул глоток свежего океанического воздуха. Мысли его приободрились, и он решил совершить пробежку по берегу океана. Выдвинулся из дома он чуть позже девяти утра, взяв с собой телефон. План пробежки составлял чуть больше 15 миль по побережью. Океанический воздух, невероятный цвет воды, плавающие за горизонтом дельфины, все это было настолько близко к Николсу, что многие об этом могли только мечтать. Он остановился около небольшого залива, и увидел в полумиле своего близкого друга. Это был Напарник, вы представляете себе, он проснулся прошерстил весь дом, понял что в нем никого нет, и рванул искать свего друга. Николс был рад Напарнику, он искупал его в океане и они двинулись в сторону дома.<br /><br /><h4>Глава 6</h4>А дома Николса ждал небольшой сюрприз. На столе лежала записка с просьбой. В данной записке, говорилось о какой-то \"криптовалюте\". Весь смысл заключался в проектировании блокчейн технологии. В то время очень актуальной тематикой была та самая криптовалюта. И он принялся за ее реализацию. Вы знаете хороший программист это не тот, кто больше строк кода напишет, а тот кто, сделает программу быстрой, удобной, легко расширяемой и мигрируемой. Так вот Николс был как раз тем программистом, который мог сопоставлять пару десяток строк для того чтобы сделать всего 2 строки, но при этом алгоритм работы программы не терялся. Напротив, программа работала быстрее и надежнее. Напарник, поначалу злился на своего друга, но со временем он понимал, что \"кодить\" это смысл жизни Николса и старался заняться чем-то интересным, чтобы \"хозяин\" (он его крайне редко так называл), после кодирования не забывал сделать забег по берегу океана с Напарником. Было уже давно за полчночь. На улице, где-то недалеко был слышен скрежет. Напарник не мог никак заснуть, но вскоре этот странный звук прекратился и все же сон его удался. Утром он был полон сил и энергии. Николса дома не было, но была оставлена записка со следующим содержанием: \"Привет дружище, как проснешься давай дёру к океану, я там\". И четырехногий друг недолго думая, рванул со всех лап к океану. Он несся сломя голову, скорость его составляла порядка 50 километров в час. Напарник добрался до океана в течение 3 минут. Он так рад был видеть своего друга, что сбил его с ног и начал ворошить его. Когда он закончил, Николс поднялся, слегка отряхнулся и побежал к маяку. Этот маяк находился в трех с половиной километрах от них. После того, как Николс и Напарник добрались до маяка, было решено подняться на него и посмотреть в сторону дома на северо-запад. Там все было так спокойно, что Напарник стал немного скучать, но он не показывал этого. Напротив, он держался до последнего. И вот день медленно, но верно подходил к концу, на часах было чуть больше восьми часов вечера, и наши друзья возвращались домой. По дороге в дом Николс захватил пару пирожных, арбуз и пачку ароматного чая.</p><p id='createdDate'>Отредактировано: <b>" + new Date().toLocaleDateString() + "</b></p><br /><p id='createdDate'>" + date_publish(n) + "</p>", 'История из жизни');
	else
		load_page(nav + "<h2>Story.</h2><p><p><h4>Introduction</h4>Today is March 13, 2017, outside the window minus 5 degrees Celsius. The weather whispers, cars are moving at a frenzied pace, people going Nicholls towards are sad. On this day Nicholls moved to work, it was about seven o'clock in the morning. To say that it was a wonderful morning, did not say anything. It was so beautiful that Nichols, as before, was not in a hurry to work. He tried to consider all that surrounded him: cars, trees, benches, frozen puddles, pigeons, eating yesterday's hides from sunflower seeds. This day he was remembered for life. Nichols is the protagonist of this story, he works as a programmer in a very large company called \"N\". From childhood he wanted to work with cars, in school until grade 11 he wanted to become an architect, and only in grade 11 he decided to become a designer. Why the designer? because he liked drawing. When entering the university, he chose CAD (Automated Design Systems), thinking that he would draw, eventually he realized that designing in a university is not enough, but a strong preparation for programming. The course on the third Nichols understands that he chose the profession in which he would like to develop his whole life. And here his adventures begin.<br /><br /><h4>Chapter 1</h4>Once, sitting at the student's bench, Nichols wondered what he would have wanted most in his life. His thoughts were so diverse, but the first thing he wanted to realize was writing his first application, simple, native. When given the necessary tools, he began to cod, day and night, day and night. In his folders on the desktop there was so much information that he occasionally cleaned them, because he liked the order. Nicholls constantly read the latest news, was aware of all that happens all over the world. In his programs he wrote a clean, understandable code, never wrote comments, considered them redundant. One day, he woke up early in the morning around three o'clock and decided to immerse himself in the world of discrete mathematics. He was easily given mathematics, and he easily understood every written word. Each time he read the theorem, he tried to prove it on his own. Sometimes luggage his knowledge was not enough, he turned to different sources. As for the humanities, he simply could not stand them. The technician is technician. When it began to dawn, Nichols finished with mathematics and was covered by a half-hour sleep.<br /><br /><h4>Chapter 2</h4>After awakening, Nichols brewed his own coffee. He loved coffee, but he did not drink more than one cup a day. At ten o'clock in the morning, he sat down at the computer, got acquainted with the latest news, and began writing the program. Again he opened the IDE (Integrated Development Environment) \"Visual Studio\", created a new project and began to translate his dreams into reality. His main task was to write a so understandable application that even a child could understand it without difficulty. At that time, Nichols had developed the order of a couple of hundred programs, they were on a variety of topics. It was like web services, and client-server applications, as well as a couple of online stores, but he did not have a single child application. And then went down two or three years Nichols began to write a children's app. Why baby? Yes, because all children love to play. He took as a basis the game \"Tap Tap Revenge 4\", modified the interface, completely changed the logic in the application, supplemented it with content. At that time it was only for two platforms - iOS and Android. It also made it cross-platform, it's the same iOS platform and Andoid, plus the development for Windows Phone. When it was time to publish the application to the stores, Nichols checked it hundreds of times a day, until he was sure there were any mistakes. After 100% certainty, he published it. The history of this application was incredible, although he did not spend money either on advertising, on promotion, or on all those little things that other developers spend. His application was downloaded around the world, it became so popular that every child knew who Nicholls was.<br /><br /><h4>Chapter 3</h4>After about two months, our hero appears in Australia, in a place so unusual for him. In this country, Nichols for the first time, he begins to learn about culture and acquires housing and necessities. Here he has new friends, business partners. About three years ago, Nichols had nothing (only a laptop thanks to which, later he made a fortune), and now he has his own business. He stopped working, he got a lot of free time. Now all his free time, Nichols travels and takes everything from life. One of the reasons why he moved to the hill was the dream of surfing. He lived on the island of Rottnest, skied on the board. It was a magnificent island, summer was there all year round. Nichols liked to spend his evenings on the island with his friend, it was a dog named Nasnik. I did not see my best friends. The partner liked to eat, often mischievous, but he was always at hand with his friend. Maybe that's why Nicholls called him Partner. Once Nichols and his partner went fishing, it was the first fishing, this season and the first trip to fishing with Partner. Before that, Nicholls did not take his friend. They arrived early, it was about five o'clock in the evening. Nicholls took up the assembly of the tent, and Mate did not hesitate to plunge into the water for a long time. The water to the touch was about eighteen degrees Celsius. At the beginning of the sixth Nichols, spread out the rod, put the slingshot and began to fish. He did not take more than one fishing rod. You would have seen how skillfully he had cut it, the cutting was perfected by one hundred percent. Hour after four, Nichols caught about a hundred fish. It was like perches, and mackerel, both cod and catfish. Nichols had one golden principle, because of which I respected him, it was the principle of \"catch-and-release\" - caught, let go. Fishing for Nicholls was something truly worthwhile, he could watch the float for days at a time. The partner was very happy about the catch of the owner, and from time to time he took out one or two fish from the net, while Nichols was making lures or was busy with something else. It was already about twelve o'clock in the morning, as the Partner saw in the distance, some kind of flickering object. He was frightened and pressed his tail, Nicholls took him in his arms and said: \"Do not be afraid, it's a firefly.\" There was a warm night ahead, and the sunrise was expected around seven o'clock.<br /><br /><h4>Chapter 4</h4>At seven in the morning it was 14 degrees above zero, Mate woke up just before eight. Nichols sat up all night without spammy. At the beginning of the ninth, the biting slightly deteriorated, perhaps because of the weather, because the wind changed its direction. The wind blew then from the north-west direction, then from the southeast. But soon it stopped altogether and completely cleared up. The clock was shown without fifteen twelve, as Nichols decided to have a bite. He liked to take a mountain of food with him, because was not alone. Feeding his partner, Nichols began to prepare the soup. He loved this soup and could eat it for days. After dinner, Nichols and Partner began to fish, Nichols caught on a float fishing rod, Mate constantly interfered under his feet, he did not do it on purpose. After sitting until late in the evening, and not seeing a single bite, Nichols decided to take a nap, asking Mate in case of biting, immediately wake him up. Nichols slept through the night, and woke up around six in the morning, when he saw Neparnik falling asleep in front of the fishing rod. He stroked it, covered it with a warm blanket, gave it a bone and laid it near him, and he began to catch. While Partner was asleep, Nichols caught a little more than fifty selected mackerel, probably he well fed. Each next was 200-300 grams larger than the previous one. And here's another bite, Nichols cuts the fish and hooks. It was the three hundred and forty-seventh fish counting, and without counting for all four hundred, sitting for another half hour, he decided to stop. Fishing was completed by four days exactly. Nicholls wrapped up and fed the Partner, had a bite to eat, and they moved out to the side of the house. The road was free, the clock was long past midnight, Nichols never took a hurry. As he always said a couple more days in a piggy bank. Early in the morning, Nichols and his partner arrived at the house, the road took just over three and a half hours. Leaping from the car Partner flew the Fly fly on his bunk and cut out a day and a half. Nichols meanwhile removed all the gear, hung the fishing pole in place, washed all his clothes, and planned to start the meal, when the phone rang. The old acquaintance of Kesha spoke on the receiver. They talked for about thirty-seven minutes, to be exact thirty-six minutes forty-two seconds. After the conversation, Nichols activated the airplane mode and began to eat. It was closer to dinner as Nichols reached his bed and flopped down without his hind legs.<br /><br /><h4>Chapter 5</h4>The next early morning, Nichols began to draft a plan. The plan was as follows: \"It was necessary to automate the process of energy conversion ...\". Nichols loved to learn everything new, to find some non-standard ways to solve the tasks. He set these tasks himself, because for about five years he worked for himself. The morning was sunny, Nichols stepped out onto the veranda and inhaled a breath of fresh ocean air. His thoughts were cheered up, and he decided to jog along the ocean shore. He moved out of the house a little later than nine in the morning, taking a phone with him. The jogging plan was just over 15 miles along the coast. The oceanic air, the incredible color of the water, the dolphins floating around the horizon, all this was so close to Nichols that many of them could only dream of. He stopped near a small bay, and saw half a mile of his close friend. It was a partner, you imagine, he woke up through the whole house, understood that there was nobody in it, and rushed to look for his friend. He found it quickly. Nicholls ran only a tenth and a half mile. He had several ideas in his head. The first was to change the algorithm for extracting energy, oil and other minerals. The next two, in the automation of the workflow associated with the airplane. All for not taking our hero, he always brought it to the end. But here was a large-scale task. And eventually you will find out whether he has allowed her or not. Time moved to lunch. The run was coming to an end and the Partner, to be honest, was already exhausted. They got to the house, had a bite of delicious food and took up each of their own business. Nicholls opened the laptop and started writing the code. My partner decided to rest. But literally an hour and a half later, our hero had to move out of the house. It was necessary to meet with one important person. As soon as they discussed important issues, Nichols took a bottle of Borjomi. And he moved slowly to the house.<br /><br /><h4>Chapter 6</h4>And at home Nicholsa was waiting for a small surprise. On the table lay a note with a request. In this note, it was said about some \"crypto-currency\". The whole point was to design the blockade technology. At that time, the very topical topic was the same crypto currency. And he began to implement it. You know a good programmer is not someone who writes more lines of code, but whoever makes the program fast, convenient, easily expandable and migratory. So Nichols was just the programmer who could match a couple of dozen lines in order to make only 2 lines, but the algorithm of the program was not lost. On the contrary, the program worked faster and more reliably. Partner, at first was angry with his friend, but eventually he understood that \"kodit\" is the meaning of Nichols' life and tried to do something interesting, so that the \"master\" (he rarely called it that), after coding did not forget to run for shore of the ocean with a partner. It was already a long time at half-time. On the street, somewhere near, there was a sound of grinding. The partner could not fall asleep, but soon this strange sound ceased and yet his dream was a success. In the morning he was full of strength and energy. Nicholls was not at home, but a note was left with the following content: \"Hello buddy, how to wake up, tear to the ocean.\" And a four-footed friend without thinking for a long time, jerked from all the paws to the ocean. He was rushing headlong, his speed was about 50 kilometers per hour. The partner reached the shore of the ocean for 3 minutes. He was glad to see so much his friend that he knocked him off his feet and began to ruffle him. When he had finished, Nicholls rose, shook himself slightly and ran toward the lighthouse. This lighthouse was three and a half kilometers from them. After Nichols and Mate reached the lighthouse, it was decided to climb onto it and look to the north-west. There everything was so calm that Mate became a little bored, but he did not show it. On the contrary, he held to the last. And then the day slowly but surely came to an end, the clock was just over eight o'clock in the evening, and our friends were going home. On the way to the house, Nichols grabbed a couple of cakes, a watermelon and a pack of fragrant tea.</p><p id='createdDate'>Edited: <b>" + new Date().toLocaleDateString() + "</b></p><br /><p id='createdDate'>" + date_publish(n) + "</p>", 'Story');
}

function work() {
	if (document.getElementById('flag').innerHTML === 'flag ru')
		load_page(nav + "<h2>Разработка.</h2><p>Профессия \"программист\" означает больше, чем просто написание программного кода. Эта профессия также включает в себя область аналитики, бизнеса, логистики и многое другое. Ниже представлен небольшой опыт коммерческого развития на разных языках программирования.<br /><br />Главное, что сейчас нужно миру - написать программу, которая могла бы удовлетворять всем запросам пользователя, а также предложить варианты (например: искусственный интеллект). И все это должно работать невероятно быстро и красиво.<br /><br />На мой взгляд, самая важная причина, которая покажет, что вы действительно востребованы, заключается в написании четко структурированного кода за короткое время с наименьшим количеством ошибок. Почему с наименьшим, да потому что нет программ без ошибок.<br /><br />Моя любимая цитата читается так: Всегда пишите код так, будто сопровождать его будет склонный к насилию психопат, который знает, где вы живете.</p><ul><li><a href='#' onclick='js()'>Js</a></li><li><a href='#' onclick='c()'>C#</a></li><li><a href='#' onclick='sql()'>T-SQL</a></li><li><a href='#' onclick='vb()'>VB.Net</a></li></li><li><a href='#' onclick='admin()'>Администрирование</a></li><li><a href='#' onclick='patterns()'>Паттерны проектирования</a></li><li><a href='http://github.com/nkhrulev/n.khrulev' target='_blank'>Репозиторий GitHub</a></li></ul><p><a href='https://money.yandex.ru/to/41001912434870' target='_blank'>Помощь проекту</a></p>", 'Разработка');
	else
		load_page(nav + "<h2>Working out.</h2><p>The profession of a programmer means more than just writing a program code. This profession also includes the field of analytics, business, logistics and much more. Below is a small experience of commercial development in different programming languages.<br /><br />The main thing that the world now needs is to write a program that could meet all the user's requests, and could also offer options (For example: artificial intelligence). And all this should work incredibly quickly and beautifully.<br /><br />In my opinion, the most important reason that will show that you are really demanded specials is writing a clearly structured code in a short time with the least amount of errors. Why the smallest, because there are no programs without errors.<br /><br />My favorite quote reads as follows: Write the program so that the fool accidentally does not break it.</p><ul><li><a href='#' onclick='js()'>Js</a></li><li><a href='#' onclick='c()'>C#</a></li><li><a href='#' onclick='sql()'>T-SQL</a></li><li><a href='#' onclick='vb()'>VB.Net</a></li></li><li><a href='#' onclick='admin()'>Administration</a></li><li><a href='#' onclick='patterns()'>Design patterns</a></li><li><a href='http://github.com/nkhrulev/n.khrulev' target='_blank'>Repositories GitHub</a></li></ul><p><a href='https://money.yandex.ru/to/41001912434870' target='_blank'>Donate</a></p>", 'Working out');
}

function literature() {
	if (document.getElementById('flag').innerHTML === 'flag ru')
		load_page(nav + "<h2>Список литературы.</h2><ul><li>JS<ul><li><b>Джон Резиг, Расс Фергюсон, Джон Пакстон:</b> JavaScript для профессионалов</li><li><b>Ари Лернер:</b> <a href='https://www.ng-book.com/' target='_blank'>ng-book</a></li><li><b>Фелипе Кури, Ари Лернер, Нейт Мюррей, Карлос Таборда:</b> <a href='https://www.ng-book.com/2/' target='_blank'>ng-book2</a></li></ul></li><li>C++<ul><li><b>Джеффри Рихтер:</b> Программирование на языке Visual C++</li></ul></li><li>C#<ul><li><b>Джеффри Рихтер:</b> Программирование на платформе Microsoft.NET Framework 4.5 на языке C#</li><li><b>Герберт Шилдт:</b> Полный справочник C# 4.0</li></ul></li><li>SQL<ul><li><b>Ицик Бен-Ган:</b> Microsoft SQL Server 2012. Высокопроизводительный код T-SQL. Оконные функции</li><li><b>Ицик Бен-Ган, Сарк, Талмадж:</b> Microsoft SQL Server 2012. Создание запросов. Учебный курс Microsoft</li></ul></li><li>Классика<ul><li><b>Кнут Дональд Эрвин:</b> Искусство программирования</li><li><b>Стив Макконнелл:</b> Совершенный код</li><li><b>Мартин Фаулер, Кент Бек, Джон Брант, Уильям Апдайк, Дон Робертс, Эрих Гамма:</b> Рефакторинг. Улучшение существующего кода</li></ul></li></ul><p id='createdDate'>" + date_publish(n) + "</p>", "Литература");
	else
		load_page(nav + "<h2>List literature.</h2><ul><li>JS<ul><li><b>John Resig, Russ Ferguson, John Paxton:</b> Pro JavaScript Techniques</li><li><b>Ari Lerner:</b> <a href='https://www.ng-book.com/' target='_blank'>ng-book</a></li><li><b>Felipe Coury, Ari Lerner, Nate Murray, & Carlos Taborda:</b> <a href='https://www.ng-book.com/2/' target='_blank'>ng-book2</a></li></ul></li><li>C++<ul><li><b>Jeffrey Richter:</b> Windows Via C/C++</li></ul></li><li>C#<ul><li><b>Jeffrey Richter:</b> CLR via C#</li><li><b>Herbert Schildt:</b> The Complete Reference C# 4.0</li></ul></li><li>SQL<ul><li><b>Itzik Ben-Gan:</b>Microsoft SQL Server 2012: High-Performance T-SQL: Using Window Functions</li><li><b>Itzik Ben-Gan, Sark, Talmage:</b> Microsoft SQL Server 2012. Creating queries. Microsoft Training Course</li></ul></li><li>First<ul><li><b>Knut Donald Erwin:</b> The art of programming</li><li><b>Steve McConnell:</b> Code Complete: Second Edition</li><li><b>Martin Fowler, Kent Beck, John Brunt, William Updike, Don Roberts & Erich Gamma:</b> Refactoring: Improving the Design of Existing Code</li></ul></li></ul><p id='createdDate'>" + date_publish(n) + "</p>", "Literature");
}

function js(){
	if (document.getElementById('flag').innerHTML === 'flag ru')
		load_page(nav + back + "<h3>Не индексировать.</h3><p>Всем хорошего дня! Сегодня я хотел бы поделиться с вами интересным лайфхаком: а состоит он в следующем. Если вы копируете статьи других людей, поисковые системы считают, что эти статьи не уникальны, поэтому ваш сайт теряет результаты поиска. Чтобы избежать этого фактора, вам просто нужно заключить неуникальный контент в эти теги:</p><pre>&lt;noindex&gt;Non-unique text from a foreign article.&lt;/noindex&gt;</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Текст под катом.</h3><p>Как сделать текст под катом ?. Недавно я столкнулся с проблемой скрытия текста под катом. У меня нет флажка «Развернуть шаблоны виджета» в моем блоге, а ссылка «Далее» не работает. Я не знаю, с чем это связано. Поэтому возьмите и напишите свою функцию:</p><pre>&lt;html&gt;<br />	&lt;title&gt;&lt;/title&gt;<br />	&lt;head&gt;<br />		&lt;script&gt;<br />			function Cut(i){<br />				if (document.getElementById('Div' + i).style.display == 'block'){<br />					document.getElementById('A' + i).text = 'Learn More';<br />					document.getElementById('Div' + i).style.display = 'none';<br />				} else {<br />					document.getElementById('A' + i).text = 'Collapse';<br />					document.getElementById('Div' + i).style.display = 'block';<br />				}<br />				return false;<br />			}<br />		&lt;/script&gt;<br />	&lt;/head&gt;<br />	&lt;body&gt;<br />		&lt;a href=\"javascript:void(0)\" id=\"A0\" onclick=\"Cut(0);\"&gt;Learn More&lt;/a&gt;&lt;br/&gt;<br />		&lt;div id=\"Div0\" style='display: none;'&gt;<br />			This is the text under the cut 0...<br />		&lt;/div&gt;<br /><br />		&lt;a href=\"javascript:void(0)\" id=\"A1\" onclick=\"Cut(1);\"&gt;Learn More&lt;/a&gt;&lt;br/&gt;<br />		&lt;div id=\"Div1\" style='display: none;'&gt;<br />			This is the text under the cut 1...<br />		&lt;/div&gt;<br /><br />		&lt;!--...--&gt;<br /><br />		&lt;a href=\"javascript:void(0)\" id=\"A1000\" onclick=\"Cut(1000);\"&gt;Learn More&lt;/a&gt;&lt;br/&gt;<br />		&lt;div id=\"Div1000\" style='display: none;'&gt;<br />			This is the text under the cut n...<br />		&lt;/div&gt;<br />	&lt;/body&gt;<br />&lt;/html&gt;</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Счастливого Нового года.</h3><pre>&lt;!-- html --&gt;<br />&lt;div id=\"t\"&gt;&lt;/div&gt;<br /><br />// js<br />&lt;script&gt;<br />	window.onload = time();<br />	function time() {<br />		timeend = new Date();<br />		timeend = new Date(timeend.getYear() > 1900 ? (timeend.getYear() + 1) : (timeend.getYear() + 1901), 0, 1);<br />		today = new Date();<br />		today = Math.floor((timeend-today) / 1000);<br />		timestr=\"Before the new \" + (new Date().getYear() + 1901) + \" year, there are: \" + today + \" seconds\";<br />		document.getElementById('t').innerHTML = timestr;<br />		window.setTimeout(\"time()\", 1000);<br />	}<br />&lt;/script&gt;</pre><div id='timer'>" + hny() + "</div><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Курсы валют онлайн.</h3><p>Чтобы добавить этот виджет, просто возьмите следующий код:</p><pre>&lt;script src=\"https://s3.tradingview.com/external-embedding/embed-widget-market-overview.js\"&gt;<br />{<br />	\"showChart\": false,<br />	\"width\": \"100%\",<br />	\"height\": \"200\",<br />	\"tabs\": [{<br />		\"title\": \"Exchange Rates\",<br />		\"symbols\": [{<br />			\"s\": \"FX_IDC:EURRUB\",<br />			\"d\": \"Euro\"<br />        	},<br />        	{<br />          		\"s\": \"FX_IDC:USDRUB\",<br />          		\"d\": \"Dollar\"<br />        	}]<br />    	}]<br />}<br />&lt;/script&gt;</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>DataTables: Order cells top.</h3><p>Пусть есть некоторый набор данных, все данные содержатся в одной таблице (элемент DataTables), поэтому необходимо, чтобы была одна строка заголовков, а другая сумма строк (суммы в строках с числовыми значениями). После нескольких поисков мы решим эту проблему следующим образом. В DataTables добавим <b>orderCellsTop: true</b></p><pre>$('#dataTables').load('url', function(){<br />	orderCellsTop: true,<br />});</pre><p>В результате сортировка будет выполняться исключительно на 1 строке (по названию таблицы). И сколько бы ни было строк в таблице.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>DataTables: Не отображается кнопка Excel.</h3><p>Если вы не видите кнопку выгрузки в Excel в IE9 и более ранних версиях, вы должны указать следующий метатег:</p><pre>&lt;meta http-equiv='x-ua-compatible' content='IE=10'&gt;</pre><p>добавьте его между тегами <b>&lt;head&gt; ... &lt;/head&gt;</b>. По всем вопросам, связанными с документацией по DataTables, вы можете ознакомиться на данном <a href='http://datatables.net' target='_blank'>ресурсе</a>. Вся соответствующая информация находится в открытом исходном коде.</p><p id='createdDate'>" + date_publish(n) + "</p>", 'Js');
	else
		load_page(nav + back + "<h3>No index.</h3><p>Friends, all good afternoon! Today I want to share with you an interesting lifhak: it consists in the following. If you copy other people's articles, the search engines consider these articles to be non-unique, thereby your site loses in search results. In order to avoid this factor, you simply need to enclose non-unique content in these tags:</p><pre>&lt;noindex&gt;Non-unique text from a foreign article.&lt;/noindex&gt;</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Text under the cut.</h3><p>How to make the text under the cut ?. Recently I ran into the problem of hiding the text under the cat. I do not have the checkbox \"Expand widget templates\" in my blog, and the \"Next\" link does not work. I do not know what this is connected with. So take and write your function:</p><pre>&lt;html&gt;<br />	&lt;title&gt;&lt;/title&gt;<br />	&lt;head&gt;<br />		&lt;script&gt;<br />			function Cut(i){<br />				if (document.getElementById('Div' + i).style.display == 'block'){<br />					document.getElementById('A' + i).text = 'Learn More';<br />					document.getElementById('Div' + i).style.display = 'none';<br />				} else {<br />					document.getElementById('A' + i).text = 'Collapse';<br />					document.getElementById('Div' + i).style.display = 'block';<br />				}<br />				return false;<br />			}<br />		&lt;/script&gt;<br />	&lt;/head&gt;<br />	&lt;body&gt;<br />		&lt;a href=\"javascript:void(0)\" id=\"A0\" onclick=\"Cut(0);\"&gt;Learn More&lt;/a&gt;&lt;br/&gt;<br />		&lt;div id=\"Div0\" style='display: none;'&gt;<br />			This is the text under the cut 0...<br />		&lt;/div&gt;<br /><br />		&lt;a href=\"javascript:void(0)\" id=\"A1\" onclick=\"Cut(1);\"&gt;Learn More&lt;/a&gt;&lt;br/&gt;<br />		&lt;div id=\"Div1\" style='display: none;'&gt;<br />			This is the text under the cut 1...<br />		&lt;/div&gt;<br /><br />		&lt;!--...--&gt;<br /><br />		&lt;a href=\"javascript:void(0)\" id=\"A1000\" onclick=\"Cut(1000);\"&gt;Learn More&lt;/a&gt;&lt;br/&gt;<br />		&lt;div id=\"Div1000\" style='display: none;'&gt;<br />			This is the text under the cut n...<br />		&lt;/div&gt;<br />	&lt;/body&gt;<br />&lt;/html&gt;</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Happy New Year.</h3><pre>&lt;!-- html --&gt;<br />&lt;div id=\"t\"&gt;&lt;/div&gt;<br /><br />// js<br />&lt;script&gt;<br />	window.onload = time();<br />	function time() {<br />		timeend = new Date();<br />		timeend = new Date(timeend.getYear() > 1900 ? (timeend.getYear() + 1) : (timeend.getYear() + 1901), 0, 1);<br />		today = new Date();<br />		today = Math.floor((timeend-today) / 1000);<br />		timestr=\"Before the new \" + (new Date().getYear() + 1901) + \" year, there are: \" + today + \" seconds\";<br />		document.getElementById('t').innerHTML = timestr;<br />		window.setTimeout(\"time()\", 1000);<br />	}<br />&lt;/script&gt;</pre><div id='timer'>" + hny() + "</div><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Course online.</h3><p>To add this widget, you need to take the following code:</p><pre>&lt;script src=\"https://s3.tradingview.com/external-embedding/embed-widget-market-overview.js\"&gt;<br />{<br />	\"showChart\": false,<br />	\"width\": \"100%\",<br />	\"height\": \"200\",<br />	\"tabs\": [{<br />		\"title\": \"Exchange Rates\",<br />		\"symbols\": [{<br />			\"s\": \"FX_IDC:EURRUB\",<br />			\"d\": \"Euro\"<br />        	},<br />        	{<br />          		\"s\": \"FX_IDC:USDRUB\",<br />          		\"d\": \"Dollar\"<br />        	}]<br />    	}]<br />}<br />&lt;/script&gt;</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>DataTables: Order cells top.</h3><p>Let there be some data set, all the data is contained in one table (DataTables element), so it is necessary that there is one line of headers, and the other line totals (sums on the lines with numerical values). After a few searches, we solve this problem in the following way. In DataTables we add <b>orderCellsTop: true</b></p><pre>$('#dataTables').load('url', function(){<br />	orderCellsTop: true,<br />});</pre><p>As a result, the sorting will be exclusively on 1 line (on the title of the table). And no matter how many rows in the table.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>DataTables: Excel button is not displayed.</h3><p>If you do not see the unload button in Excel in IE9 and earlier versions, you must specify the following meta tag:</p><pre>&lt;meta http-equiv='x-ua-compatible' content='IE=10'&gt;</pre><p>add it between the tags <b>&lt;head&gt; ... &lt;/head&gt;</b>. With all the questions related to the documentation on DataTables, you can see the following <a href='http://datatables.net' target='_blank'>resource</a>. All the relevant information is in the open source code.</p><p id='createdDate'>" + date_publish(n) + "</p>", 'Js');
}

function c(){
	if (document.getElementById('flag').innerHTML === 'flag ru')
		load_page(nav + back + "<a href='#' onclick='exam_70483()'>Экзамен 70-483 (Программирование на языке C#)</a><h3>Как получить доступ к закрытому члену другого класса.</h3><p>Для извлечения приватной переменной, используйте следующий код:</p><pre>using System.Reflection;<br /><br />internal sealed class SecretKeeper {<br />	private int _secret = 42;<br />}<br /><br />FieldInfo fieldInfo = typeof(SecretKeeper).GetField(\"_secret\", BindingFlags.Instance | BindingFlags.NonPublic);<br />int result = (int)fieldInfo.GetValue(new SecretKeeper();<br /><br />// output 42</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Клиент Rest.</h3><p>Чтобы работать с клиентом Rest, вам необходимо создать проект «Консольное приложение (.NET Core)». Установить пару пакетов и реализовать следующие функции:<br /><br /><b>Package Manager Console:</b></p><pre>Install-Package Microsoft.NETCore.App -Version 2.0.0<br />Install-Package System.Runtime.Serialization.Json -Version 4.3.0<br />Install-Package System.Runtime.Serialization.Primitives -Version 4.3.0</pre><p><b>Program.cs:</b></p><pre>using System;<br />using System.Collections.Generic;<br />using System.Net.Http;<br />using System.Net.Http.Headers;<br />using System.Runtime.Serialization.Json;<br />using System.Threading.Tasks;<br /><br />namespace WebAPIClient<br />{<br />	class Program<br />	{<br />		static void Main(string[] args)<br />		{<br />			var repositories = ProcessRepositories().Result;<br /><br />			foreach (var repo in repositories)<br />				Console.WriteLine(String.Format(\"Year: {0}, Month: {1}, Fact: {2}, Plan: {3}\", repo.Period.Name, repo.Period.Month, repo.Fact, repo.Plan));<br /><br />			Console.ReadKey();<br />		}<br /><br />		private static async Task<List<Data>> ProcessRepositories()<br />		{<br />			var client = new HttpClient();<br />			client.DefaultRequestHeaders.Accept.Clear();<br />			client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(\"application/json\"));<br />			client.DefaultRequestHeaders.Add(\"User-Agent\", \".NET Foundation Repository Reporter\");<br /><br />			var serializer = new DataContractJsonSerializer(typeof(List<Data>));<br />			var streamTask = client.GetStreamAsync(\"http://your_api_service\");<br />			var repositories = serializer.ReadObject(await streamTask) as List<Data>;<br />			return repositories;<br />		}<br />	}<br />}</pre><p><b>Data.cs:</b></p><pre>using System;<br />using System.Runtime.Serialization;<br /><br />namespace WebAPIClient<br />{<br />	[DataContract(Name = \"repo\")]<br />	public class Data<br />	{<br />		[DataMember(Name = \"period\")]<br />		public Period Period { get; set; }<br />		[DataMember(Name = \"fact\")]<br />		public decimal Fact { get; set; }<br />		[DataMember(Name = \"plan\")]<br />		public decimal Plan { get; set; }<br />	}<br /><br />	[DataContract(Name = \"period\")]<br />	public class Period<br />	{<br />		[DataMember(Name = \"name\")]<br />		public String Name { get; set; }<br />		[DataMember(Name = \"month\")]<br />		public Int32 Month { get; set; }<br />	}<br />}</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Элвис оператор.</h3><pre>var e = new Elvis();<br />Console.WriteLine(e<b style='color:red;'>?.</b>ElvisString <b style='color:red;'>??</b> \"null\");		//	ElvisString<br />Console.WriteLine(e<b style='color:red;'>?.</b>ElvisStringNull <b style='color:red;'>??</b> \"null\");	//	null<br /><br />class Elvis<br />{<br />	public String ElvisString = \"ElvisString\";<br />	public String ElvisStringNull;<br />}</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Упаковка и Распаковка.</h3><p>Ниже приведен простой пример упаковки и распаковки.</p><pre>#region Boxing_Unboxing<br />Int32 b = 0;<br />Object o = b;       // Boxing<br />Int32 u = (Int32)o; // Unboxing<br />#endregion</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Статические классы и экземпляры.</h3><p>Итак, для чего необходимо использовать статические классы, методы и поля ?.<br />Если вы собираетесь реализовать объект реального мира, используйте обычный класс (<b>not static</b>). Например, автомобиль с такими атрибутами, как: цвет, скорость, размеры и т.д.<br />Если стоит задача вывести некоторые действия на экран или реализовать загрузку данных в Excel, <b>используйте статические классы</b>, поля и методы.<br /><b>Пример вызова статического класса:</b></p><pre>StaticClass.StaticMethod;</pre><p><b>Пример вызова экземплярного класса:</b></p><pre>InstanceClass ic = new InstanceClass();<br />ic.GetInstanceMethod();</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Сравнение объектов и типов.</h3><pre>#region Equality<br />Object a1 = 5;<br />Object a2 = 5;<br />string b1 = \"a\";<br />string b2 = \"a\";<br />Object c1 = \"b\";<br />Object c2 = \"b\";<br />int d1 = 1;<br />int d2 = 1;<br /><br />Console.WriteLine(\"a1 == a2: \" + (a1 == a2));   // False<br />Console.WriteLine(\"b1 == b2: \" + (b1 == b2));   // True<br />Console.WriteLine(\"c1 == c2: \" + (c1 == c2));   // True<br />Console.WriteLine(\"d1 == d2: \" + (d1 == d2));   // True<br /><br />Console.WriteLine(\"a1 == a2: \" + (a1.Equals(a2)));   // True<br />Console.WriteLine(\"b1 == b2: \" + (b1.Equals(b2)));   // True<br />Console.WriteLine(\"c1 == c2: \" + (c1.Equals(c2)));   // True<br />Console.WriteLine(\"d1 == d2: \" + (d1.Equals(d2)));   // True<br /><br />Console.WriteLine(\"a1 == a2: \" + (ReferenceEquals(a1, a2)));   // False<br />Console.WriteLine(\"b1 == b2: \" + (ReferenceEquals(b1, b2)));   // True<br />Console.WriteLine(\"c1 == c2: \" + (ReferenceEquals(c1, c2)));   // True<br />Console.WriteLine(\"d1 == d2: \" + (ReferenceEquals(d1, d2)));   // False<br />#endregion</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Параметры Ref и Out.</h3><pre>The ref and out parameters to get a more complex value. <br />	ref: the initialized value is passed; <br />	out: An uninitialized value is passed. <br />)</pre><p>В качестве примера: я использую класс для выгрузки документа Excel. <br />Он проверяет только те значения, которые не попадают в указанный диапазон, обрезаются и записываются в параметр (ref или out). <br /><br />Пример использования <b>ref</b> параметра:</p><pre>string error = \"\";<br />var excel = new ExcelPackage(FileContent);<br />var dt = excel.ToDataTable(ref error);<br /><br />public static DataTable ToDataTable(this ExcelPackage package, ref string error)<br />{<br />	// TODO: Your logic<br />		error += value + \", \";<br />	<br />	return table;<br />}</pre><p>Пример использования <b>out</b> параметра:</p><pre>string error;<br />var excel = new ExcelPackage(FileContent);<br />var dt = excel.ToDataTable(out error);<br /><br />public static DataTable ToDataTable(this ExcelPackage package, out string error)<br />{<br />	error = \"\";<br />	<br />	// TODO: Your logic<br />		error += value + \", \";<br />	<br />	return table;<br />}</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Состояние сеанса веб-форм.</h3><p>Не так давно мне была поставлена следующая задача. Необходимо было исправить редко возникающую ошибку.<br /><br />Невозможно сериализовать состояние сеанса. В режиме <b>'StateServer'</b> и <b>'SQLServer'</b> ASP.NET будет сериализовать объекты состояния сеанса, и в результате не разрешаются объекты, не связанные с сериализацией, или объекты MarshalByRef. Такое же ограничение применяется, если аналогичная сериализация выполняется в пользовательском хранилище состояний сеанса в режиме 'Custom'.<br /><br />Немного подумав, я начал его реализовывать. Основная проблема заключалась в том, чтобы написать сеанс из DataSet. Поскольку DataSet был довольно тяжелым, соответствующая ошибка возникала время от времени. Было решено сохранить фильтры. Примеры кода также приведены ниже.</p><pre>// C#:<br />protected void Page_Load(object sender, EventArgs e)<br />{<br />	if (!IsPostBack)<br />	{<br />		var c = new CSessionHelper();<br />		c.ClearSession();<br />	}<br /><br />	if (string.IsNullOrEmpty(Session[\"uni_login\"].ToString())) Response.Redirect(@\"../login.aspx\");<br />	if (!LoginHelper.IsAccessDoneToPage(Session[\"uni_login\"].ToString(), Session[\"uni_login_type\"].ToString())) Response.Redirect(\"../Default.aspx\");<br /><br />	sc_clients.ConnectionString = \"Server=\" + Application[\"sql_server\"] + \"; Database=\" + Application[\"sql_database\"]; User ID=\" + Session[\"uni_login\"] + \"; Password=\" + Session[\"uni_password\"];<br />	if (!IsPostBack)<br />	{<br />		if (sc_clients.State != ConnectionState.Open)<br />		{<br />			sc_clients.Open();<br />			bindDropDown();<br />			GetValueFilter();<br />			sc_clients.Close();<br />		}<br />	}<br />}<br /><br />private void GetValueFilter()<br />{<br />	try<br />	{<br />		SqlDataAdapter SqlAdapter = new SqlDataAdapter(string.Format(\"exec dbo.sp_your_name @UserLogin = '{0}', @Get = {1}\", Session[\"uni_login\"], true), sc_clients);<br />		DataTable dt = new DataTable();<br />		SqlAdapter.Fill(dt);<br /><br />		if (dt.Rows.Count > 0)<br />		{<br />			ddl_search_distributor.SelectedValue = dt.Rows[0][2].ToString();<br />			ddl_teadm.SelectedValue = dt.Rows[0][3].ToString();<br />			tbID.Text = dt.Rows[0][4].ToString();<br />			tbFIO.Text = dt.Rows[0][5].ToString();<br />			chb_view_only_active.Checked = Convert.ToBoolean(dt.Rows[0][6]);<br />		}<br /><br />		bindData(tbFIO.Text, Convert.ToInt32(ddl_teadm.SelectedValue), tbID.Text,<br />		Convert.ToInt32(ddl_search_distributor.SelectedValue));<br />	}<br />	catch (Exception ex)<br />	{<br />		error_label.Text = ex.Message;<br />	}<br />}<br /><br />private void UpdateValueFilter()<br />{<br />	try<br />	{<br />		if (sc_clients.State != ConnectionState.Open) sc_clients.Open();<br />		using (SqlCommand command = sc_clients.CreateCommand())<br />		{<br />			command.CommandText = string.Format(\"exec dbo.sp_your_name @UserLogin = '{0}', @Distributor = {1}, @Team = {2}, @CodeTP = '{3}', @FIO = '{4}', @Flag = {5}\",<br />			Session[\"uni_login\"], Convert.ToInt32(ddl_search_distributor.SelectedValue), Convert.ToInt32(ddl_teadm.SelectedValue), tbID.Text, tbFIO.Text, chb_view_only_active.Checked);<br />			command.ExecuteNonQuery();<br />		}<br />		sc_clients.Close();<br />	}<br />	catch (Exception ex)<br />	{<br />		error_label.Text = ex.Message;<br />	}<br />}<br /><br />private void bindData(string FIO, int team, string ID, int id_distributor)<br />{<br />	if (ds_representative1.v_representative.Count > 8000)<br />	{<br />		dg_representative.Visible = false;<br />		error_label.Font.Size = 14;<br />		error_label.Text = \"The session contains too large a set of data, for correct unloading use the filter.\";<br />	}<br />	else<br />	{<br />		// There was this mistake.<br />		Session[\"ds_representative\"] = ds_representative1;<br />		error_label.Text = \"\";<br />		error_label.Font.Size = 10;<br />		dg_representative.Visible = true;<br />	}<br />	UpdateValueFilter();<br />}<br /><br />// T-SQL:<br />USE [YourDbName]<br />GO<br /><br />SET ANSI_NULLS ON<br />GO<br /><br />SET QUOTED_IDENTIFIER ON<br />GO<br /><br />SET ANSI_PADDING ON<br />GO<br /><br />CREATE TABLE [dbo].[YourTableName](<br />	[Id] [int] IDENTITY(1,1) NOT NULL,<br />	[UserLogin] [varchar](50) NOT NULL,<br />	[Distributor] [int] NULL,<br />	[Team] [int] NULL,<br />	[CodeTP] [varchar](500) NULL,<br />	[FIO] [varchar](500) NULL,<br />	[Flag] [bit] NULL,<br />	CONSTRAINT [PK_representative_report_filter] PRIMARY KEY CLUSTERED<br />(<br />	[Id] ASC<br />)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],<br />	CONSTRAINT [UQ__represen__7F8E8D5E0F3A8FCB] UNIQUE NONCLUSTERED<br />(<br />	[UserLogin] ASC<br />)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]<br />) ON [PRIMARY]<br /><br />GO<br /><br />SET ANSI_PADDING OFF<br /><br />GO<br /></pre><p>Смысл заключается в следующем:<br />При авторизации мы пишем в таблицу исходные данные, если их нет, и мы берем их в нужные нам элементы управления. Если в базе данных есть запись, мы просто извлекаем данные из базы данных и заполняем ее данными. Как вы можете видеть, все довольно просто.<br /><br />Старайтесь сразу писать на MVC.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>API яндекс карт.</h3><p>Как работает API-интерфейс Yandex Map ?. Есть файл - mapReport.js, в нем есть функция getMapsModal. Функция извлекает метод getMapsModal из другого файла - mapReportService.js, который передает управление контроллеру MapController.cs для извлечения данных. После обработки данных мы передаем объект данных в представление таким образом <b>$scope.maps = data;</b></p><pre>// mapReport.js<br />var getMapsModal = function (ObjectType) {<br />	mapReportService.getMapsModal(ObjectType).then(function (maps) {<br />	var data = [];<br />	maps.forEach(function (d, i) {<br />		data.push({<br />			mapId: d.mapId,<br />			objectType: d.objectType,<br />			objectName: d.objectName,<br />			objectId: d.objectId,<br />			color: d.color,<br />			geometry: {<br />				type: 'Polygon',<br />				coordinates: d.coordinates == null ? [] : JSON.parse(d.coordinates)<br />			},<br />			properties: {<br />				mapId: d.mapId,<br />				objectName: d.objectName,<br />				objectType: d.objectType,<br />				objectId: d.objectId,<br />				color: d.color<br />			}<br />		});<br />	});<br />	$scope.maps = data;<br />	});<br />};<br /><br />// mapReportService.js<br />var _mapsModal = [];<br />var _getMapsModal = function (ObjectType) {<br />	var deferred = $q.defer();<br />	$http.get(\"/api/maps/\" + ObjectType)<br />	.then(function (result) {<br />		angular.copy(result.data, _mapsModal);<br />		deferred.resolve(result.data);<br />	},<br />	function (error) {<br />		deferred.reject(error.data);<br />	});<br />	return deferred.promise;<br />};<br /><br />return {<br />mapsModal: _mapsModal,<br />	getMapsModal: _getMapsModal,<br /><br />};<br /><br />// MapController.cs<br />[Route(\"{ObjectType:int}\")]<br />public HttpResponseMessage GetMapsModal(int ObjectType)<br />{<br />	var currentUser = context.Users.FirstOrDefault(u =&gt; u.Login == RequestContext.Principal.Identity.Name);<br />	if (currentUser == null)<br />		return Request.CreateResponse(HttpStatusCode.Unauthorized, new { message = \"Error authentication.\" });<br /><br />	var maps = context.Maps.Where(m =&gt; m.ObjectType == (ObjectType)ObjectType && m.Coordinates != null).Select(getMapProjection).ToList();<br /><br />	return Request.CreateResponse(HttpStatusCode.Created, maps);<br />}<br /><br />// And in the presentation made: ViewMap.cshtml<br />&lt;ya-geo-object ng-repeat=\"map in maps\" ya-source=\"map\" ya-options=\"{fillColor: '{{map.color}}',strokeColor: '#0000FF', opacity: 0.4, strokeWidth: 1.5}\"&gt;&lt;/ya-geo-object&gt;</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Html разметка.</h3><p>Прошло ровно два года, и я снова создаю свою стандартную папку с именем «@n.khrulev» и заполняю ее контентом. Я начну в соответствии со стандартом:</p><pre>&lt;html&gt;<br />&lt;head&gt;<br />	&lt;title&gt;HTML 5&lt;/title&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />	&lt;h1&gt;HTML 5&lt;/h1&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;<br /></pre><p>Я не буду описывать ничего, что делает тег h1, и зачем нужен тег title или body. Вся литература доступна по следующему <a href='http://htmlbook.ru' target='_blank'>адресу</a>.<br />После создания разметки добавьте стили в файл: style.css</p><pre>#html5{<br />	text-align: center;<br />}<br /></pre><p>В html-коде мы подключаем внешний файл со стилями:</p><pre>&lt;link rel = \"stylesheet\" href=\"css/style.css\" /&gt;</pre><p>Давайте добавим простой скрипт (js.js), который будет приветствовать нас на нашем сайте:</p><pre>function helloHTML5(){<br />	var d = new Date();<br />	alert(\"Today: \" + d.getDate() + \".\" + (d.getMonth() + 1) + \".\" + d.getFullYear());<br />	document.getElementById(\"allres\").innerHTML = \"all rights reserved. \" + d.getFullYear() + \" &copy;\";<br />}</pre><p>Этот скрипт возвращает текущую дату и текущий год соответственно.<br />Разметка (index.html) имеет следующий вид:</p><pre>&lt;html&gt;<br />&lt;head&gt;<br />	&lt;title&gt;HTML 5&lt;/title&gt;<br />	&lt;link rel=\"stylesheet\" href=\"css/style.css\" /&gt;<br />	&lt;script type=\"text/javascript\" src=\"scripts/js.js\"&gt;&lt;/script&gt;<br />&lt;/head&gt;<br />&lt;body onload='helloHTML5()'&gt;<br />	&lt;h1 id='html5'&gt;HTML 5&lt;/h1&gt;<br />	&lt;p id='allres'&gt;&lt;/p&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;<br /></pre><p>Стили (style.css):</p><pre>#html5{<br />	text-align: center;<br />}<br /><br />#allres{<br />	text-align: center;<br />	font-family: cursive;<br />}</pre><p>Пока что мы ничего не сделали. Итак, начнем. Давайте сделаем незначительные изменения в нашей разметке следующим образом:</p><pre>&lt;html&gt;<br />&lt;head&gt;<br />	&lt;title&gt;HTML 5&lt;/title&gt;<br />	&lt;link rel=\"stylesheet\" href=\"css/style.css\" /&gt;<br />	&lt;script type=\"text/javascript\" src=\"scripts/jquery.min.js\"&gt;&lt;/script&gt;<br />	&lt;script type=\"text/javascript\" src=\"scripts/pb.js\"&gt;&lt;/script&gt;<br />	&lt;script type=\"text/javascript\" src=\"scripts/js.js\"&gt;&lt;/script&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />	&lt;div id=\"container\" &gt;&lt;/div&gt;<br />		&lt;div id='PreLoader'&gt;<br />		&lt;a href='http://htmlbook.ru/html5' target='_blank'&gt;&lt;h1 id='html5'&gt;&lt;/h1&gt;&lt;/a&gt;<br />		&lt;p id='today'&gt;&lt;/p&gt;<br />		&lt;p id='allres'&gt;&lt;/p&gt;<br />	&lt;/div&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;<br /></pre><p>Давайте изменим стили:</p><pre>#PreLoader{<br />	display: none;<br />	position: fixed;<br />    	top: 50%;<br />    	left: 50%;<br />    	-webkit-transform: translate(-50%, -50%);<br />    	transform: translate(-50%, -50%);<br />}<br /><br />#container{<br />	position: fixed;<br />    	top: 50%;<br />    	left: 50%;<br />    	-webkit-transform: translate(-50%, -50%);<br />    	transform: translate(-50%, -50%);<br />}<br /><br />#allres,<br />#today<br />{<br />	font-family: cursive;<br />}<br /><br />#container {<br />	width: 175px;<br />	height: 175px;<br />	position: relative;<br />}</pre><p>Изменим скрипт:</p><pre>$(window).on('load', function() {<br />	var bar = new ProgressBar.Circle(container, {<br />		color: '#aaa',<br />		strokeWidth: 3,<br />		trailWidth: 1,<br />		easing: 'easeInOut',<br />		duration: 2500,<br />		text: { autoStyleContainer: false },<br />		from: { color: '#aaa', width: 1 },<br />		to: { color: '#555', width: 3 },<br />		step: function(state, circle) {<br />			circle.path.setAttribute('stroke', state.color);<br />			circle.path.setAttribute('stroke-width', state.width);<br /><br />			var value = Math.round(circle.value() * 100);<br />			if (value === 0)<br />				circle.setText('');<br />			else<br />				circle.setText(value + \"%\");<br />	    }<br />	});<br />	<br />	bar.text.style.fontFamily = '\"Raleway\", Helvetica, sans-serif';<br />	bar.text.style.fontSize = '2rem';<br />	bar.animate(1.0);<br />    	var $preloader = $('#container');<br />	$preloader.delay(2200).fadeOut('slow');<br />	setTimeout(function() { GetDate() }, 2900);<br />});<br /><br />function GetDate(){<br />	var d = new Date();<br />	document.getElementById(\"today\").innerHTML = \"Today: \" + d.getDate() + \".\" + (d.getMonth() + 1) + \".\" + d.getFullYear();<br />	document.getElementById(\"html5\").innerHTML = \"HTML 5\";<br />	document.getElementById(\"allres\").innerHTML = \"all rights reserved. \" + d.getFullYear() + \" &copy;\";<br />	document.getElementById(\"PreLoader\").style.display=\"block\";<br />}<br /></pre><p>Индикатор выполнения загружен, и больше ничего не видно. После того, как панель загрузилась, я скрою ее и покажу остальную часть содержимого.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Удаляем командный проект.</h3><p>Чтобы удалить командный проект, выполните следующие действия (необходимо войти в TFS):<br />1. Выберите сервер, который будет выглядеть примерно так: http://YOUR_NAME/visualstudio.com<br />2. Затем перейдите к настройкам.<br />3. Мы выбираем необходимый проект, в данном случае он один, их может быть гораздо больше.<br />4. Введите имя проекта для удаления.<br />5. Успешно - проект удален.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Автозаполнение.</h3><p>Сегодня мы поговорим о том, что такое автозаполнение. Начнем с разметки, создаем пустую страницу, например, называем ее «idx.aspx». Добавляем следующий код:</p><pre><%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"idx.aspx.cs\" Inherits=\"WebAppTest.idx\" %><br />&lt;html&gt;<br />&lt;head&gt;<br />  &lt;title&gt;&lt;/title&gt;<br />    &lt;link rel=\"stylesheet\" href=\"..//Content/jquery-ui.css\"&gt;<br />    &lt;script src=\"..//Scripts/jquery-1.10.2.js\"&gt;&lt;/script&gt;<br />    &lt;script src=\"..//Scripts/jquery-ui.js\"&gt;&lt;/script&gt;<br />    &lt;script&gt;<br />        $(function(){<br />            var lst_reports = <%= getJson() %>;<br />            $(\"#reports\").autocomplete({<br />                source: lst_reports<br />            });<br />        });<br />    &lt;/script&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />    &lt;div&gt;<br />        &lt;b&gt;List reports: &lt;/b&gt;<br />        &lt;input id=\"reports\" placeholder=\"Input name report...\" autofocus /&gt;<br />    &lt;/div&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;<br /></pre><p>Смысл заключается в следующем, добавляются три файла:</p><pre>&lt;link rel=\"stylesheet\" href=\"..//Content/jquery-ui.css\"><br />&lt;script src=\"..//Scripts/jquery-1.10.2.js\">&lt;/script><br />&lt;script src=\"..//Scripts/jquery-ui.js\">&lt;/script><br /></pre><p>Эти файлы находятся в папках проекта (Content and Scripts соответственно).<br />Перейдем к CodeBehind и добавим код ниже:</p><pre>using System;<br />using System.Collections.Generic;<br />using System.Linq;<br />using System.Text.RegularExpressions;<br />using System.Web;<br />using System.Web.Script.Serialization;<br />using System.Web.UI;<br />using System.Web.UI.WebControls;<br /><br />namespace WebAppTest<br />{<br />    public partial class idx : System.Web.UI.Page<br />    {<br />        protected void Page_Load(object sender, EventArgs e) { }<br /><br />        public string getJson()<br />        {<br />            List<string> r = new List<string>();<br />            for (int i = 0; i < 1000; i++)<br />                r.Add(i.ToString());<br />            <br />            return (new JavaScriptSerializer()).Serialize(r);<br />        }<br />    }<br />}</pre><p>И запустим проект.<br />Как это работает ?.<br />Метод getJson() передает массив формы клиенту: [\"1\", \"2\", ..., \"999\"] (здесь могут быть любые другие данные для вашего поиска). После ввода требуемого значения, если значение не находится в нашем массиве, например, мы вводим 1000, тогда раскрывающийся список будет пустым, иначе он выведет результат, удовлетворяющий заданным условиям. Функция автозаполнения просто фильтрует элементы, которые нам нужны.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>ASP.NET.MVC 5.</h3><p>В этой статье я хочу поделиться с вами следующим интересным проектом, а именно ASP.NET.MVC 5. Мы напишем его на C# 6.0 framework 4.6.1. Запустите Visual Studio 2015 (это не имеет значения Ultimate / Professional) с пакетом обновления не менее 2. В меню Visual Studio выберите Файл-Новый-Проект. Выберите веб-приложение Visual C#-Web-ASP.NET (. NET Framework) из установленных шаблонов и нажмите кнопку «ОК». В параметрах «Изменение атрибута» вы должны выбрать режим без аутентификации. После создания проекта, удалите содержимое папки Controllers, а также папку Views.Home. Перейдем к ссылкам, щелкнув на них правой кнопкой мыши и выбрав «Manage NuGet Packages ...» в поиске, чтобы найти Entity Framework и установить его (текущая версия для текущей даты - 6.1.3). Мы соглашаемся со всеми условиями. После добавления Entity Framework добавим три класса в папку «Модели» со следующей структурой:</p><pre>public class Book<br />{<br />	public int Id { get; set; }<br />	public string Name { get; set; }<br />	public string Author { get; set; }<br />	public int Price { get; set; }<br />}<br /><br />public class Purchase<br />{<br />	public int PurchaseId { get; set; }<br />	public string Person { get; set; }<br />	public string Address { get; set; }<br />	public int BookId { get; set; }<br />	public DateTime Date { get; set; }<br />}<br /><br />public class BookContext : DbContext<br />{<br />	public DbSet<Book> Books { get; set; }<br />	public DbSet<Purchase> Purchases { get; set; }<br />}<br /></pre><p>Перейдем в папку App_Data и создадим нашу базу данных следующим образом: Выберите App_Data, добавьте новый элемент базы данных SQL Server, назовите «BookStore». Давайте откроем базу данных и начнем работать с ней. Добавим пару таблиц со следующей структурой:</p><pre>Books:<br />CREATE TABLE [dbo].[Books] (<br />    [Id]       INT            IDENTITY (1, 1) NOT NULL,<br />    [Name]     NVARCHAR (MAX) NULL,<br />    [Author]   NVARCHAR (MAX) NULL,<br />    [Price]    INT            NOT NULL,<br />    [Download] NVARCHAR (MAX) NULL,<br />    CONSTRAINT [PK_dbo.Books] PRIMARY KEY CLUSTERED ([Id] ASC)<br />);<br /><br />Purchases:<br />CREATE TABLE [dbo].[Purchases] (<br />    [PurchaseId] INT            IDENTITY (1, 1) NOT NULL,<br />    [Person]     NVARCHAR (MAX) NULL,<br />    [Address]    NVARCHAR (MAX) NULL,<br />    [BookId]     INT            NOT NULL,<br />    [Date]       DATETIME       NOT NULL,<br />    CONSTRAINT [PK_dbo.Purchases] PRIMARY KEY CLUSTERED ([PurchaseId] ASC)<br />);</pre><p>Заполним таблицу «dbo.Books» данными, например:</p><table border='1'><tr><th>Id</th><th>Name</th><th>Author</th><th>Price</th></tr><tr><td>1</td><td>Война и мир</td><td>Л. Толстой</td><td>220</td></tr><tr><td>2</td><td>Отцы и дети</td><td>И. Тургенев</td><td>180</td></tr><tr><td>3</td><td>Чайка</td><td>А. Чехов</td><td>150</td></tr><tr><td>4</td><td>C# 4.0</td><td>G. Schildt</td><td>385</td></tr><tr><td>5</td><td>C# 4.5</td><td>R. Richter</td><td>500</td></tr></table><br /><p>Вернемся в папку «Контроллеры» и добавим новый контроллер «MVC 5 Controller с представлениями, используя Entity Framework». После этого Visual Studio создаст контроллер с представлениями, нам нужно будет только запустить проект и посмотреть, как он работает. Нажмите F5. В работоспособности вы можете быть уверены, что все работает как часы. Если интересно поиграйтесь с добавлением новых данных, редактированием, удалением и изменением. Ну, я думаю, что код контроллера должен быть предоставлен для общего обзора:</p><pre>using System;<br />using System.Collections.Generic;<br />using System.Data;<br />using System.Data.Entity;<br />using System.Linq;<br />using System.Threading.Tasks;<br />using System.Net;<br />using System.Web;<br />using System.Web.Mvc;<br />using BookStoreAuto.Models;<br /><br />namespace BookStoreAuto.Controllers<br />{<br />    public class HomeController : Controller<br />    {<br />        private BookContext db = new BookContext();<br /><br />        // GET: Home<br />        public async Task<ActionResult> Index()<br />        {<br />            return View(await db.Books.ToListAsync());<br />        }<br /><br />        // GET: Home/Details/5<br />        public async Task<ActionResult> Details(int? id)<br />        {<br />            if (id == null)<br />            {<br />                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);<br />            }<br />            Book book = await db.Books.FindAsync(id);<br />            if (book == null)<br />            {<br />                return HttpNotFound();<br />            }<br />            return View(book);<br />        }<br /><br />        // GET: Home/Create<br />        public ActionResult Create()<br />        {<br />            return View();<br />        }<br /><br />        // POST: Home/Create<br />        // To protect from overposting attacks, please enable the specific properties you want to bind to, for <br />        // more details see http://go.microsoft.com/fwlink/?LinkId=317598.<br />        [HttpPost]<br />        [ValidateAntiForgeryToken]<br />        public async Task<ActionResult> Create([Bind(Include = \"Id,Name,Author,Price\")] Book book)<br />        {<br />            if (ModelState.IsValid)<br />            {<br />                db.Books.Add(book);<br />                await db.SaveChangesAsync();<br />                return RedirectToAction(\"Index\");<br />            }<br /><br />            return View(book);<br />        }<br /><br />        // GET: Home/Edit/5<br />        public async Task<ActionResult> Edit(int? id)<br />        {<br />            if (id == null)<br />            {<br />                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);<br />            }<br />            Book book = await db.Books.FindAsync(id);<br />            if (book == null)<br />            {<br />                return HttpNotFound();<br />            }<br />            return View(book);<br />        }<br /><br />        // POST: Home/Edit/5<br />        // To protect from overposting attacks, please enable the specific properties you want to bind to, for <br />        // more details see http://go.microsoft.com/fwlink/?LinkId=317598.<br />        [HttpPost]<br />        [ValidateAntiForgeryToken]<br />        public async Task<ActionResult> Edit([Bind(Include = \"Id,Name,Author,Price\")] Book book)<br />        {<br />            if (ModelState.IsValid)<br />            {<br />                db.Entry(book).State = EntityState.Modified;<br />                await db.SaveChangesAsync();<br />                return RedirectToAction(\"Index\");<br />            }<br />            return View(book);<br />        }<br /><br />        // GET: Home/Delete/5<br />        public async Task<ActionResult> Delete(int? id)<br />        {<br />            if (id == null)<br />            {<br />                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);<br />            }<br />            Book book = await db.Books.FindAsync(id);<br />            if (book == null)<br />            {<br />                return HttpNotFound();<br />            }<br />            return View(book);<br />        }<br /><br />        // POST: Home/Delete/5<br />        [HttpPost, ActionName(\"Delete\")]<br />        [ValidateAntiForgeryToken]<br />        public async Task<ActionResult> DeleteConfirmed(int id)<br />        {<br />            Book book = await db.Books.FindAsync(id);<br />            db.Books.Remove(book);<br />            await db.SaveChangesAsync();<br />            return RedirectToAction(\"Index\");<br />        }<br /><br />        protected override void Dispose(bool disposing)<br />        {<br />            if (disposing)<br />            {<br />                db.Dispose();<br />            }<br />            base.Dispose(disposing);<br />        }<br />    }<br />}<br /></pre><p>Все, что я написал: Создал три класса (Book, Purchase, BookContext), добавил 2 таблицы (dbo.Books, dbo.Purchases) и просто расставил флажки и указал путь к шаблону страницы при создании контроллера, на данном этапе я закончу эту статью. Все вопросы, которые вы можете задать присылайте <a href='mailto:hru91nik@mail.ru'>сюда</a>.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Принципы SOLID.</h3><pre><b>S - Принцип единственной ответственности</b> {<br />	Делай модули меньше.<br />}<br /><b>O - Принцип открытости/закрытости</b> {<br />	Делай модули расширяемыми.<br />}<br /><b>L - Принцип подстановки Барбары Лисков</b> {<br />	Наследуйся правильно.<br />}<br /><b>I - Принцип разделения интерфейса</b> {<br />	Дроби интерфейсы.<br />}<br /><b>D - Принцип инверсии зависимостей</b> {<br />	Используй интерфейсы.<br />}</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Основы C#.</h3><p>Если вы считаете себя компетентным специалистом, ответьте на следующие вопросы: <br />1. Что делает этот код ?.<br />2. Можете ли вы провести ревью кода ?.<br />3. Возможен ли рефакторинг ?.</p><pre>public static List<Period> ApplyLogicalAnd(Period dtPair, List<Period> justification)<br />{<br />    var justified = new List<Period>();<br />    var pieces = new Stack<Period>();<br />    pieces.Push(dtPair);<br /><br />    while (pieces.Count > 0)<br />    {<br />        var ipiece = pieces.Pop();<br />        foreach (var jpair in justification)<br />        {<br />            // justification affects time piece<br />            if (ipiece.Begin < jpair.End && ipiece.End > jpair.Begin)<br />            {<br />                if (ipiece.Begin >= jpair.Begin && ipiece.End <= jpair.End)<br />                {<br />                    // piece is inside<br />                    justified.Add(ipiece);<br />                }<br />                else<br />                {<br />                    DateTime jbegin;<br />                    DateTime jend;<br /><br />                    if (ipiece.Begin < jpair.Begin)<br />                    {<br />                        jbegin = jpair.Begin;<br />                        pieces.Push(new Period(ipiece.Begin, jpair.Begin));<br />                    }<br />                    else<br />                    {<br />                        jbegin = ipiece.Begin;<br />                    }<br />                    if (ipiece.End > jpair.End)<br />                    {<br />                        jend = jpair.End;<br />                        pieces.Push(new Period(jpair.End, ipiece.End));<br />                    }<br />                    else<br />                    {<br />                        jend = ipiece.End;<br />                    }<br /><br />                    if (jbegin != jend)<br />                    {<br />                        justified.Add(new Period(jbegin, jend));<br />                    }<br />                }<br />                // proceed with different pieces<br />                break;<br />            }<br />        }<br />    }<br /><br />    return justified;<br /><br />}</pre><p>Для тех, кто не считает себя таковыми, ответ ниже:</p><pre>using System;<br />using System.Collections.Generic;<br /><br />namespace ConsoleApp<br />{<br />    internal class Program<br />    {<br />		<br />	// Test right here, so as not to drag dependencies<br />        private static void Main(string[] args)<br />        {<br />            var workTime = new Period(new TimeSpan(9, 0, 0), new TimeSpan(18, 0, 0));<br />            var inside = new Period(new TimeSpan(10, 0, 0), new TimeSpan(11, 0, 0));<br />            var outside = new Period(new TimeSpan(08, 0, 0), new TimeSpan(19, 0, 0));<br />            var includesStart = new Period(new TimeSpan(08, 0, 0), new TimeSpan(10, 0, 0));<br />            var includesEnd = new Period(new TimeSpan(15, 0, 0), new TimeSpan(20, 0, 0));<br />            var later = new Period(new TimeSpan(20, 0, 0), new TimeSpan(21, 0, 0));<br />            var before = new Period(new TimeSpan(07, 0, 0), new TimeSpan(08, 0, 0));<br /><br />            var periods = new List<Period> {<br />                inside, outside, includesStart, includesEnd, later, before };<br /><br />            Console.WriteLine(\"New\");<br />            foreach (var period in ApplyLogicalAnd2(workTime, periods))<br />                Console.WriteLine(period);<br />            Console.WriteLine(\"Old\");<br />            foreach (var period in ApplyLogicalAnd(workTime, periods))<br />                Console.WriteLine(period);<br /><br />            Console.Read();<br />        }<br /><br />        // New version<br />        internal static IEnumerable<Period> ApplyLogicalAnd2(Period thePeriod, IEnumerable<Period> periods)<br />        {<br />            var crossings = new List<Period>();<br />            foreach (var period in periods)<br />                FindCrossings(thePeriod, crossings, period);<br />            return crossings;<br />        }<br /><br />        private static void FindCrossings(Period thePeriod, IList<Period> crossings, Period period)<br />        {<br />            if (thePeriod.IsInside(period) || period.IsInside(thePeriod))<br />                crossings.Add(period);<br />            else if (period.IncludesStart(thePeriod))<br />                crossings.Add(new Period(thePeriod.Start, period.End));<br />            else if (period.IncludesEnd(thePeriod))<br />                crossings.Add(new Period(period.Start, thePeriod.End));<br />        }<br /><br />        // Original code<br />	// When studying, we understand that we are looking for the intersection of an interval with a list of intervals.<br />        public static List<Period> ApplyLogicalAnd(Period dtPair, List<Period> justification)<br />        {<br />            var justified = new List<Period>();<br />            var pieces = new Stack<Period>();<br />            pieces.Push(dtPair);<br /><br />            while (pieces.Count > 0)<br />            {<br />                var ipiece = pieces.Pop();<br />                foreach (var jpair in justification)<br />                {<br />                    // justification affects time piece<br />                    if (ipiece.Start < jpair.End && ipiece.End > jpair.Start)<br />                    {<br />                        if (ipiece.Start >= jpair.Start && ipiece.End <= jpair.End)<br />                        {<br />                            // piece is inside<br />                            justified.Add(ipiece);<br />                        }<br />                        else<br />                        {<br /><br />                            TimeSpan jbegin;<br />                            TimeSpan jend;<br /><br />                            if (ipiece.Start < jpair.Start)<br />                            {<br />                                jbegin = jpair.Start;<br />                                pieces.Push(new Period(ipiece.Start, jpair.Start));<br />                            }<br />                            else<br />                            {<br />                                jbegin = ipiece.Start;<br />                            }<br />                            if (ipiece.End > jpair.End)<br />                            {<br />                                jend = jpair.End;<br />                                pieces.Push(new Period(jpair.End, ipiece.End));<br />                            }<br />                            else<br />                            {<br />                                jend = ipiece.End;<br />                            }<br /><br />                            if (jbegin != jend)<br />                            {<br />                                justified.Add(new Period(jbegin, jend));<br />                            }<br />                        }<br />                        // proceed with different pieces<br />                        break;<br />                    }<br />                }<br />            }<br /><br />            return justified;<br />        }<br />    }<br /><br />    // TODO use generic or ready-made<br />    internal class Period<br />    {<br />        internal TimeSpan Start { get; private set; }<br />        internal TimeSpan End { get; private set; }<br /><br />        internal Period() { }<br /><br />	// TODO add the invariant: start> end<br />        internal Period(TimeSpan start, TimeSpan end)<br />        {<br />            Start = start;<br />            End = end;<br />        }<br /><br />        public override string ToString()<br />        {<br />            return Start + \" \" + End;<br />        }<br /><br />        internal bool IsInside(Period another)<br />        {<br />            return another.Start <= Start && End <= another.End;<br />        }<br /><br />        internal bool IncludesStart(Period another)<br />        {<br />            return another.Start < End && Start < another.Start && End < another.End;<br />        }<br /><br />        internal bool IncludesEnd(Period another)<br />        {<br />            return Start < another.End && another.Start < Start && another.End < End;<br />        }<br />    }<br />}</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Оптимизация TabControl.</h3><p>Совсем недавно мне пришлось столкнуться со следующей задачей: «Необходимо сразу же заполнить TabControl списком». То есть, не использовать foreach. Я внедрил заполнение TabControl следующим образом:</p><pre>Linq = (<br />	From q In db.databasess<br />	Select New TabPage(q.name)<br />).ToList().Where(<br />	Function(x) GetColor(x.Text) = Color.Gray<br />).ToArray(); <br /><br />TabRole.TabPages.AddRange(Linq);</pre><p>Как вы видите, решение оказалось в несколько строк. А производительность при этом значительно возросла.</p><p id='createdDate'>" + date_publish(n) + "</p>", 'C#');
	else
		load_page(nav + back + "<a href='#' onclick='exam_70483()'>Exam 70-483 (Programming in C#)</a><h3>Get access to a private member from another class.</h3><p>To extract a private variable, you must use the following code:</p><pre>using System.Reflection;<br /><br />internal sealed class SecretKeeper {<br />	private int _secret = 42;<br />}<br /><br />FieldInfo fieldInfo = typeof(SecretKeeper).GetField(\"_secret\", BindingFlags.Instance | BindingFlags.NonPublic);<br />int result = (int)fieldInfo.GetValue(new SecretKeeper();<br /><br />// output 42</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Rest client.</h3><p>To work with Rest client, you need to create a project \"Console App (.NET Core)\". Utsanovt couple of packages, and implement the functionality below:<br /><br /><b>Package Manager Console:</b></p><pre>Install-Package Microsoft.NETCore.App -Version 2.0.0<br />Install-Package System.Runtime.Serialization.Json -Version 4.3.0<br />Install-Package System.Runtime.Serialization.Primitives -Version 4.3.0</pre><p><b>Program.cs:</b></p><pre>using System;<br />using System.Collections.Generic;<br />using System.Net.Http;<br />using System.Net.Http.Headers;<br />using System.Runtime.Serialization.Json;<br />using System.Threading.Tasks;<br /><br />namespace WebAPIClient<br />{<br />	class Program<br />	{<br />		static void Main(string[] args)<br />		{<br />			var repositories = ProcessRepositories().Result;<br /><br />			foreach (var repo in repositories)<br />				Console.WriteLine(String.Format(\"Year: {0}, Month: {1}, Fact: {2}, Plan: {3}\", repo.Period.Name, repo.Period.Month, repo.Fact, repo.Plan));<br /><br />			Console.ReadKey();<br />		}<br /><br />		private static async Task<List<Data>> ProcessRepositories()<br />		{<br />			var client = new HttpClient();<br />			client.DefaultRequestHeaders.Accept.Clear();<br />			client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue(\"application/json\"));<br />			client.DefaultRequestHeaders.Add(\"User-Agent\", \".NET Foundation Repository Reporter\");<br /><br />			var serializer = new DataContractJsonSerializer(typeof(List<Data>));<br />			var streamTask = client.GetStreamAsync(\"http://your_api_service\");<br />			var repositories = serializer.ReadObject(await streamTask) as List<Data>;<br />			return repositories;<br />		}<br />	}<br />}</pre><p><b>Data.cs:</b></p><pre>using System;<br />using System.Runtime.Serialization;<br /><br />namespace WebAPIClient<br />{<br />	[DataContract(Name = \"repo\")]<br />	public class Data<br />	{<br />		[DataMember(Name = \"period\")]<br />		public Period Period { get; set; }<br />		[DataMember(Name = \"fact\")]<br />		public decimal Fact { get; set; }<br />		[DataMember(Name = \"plan\")]<br />		public decimal Plan { get; set; }<br />	}<br /><br />	[DataContract(Name = \"period\")]<br />	public class Period<br />	{<br />		[DataMember(Name = \"name\")]<br />		public String Name { get; set; }<br />		[DataMember(Name = \"month\")]<br />		public Int32 Month { get; set; }<br />	}<br />}</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Elvis operator.</h3><pre>var e = new Elvis();<br />Console.WriteLine(e<b style='color:red;'>?.</b>ElvisString <b style='color:red;'>??</b> \"null\");		//	ElvisString<br />Console.WriteLine(e<b style='color:red;'>?.</b>ElvisStringNull <b style='color:red;'>??</b> \"null\");	//	null<br /><br />class Elvis<br />{<br />	public String ElvisString = \"ElvisString\";<br />	public String ElvisStringNull;<br />}</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Boxing and Unboxing.</h3><p>Below is a simple example of packaging and unpacking.</p><pre>#region Boxing_Unboxing<br />Int32 b = 0;<br />Object o = b;       // Boxing<br />Int32 u = (Int32)o; // Unboxing<br />#endregion</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Static and Instance classes.</h3><p>So for what it is necessary to use static classes, methods and fields ?.<br />If you are tasked with realizing a real-world object, use a normal class (<b>not static</b>). For example, a car with such attributes as: color, speed, dimensions, etc.<br />If there is a task of outputting some action on the screen or say uploading data to Excel, <b>use static classes</b>, fields and methods.<br /><b>Example of calling a static class:</b></p><pre>StaticClass.StaticMethod;</pre><p><b>Example of calling an instance class:</b></p><pre>InstanceClass ic = new InstanceClass();<br />ic.GetInstanceMethod();</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Comparison of objects and types.</h3><pre>#region Equality<br />Object a1 = 5;<br />Object a2 = 5;<br />string b1 = \"a\";<br />string b2 = \"a\";<br />Object c1 = \"b\";<br />Object c2 = \"b\";<br />int d1 = 1;<br />int d2 = 1;<br /><br />Console.WriteLine(\"a1 == a2: \" + (a1 == a2));   // False<br />Console.WriteLine(\"b1 == b2: \" + (b1 == b2));   // True<br />Console.WriteLine(\"c1 == c2: \" + (c1 == c2));   // True<br />Console.WriteLine(\"d1 == d2: \" + (d1 == d2));   // True<br /><br />Console.WriteLine(\"a1 == a2: \" + (a1.Equals(a2)));   // True<br />Console.WriteLine(\"b1 == b2: \" + (b1.Equals(b2)));   // True<br />Console.WriteLine(\"c1 == c2: \" + (c1.Equals(c2)));   // True<br />Console.WriteLine(\"d1 == d2: \" + (d1.Equals(d2)));   // True<br /><br />Console.WriteLine(\"a1 == a2: \" + (ReferenceEquals(a1, a2)));   // False<br />Console.WriteLine(\"b1 == b2: \" + (ReferenceEquals(b1, b2)));   // True<br />Console.WriteLine(\"c1 == c2: \" + (ReferenceEquals(c1, c2)));   // True<br />Console.WriteLine(\"d1 == d2: \" + (ReferenceEquals(d1, d2)));   // False<br />#endregion</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Ref and Out parameters.</h3><pre>The ref and out parameters to get a more complex value. <br />	ref: the initialized value is passed; <br />	out: An uninitialized value is passed. <br />)</pre><p>As an example: I use a class to unload an Excel document. <br />It validates the values, those values that do not fall into the specified range are cut off and written to the parameter (ref or out). <br /><br />Example of using the <b>ref</b> parameter:</p><pre>string error = \"\";<br />var excel = new ExcelPackage(FileContent);<br />var dt = excel.ToDataTable(ref error);<br /><br />public static DataTable ToDataTable(this ExcelPackage package, ref string error)<br />{<br />	// TODO: Your logic<br />		error += value + \", \";<br />	<br />	return table;<br />}</pre><p>Example of using the <b>out</b> parameter:</p><pre>string error;<br />var excel = new ExcelPackage(FileContent);<br />var dt = excel.ToDataTable(out error);<br /><br />public static DataTable ToDataTable(this ExcelPackage package, out string error)<br />{<br />	error = \"\";<br />	<br />	// TODO: Your logic<br />		error += value + \", \";<br />	<br />	return table;<br />}</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Web Forms SessionState.</h3><p>Not so long ago, I was given the following task. It was necessary to correct a rarely occurring error.<br /><br />Unable to serialize the session state. In <b>'StateServer'</b> and <b>'SQLServer'</b> mode, ASP.NET will serialize the session state objects, and as a result non-serializable objects or MarshalByRef objects are not permitted. The same restriction applies if similar serialization is done by the custom session state store in 'Custom' mode.<br /><br />After a little thought, I started to implement it. The main problem was to write a session from the DataSet. Since the DataSet was quite heavy, the corresponding error occurred at times. It was decided to save the filters. Examples of the code are also laid out below.</p><pre>// C#:<br />protected void Page_Load(object sender, EventArgs e)<br />{<br />	if (!IsPostBack)<br />	{<br />		var c = new CSessionHelper();<br />		c.ClearSession();<br />	}<br /><br />	if (string.IsNullOrEmpty(Session[\"uni_login\"].ToString())) Response.Redirect(@\"../login.aspx\");<br />	if (!LoginHelper.IsAccessDoneToPage(Session[\"uni_login\"].ToString(), Session[\"uni_login_type\"].ToString())) Response.Redirect(\"../Default.aspx\");<br /><br />	sc_clients.ConnectionString = \"Server=\" + Application[\"sql_server\"] + \"; Database=\" + Application[\"sql_database\"]; User ID=\" + Session[\"uni_login\"] + \"; Password=\" + Session[\"uni_password\"];<br />	if (!IsPostBack)<br />	{<br />		if (sc_clients.State != ConnectionState.Open)<br />		{<br />			sc_clients.Open();<br />			bindDropDown();<br />			GetValueFilter();<br />			sc_clients.Close();<br />		}<br />	}<br />}<br /><br />private void GetValueFilter()<br />{<br />	try<br />	{<br />		SqlDataAdapter SqlAdapter = new SqlDataAdapter(string.Format(\"exec dbo.sp_your_name @UserLogin = '{0}', @Get = {1}\", Session[\"uni_login\"], true), sc_clients);<br />		DataTable dt = new DataTable();<br />		SqlAdapter.Fill(dt);<br /><br />		if (dt.Rows.Count > 0)<br />		{<br />			ddl_search_distributor.SelectedValue = dt.Rows[0][2].ToString();<br />			ddl_teadm.SelectedValue = dt.Rows[0][3].ToString();<br />			tbID.Text = dt.Rows[0][4].ToString();<br />			tbFIO.Text = dt.Rows[0][5].ToString();<br />			chb_view_only_active.Checked = Convert.ToBoolean(dt.Rows[0][6]);<br />		}<br /><br />		bindData(tbFIO.Text, Convert.ToInt32(ddl_teadm.SelectedValue), tbID.Text,<br />		Convert.ToInt32(ddl_search_distributor.SelectedValue));<br />	}<br />	catch (Exception ex)<br />	{<br />		error_label.Text = ex.Message;<br />	}<br />}<br /><br />private void UpdateValueFilter()<br />{<br />	try<br />	{<br />		if (sc_clients.State != ConnectionState.Open) sc_clients.Open();<br />		using (SqlCommand command = sc_clients.CreateCommand())<br />		{<br />			command.CommandText = string.Format(\"exec dbo.sp_your_name @UserLogin = '{0}', @Distributor = {1}, @Team = {2}, @CodeTP = '{3}', @FIO = '{4}', @Flag = {5}\",<br />			Session[\"uni_login\"], Convert.ToInt32(ddl_search_distributor.SelectedValue), Convert.ToInt32(ddl_teadm.SelectedValue), tbID.Text, tbFIO.Text, chb_view_only_active.Checked);<br />			command.ExecuteNonQuery();<br />		}<br />		sc_clients.Close();<br />	}<br />	catch (Exception ex)<br />	{<br />		error_label.Text = ex.Message;<br />	}<br />}<br /><br />private void bindData(string FIO, int team, string ID, int id_distributor)<br />{<br />	if (ds_representative1.v_representative.Count > 8000)<br />	{<br />		dg_representative.Visible = false;<br />		error_label.Font.Size = 14;<br />		error_label.Text = \"The session contains too large a set of data, for correct unloading use the filter.\";<br />	}<br />	else<br />	{<br />		// There was this mistake.<br />		Session[\"ds_representative\"] = ds_representative1;<br />		error_label.Text = \"\";<br />		error_label.Font.Size = 10;<br />		dg_representative.Visible = true;<br />	}<br />	UpdateValueFilter();<br />}<br /><br />// T-SQL:<br />USE [YourDbName]<br />GO<br /><br />SET ANSI_NULLS ON<br />GO<br /><br />SET QUOTED_IDENTIFIER ON<br />GO<br /><br />SET ANSI_PADDING ON<br />GO<br /><br />CREATE TABLE [dbo].[YourTableName](<br />	[Id] [int] IDENTITY(1,1) NOT NULL,<br />	[UserLogin] [varchar](50) NOT NULL,<br />	[Distributor] [int] NULL,<br />	[Team] [int] NULL,<br />	[CodeTP] [varchar](500) NULL,<br />	[FIO] [varchar](500) NULL,<br />	[Flag] [bit] NULL,<br />	CONSTRAINT [PK_representative_report_filter] PRIMARY KEY CLUSTERED<br />(<br />	[Id] ASC<br />)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY],<br />	CONSTRAINT [UQ__represen__7F8E8D5E0F3A8FCB] UNIQUE NONCLUSTERED<br />(<br />	[UserLogin] ASC<br />)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]<br />) ON [PRIMARY]<br /><br />GO<br /><br />SET ANSI_PADDING OFF<br /><br />GO<br /></pre><p>The meaning is as follows:<br />At authorization, we write to the table the initial data, if they are not present certainly and we take them in the controls necessary to us. If there is an entry in the database, we simply extract the data from the database and fill it with the data. As you can see, everything is quite simple.<br /><br />Tip: Write directly to MVC.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>API Yandex maps.</h3><p>How does the Yandex Map API work? There is a file - mapReport.js in it there is a function getMapsModal. The function jerks the getMapsModal method from another file - mapReportService.js which passes control to the MapController.cs controller to retrieve the data. After processing the data, we pass the data object to the view in this way <b>$scope.maps = data;</b></p><pre>// mapReport.js<br />var getMapsModal = function (ObjectType) {<br />	mapReportService.getMapsModal(ObjectType).then(function (maps) {<br />	var data = [];<br />	maps.forEach(function (d, i) {<br />		data.push({<br />			mapId: d.mapId,<br />			objectType: d.objectType,<br />			objectName: d.objectName,<br />			objectId: d.objectId,<br />			color: d.color,<br />			geometry: {<br />				type: 'Polygon',<br />				coordinates: d.coordinates == null ? [] : JSON.parse(d.coordinates)<br />			},<br />			properties: {<br />				mapId: d.mapId,<br />				objectName: d.objectName,<br />				objectType: d.objectType,<br />				objectId: d.objectId,<br />				color: d.color<br />			}<br />		});<br />	});<br />	$scope.maps = data;<br />	});<br />};<br /><br />// mapReportService.js<br />var _mapsModal = [];<br />var _getMapsModal = function (ObjectType) {<br />	var deferred = $q.defer();<br />	$http.get(\"/api/maps/\" + ObjectType)<br />	.then(function (result) {<br />		angular.copy(result.data, _mapsModal);<br />		deferred.resolve(result.data);<br />	},<br />	function (error) {<br />		deferred.reject(error.data);<br />	});<br />	return deferred.promise;<br />};<br /><br />return {<br />mapsModal: _mapsModal,<br />	getMapsModal: _getMapsModal,<br /><br />};<br /><br />// MapController.cs<br />[Route(\"{ObjectType:int}\")]<br />public HttpResponseMessage GetMapsModal(int ObjectType)<br />{<br />	var currentUser = context.Users.FirstOrDefault(u =&gt; u.Login == RequestContext.Principal.Identity.Name);<br />	if (currentUser == null)<br />		return Request.CreateResponse(HttpStatusCode.Unauthorized, new { message = \"Error authentication.\" });<br /><br />	var maps = context.Maps.Where(m =&gt; m.ObjectType == (ObjectType)ObjectType && m.Coordinates != null).Select(getMapProjection).ToList();<br /><br />	return Request.CreateResponse(HttpStatusCode.Created, maps);<br />}<br /><br />// And in the presentation made: ViewMap.cshtml<br />&lt;ya-geo-object ng-repeat=\"map in maps\" ya-source=\"map\" ya-options=\"{fillColor: '{{map.color}}',strokeColor: '#0000FF', opacity: 0.4, strokeWidth: 1.5}\"&gt;&lt;/ya-geo-object&gt;</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Html markup.</h3><p>Two years passed exactly, as I create my standard folder with the name \"@n.khrulev\" and fill it with content. I'll start according to the standard:</p><pre>&lt;html&gt;<br />&lt;head&gt;<br />	&lt;title&gt;HTML 5&lt;/title&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />	&lt;h1&gt;HTML 5&lt;/h1&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;<br /></pre><p>I will not describe anything what the h1 tag does, and why a title or body tag is needed. All literature is available at the following <a href='http://htmlbook.ru' target='_blank'>address</a>.<br />After creating the skeleton, add the styles: - file style.css</p><pre>#html5{<br />	text-align: center;<br />}<br /></pre><p>In the html code we connect an external file with the styles:</p><pre>&lt;link rel = \"stylesheet\" href=\"css/style.css\" /&gt;</pre><p>Let's add a simple script (js.js), which will welcome us on our site:</p><pre>function helloHTML5(){<br />	var d = new Date();<br />	alert(\"Today: \" + d.getDate() + \".\" + (d.getMonth() + 1) + \".\" + d.getFullYear());<br />	document.getElementById(\"allres\").innerHTML = \"all rights reserved. \" + d.getFullYear() + \" &copy;\";<br />}</pre><p>This script returns the current date and the current year, respectively.<br />The markup (index.html) has the following appearance:</p><pre>&lt;html&gt;<br />&lt;head&gt;<br />	&lt;title&gt;HTML 5&lt;/title&gt;<br />	&lt;link rel=\"stylesheet\" href=\"css/style.css\" /&gt;<br />	&lt;script type=\"text/javascript\" src=\"scripts/js.js\"&gt;&lt;/script&gt;<br />&lt;/head&gt;<br />&lt;body onload='helloHTML5()'&gt;<br />	&lt;h1 id='html5'&gt;HTML 5&lt;/h1&gt;<br />	&lt;p id='allres'&gt;&lt;/p&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;<br /></pre><p>A styles (style.css):</p><pre>#html5{<br />	text-align: center;<br />}<br /><br />#allres{<br />	text-align: center;<br />	font-family: cursive;<br />}</pre><p>So far we have not done anything. So let's start. Let's make minor changes to our markup as follows:</p><pre>&lt;html&gt;<br />&lt;head&gt;<br />	&lt;title&gt;HTML 5&lt;/title&gt;<br />	&lt;link rel=\"stylesheet\" href=\"css/style.css\" /&gt;<br />	&lt;script type=\"text/javascript\" src=\"scripts/jquery.min.js\"&gt;&lt;/script&gt;<br />	&lt;script type=\"text/javascript\" src=\"scripts/pb.js\"&gt;&lt;/script&gt;<br />	&lt;script type=\"text/javascript\" src=\"scripts/js.js\"&gt;&lt;/script&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />	&lt;div id=\"container\" &gt;&lt;/div&gt;<br />		&lt;div id='PreLoader'&gt;<br />		&lt;a href='http://htmlbook.ru/html5' target='_blank'&gt;&lt;h1 id='html5'&gt;&lt;/h1&gt;&lt;/a&gt;<br />		&lt;p id='today'&gt;&lt;/p&gt;<br />		&lt;p id='allres'&gt;&lt;/p&gt;<br />	&lt;/div&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;<br /></pre><p>Let's change the styles:</p><pre>#PreLoader{<br />	display: none;<br />	position: fixed;<br />    	top: 50%;<br />    	left: 50%;<br />    	-webkit-transform: translate(-50%, -50%);<br />    	transform: translate(-50%, -50%);<br />}<br /><br />#container{<br />	position: fixed;<br />    	top: 50%;<br />    	left: 50%;<br />    	-webkit-transform: translate(-50%, -50%);<br />    	transform: translate(-50%, -50%);<br />}<br /><br />#allres,<br />#today<br />{<br />	font-family: cursive;<br />}<br /><br />#container {<br />	width: 175px;<br />	height: 175px;<br />	position: relative;<br />}</pre><p>Change script:</p><pre>$(window).on('load', function() {<br />	var bar = new ProgressBar.Circle(container, {<br />		color: '#aaa',<br />		strokeWidth: 3,<br />		trailWidth: 1,<br />		easing: 'easeInOut',<br />		duration: 2500,<br />		text: { autoStyleContainer: false },<br />		from: { color: '#aaa', width: 1 },<br />		to: { color: '#555', width: 3 },<br />		step: function(state, circle) {<br />			circle.path.setAttribute('stroke', state.color);<br />			circle.path.setAttribute('stroke-width', state.width);<br /><br />			var value = Math.round(circle.value() * 100);<br />			if (value === 0)<br />				circle.setText('');<br />			else<br />				circle.setText(value + \"%\");<br />	    }<br />	});<br />	<br />	bar.text.style.fontFamily = '\"Raleway\", Helvetica, sans-serif';<br />	bar.text.style.fontSize = '2rem';<br />	bar.animate(1.0);<br />    	var $preloader = $('#container');<br />	$preloader.delay(2200).fadeOut('slow');<br />	setTimeout(function() { GetDate() }, 2900);<br />});<br /><br />function GetDate(){<br />	var d = new Date();<br />	document.getElementById(\"today\").innerHTML = \"Today: \" + d.getDate() + \".\" + (d.getMonth() + 1) + \".\" + d.getFullYear();<br />	document.getElementById(\"html5\").innerHTML = \"HTML 5\";<br />	document.getElementById(\"allres\").innerHTML = \"all rights reserved. \" + d.getFullYear() + \" &copy;\";<br />	document.getElementById(\"PreLoader\").style.display=\"block\";<br />}<br /></pre><p>The progress bar is loaded, and nothing more is visible. Once the bar has booted, I hide it and show the rest of the content.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Delete the team project.</h3><p>To delete a team project, perform the following steps (you need to log in to TFS):<br />1. Select the server it looks like this: http://YOUR_NAME/visualstudio.com<br />2. Then go to the settings.<br />3. We choose the necessary project, in this case it is one, there can be much more.<br />4. Enter the name of the project to be deleted.<br />5. Done - The project has been deleted.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Autocomplete.</h3><p>Today we will talk about what is auto filling. Let's start with the markup, create a blank page, call it \"idx.aspx\" for example. Add the following code:</p><pre><%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"idx.aspx.cs\" Inherits=\"WebAppTest.idx\" %><br />&lt;html&gt;<br />&lt;head&gt;<br />  &lt;title&gt;&lt;/title&gt;<br />    &lt;link rel=\"stylesheet\" href=\"..//Content/jquery-ui.css\"&gt;<br />    &lt;script src=\"..//Scripts/jquery-1.10.2.js\"&gt;&lt;/script&gt;<br />    &lt;script src=\"..//Scripts/jquery-ui.js\"&gt;&lt;/script&gt;<br />    &lt;script&gt;<br />        $(function(){<br />            var lst_reports = <%= getJson() %>;<br />            $(\"#reports\").autocomplete({<br />                source: lst_reports<br />            });<br />        });<br />    &lt;/script&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />    &lt;div&gt;<br />        &lt;b&gt;List reports: &lt;/b&gt;<br />        &lt;input id=\"reports\" placeholder=\"Input name report...\" autofocus /&gt;<br />    &lt;/div&gt;<br />&lt;/body&gt;<br />&lt;/html&gt;<br /></pre><p>The meaning is as follows, three files are added:</p><pre>&lt;link rel=\"stylesheet\" href=\"..//Content/jquery-ui.css\"><br />&lt;script src=\"..//Scripts/jquery-1.10.2.js\">&lt;/script><br />&lt;script src=\"..//Scripts/jquery-ui.js\">&lt;/script><br /></pre><p>These files are in the project folders (Content and Scripts respectively).<br />Let's go to CodeBehind and add the code below:</p><pre>using System;<br />using System.Collections.Generic;<br />using System.Linq;<br />using System.Text.RegularExpressions;<br />using System.Web;<br />using System.Web.Script.Serialization;<br />using System.Web.UI;<br />using System.Web.UI.WebControls;<br /><br />namespace WebAppTest<br />{<br />    public partial class idx : System.Web.UI.Page<br />    {<br />        protected void Page_Load(object sender, EventArgs e) { }<br /><br />        public string getJson()<br />        {<br />            List<string> r = new List<string>();<br />            for (int i = 0; i < 1000; i++)<br />                r.Add(i.ToString());<br />            <br />            return (new JavaScriptSerializer()).Serialize(r);<br />        }<br />    }<br />}</pre><p>And run our project.<br />How does it all work ?.<br />The getJson() method passes an array of the form to the client:<br />[\"1\", \"2\", ..., \"999\"] (here there can be any other data for your search). After the input is filled with the required value, if the value is not in our array, for example, we enter 1000, then the drop-down list will be empty, otherwise it will output the result satisfying the given conditions. The autocomplete function just filters the elements we need.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>ASP.NET.MVC 5.</h3><p>In this post I want to share with you the following interesting project namely ASP.NET.MVC 5. We will write it on C# 6.0 framework 4.6.1. Run Visual Studio 2015 (it does not matter Ultimate / Professional) with a service pack of at least 2. In the Visual Studio menu, select File-New-Project. Select the Visual C# -Web-ASP.NET Web Application (. NET Framework) from the installed templates and click the \"OK\" button. In the Change Authantication settings, you must select a mode without authentication. We are waiting for the creation of the project. Delete the contents of the folder Controllers, as well as the folder Views.Home. Let's move on to the References by right-clicking on them and selecting \"Manage NuGet Packages ...\" in the search to find the Entity Framework and install it (the current version for the current date is 6.1.3). We agree with all the conditions. After the Entity Framework has been added, we add three classes to the Models folder with the following structure:</p><pre>public class Book<br />{<br />	public int Id { get; set; }<br />	public string Name { get; set; }<br />	public string Author { get; set; }<br />	public int Price { get; set; }<br />}<br /><br />public class Purchase<br />{<br />	public int PurchaseId { get; set; }<br />	public string Person { get; set; }<br />	public string Address { get; set; }<br />	public int BookId { get; set; }<br />	public DateTime Date { get; set; }<br />}<br /><br />public class BookContext : DbContext<br />{<br />	public DbSet<Book> Books { get; set; }<br />	public DbSet<Purchase> Purchases { get; set; }<br />}<br /></pre><p>Let's go to the App_Data folder and create our database as follows: Select App_Data, add a new \"SQL Server Database\" element, call \"BookStore\". Let's open the database and start working with it. We add a couple of tables with the following structure:</p><pre>Books:<br />CREATE TABLE [dbo].[Books] (<br />    [Id]       INT            IDENTITY (1, 1) NOT NULL,<br />    [Name]     NVARCHAR (MAX) NULL,<br />    [Author]   NVARCHAR (MAX) NULL,<br />    [Price]    INT            NOT NULL,<br />    [Download] NVARCHAR (MAX) NULL,<br />    CONSTRAINT [PK_dbo.Books] PRIMARY KEY CLUSTERED ([Id] ASC)<br />);<br /><br />Purchases:<br />CREATE TABLE [dbo].[Purchases] (<br />    [PurchaseId] INT            IDENTITY (1, 1) NOT NULL,<br />    [Person]     NVARCHAR (MAX) NULL,<br />    [Address]    NVARCHAR (MAX) NULL,<br />    [BookId]     INT            NOT NULL,<br />    [Date]       DATETIME       NOT NULL,<br />    CONSTRAINT [PK_dbo.Purchases] PRIMARY KEY CLUSTERED ([PurchaseId] ASC)<br />);</pre><p>Fill in the \"Books\" table with data, for example:</p><table border='1'><tr><th>Id</th><th>Name</th><th>Author</th><th>Price</th></tr><tr><td>1</td><td>War and Peace by</td><td>L. Tolstoy</td><td>220</td></tr><tr><td>2</td><td>Fathers and children</td><td>I. Turgenev</td><td>180</td></tr><tr><td>3</td><td>Seagull</td><td>A. Chekhov</td><td>150</td></tr><tr><td>4</td><td>C# 4.0</td><td>G. Schildt</td><td>385</td></tr><tr><td>5</td><td>C# 4.5</td><td>R. Richter</td><td>500</td></tr></table><br /><p>Let's return to the \"Controllers\" folder and add a new controller \"MVC 5 Controller with views, using Entity Framework\". After that, Visual Studio will generate a viewer with views, we will only have to run the project and see how it works. Press F5. In working capacity, you can rest assured that everything works like a clock. If it is interesting to play around with the addition of new data, editing, deleting and changing. Well, I think the controller code should be provided for general review:</p><pre>using System;<br />using System.Collections.Generic;<br />using System.Data;<br />using System.Data.Entity;<br />using System.Linq;<br />using System.Threading.Tasks;<br />using System.Net;<br />using System.Web;<br />using System.Web.Mvc;<br />using BookStoreAuto.Models;<br /><br />namespace BookStoreAuto.Controllers<br />{<br />    public class HomeController : Controller<br />    {<br />        private BookContext db = new BookContext();<br /><br />        // GET: Home<br />        public async Task<ActionResult> Index()<br />        {<br />            return View(await db.Books.ToListAsync());<br />        }<br /><br />        // GET: Home/Details/5<br />        public async Task<ActionResult> Details(int? id)<br />        {<br />            if (id == null)<br />            {<br />                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);<br />            }<br />            Book book = await db.Books.FindAsync(id);<br />            if (book == null)<br />            {<br />                return HttpNotFound();<br />            }<br />            return View(book);<br />        }<br /><br />        // GET: Home/Create<br />        public ActionResult Create()<br />        {<br />            return View();<br />        }<br /><br />        // POST: Home/Create<br />        // To protect from overposting attacks, please enable the specific properties you want to bind to, for <br />        // more details see http://go.microsoft.com/fwlink/?LinkId=317598.<br />        [HttpPost]<br />        [ValidateAntiForgeryToken]<br />        public async Task<ActionResult> Create([Bind(Include = \"Id,Name,Author,Price\")] Book book)<br />        {<br />            if (ModelState.IsValid)<br />            {<br />                db.Books.Add(book);<br />                await db.SaveChangesAsync();<br />                return RedirectToAction(\"Index\");<br />            }<br /><br />            return View(book);<br />        }<br /><br />        // GET: Home/Edit/5<br />        public async Task<ActionResult> Edit(int? id)<br />        {<br />            if (id == null)<br />            {<br />                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);<br />            }<br />            Book book = await db.Books.FindAsync(id);<br />            if (book == null)<br />            {<br />                return HttpNotFound();<br />            }<br />            return View(book);<br />        }<br /><br />        // POST: Home/Edit/5<br />        // To protect from overposting attacks, please enable the specific properties you want to bind to, for <br />        // more details see http://go.microsoft.com/fwlink/?LinkId=317598.<br />        [HttpPost]<br />        [ValidateAntiForgeryToken]<br />        public async Task<ActionResult> Edit([Bind(Include = \"Id,Name,Author,Price\")] Book book)<br />        {<br />            if (ModelState.IsValid)<br />            {<br />                db.Entry(book).State = EntityState.Modified;<br />                await db.SaveChangesAsync();<br />                return RedirectToAction(\"Index\");<br />            }<br />            return View(book);<br />        }<br /><br />        // GET: Home/Delete/5<br />        public async Task<ActionResult> Delete(int? id)<br />        {<br />            if (id == null)<br />            {<br />                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);<br />            }<br />            Book book = await db.Books.FindAsync(id);<br />            if (book == null)<br />            {<br />                return HttpNotFound();<br />            }<br />            return View(book);<br />        }<br /><br />        // POST: Home/Delete/5<br />        [HttpPost, ActionName(\"Delete\")]<br />        [ValidateAntiForgeryToken]<br />        public async Task<ActionResult> DeleteConfirmed(int id)<br />        {<br />            Book book = await db.Books.FindAsync(id);<br />            db.Books.Remove(book);<br />            await db.SaveChangesAsync();<br />            return RedirectToAction(\"Index\");<br />        }<br /><br />        protected override void Dispose(bool disposing)<br />        {<br />            if (disposing)<br />            {<br />                db.Dispose();<br />            }<br />            base.Dispose(disposing);<br />        }<br />    }<br />}<br /></pre><p>All I had to write: So this is to create three classes (Book, Purchase, BookContext), add 2 tables (dbo.Books, dbo.Purchases) and just put the daws and specify the path to the page template when creating the controller. On this I will finish this article. All questions you can address <a href='mailto:hru91nik@mail.ru'>here</a>.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Principles of SOLID.</h3><pre><b>S - Single Responsibility Principle</b> {<br />	The class must have only one reason for the change.<br />}<br /><b>O - Open / Closed Principle</b> {<br />	The essence of the program should be open for extension, but closed for modification.<br />}<br /><b>L - Liskov Substitution Principle</b> {<br />	It should be possible to substitute, instead of the base type of any subtype thereof.<br />}<br /><b>I - Interface Segregation Principle</b> {<br />	Customers should not forced to depend on methods that do not use.<br />}<br /><b>D - Dependency Inversion Principle</b> {<br />	The top-level modules should not depend on the lower-level modules.<br />	Both must depend on abstractions.<br />	Abstractions should not depend on details.<br />	Details should depend on abstractions.<br />}</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>C# base code.</h3><p>If you consider yourself a competent specialist, then answer the following questions: <br />1. What does this code do ?.<br />2. Is it possible to perform a review ?.<br />3. Is refactoring possible ?.</p><pre>public static List<Period> ApplyLogicalAnd(Period dtPair, List<Period> justification)<br />{<br />    var justified = new List<Period>();<br />    var pieces = new Stack<Period>();<br />    pieces.Push(dtPair);<br /><br />    while (pieces.Count > 0)<br />    {<br />        var ipiece = pieces.Pop();<br />        foreach (var jpair in justification)<br />        {<br />            // justification affects time piece<br />            if (ipiece.Begin < jpair.End && ipiece.End > jpair.Begin)<br />            {<br />                if (ipiece.Begin >= jpair.Begin && ipiece.End <= jpair.End)<br />                {<br />                    // piece is inside<br />                    justified.Add(ipiece);<br />                }<br />                else<br />                {<br />                    DateTime jbegin;<br />                    DateTime jend;<br /><br />                    if (ipiece.Begin < jpair.Begin)<br />                    {<br />                        jbegin = jpair.Begin;<br />                        pieces.Push(new Period(ipiece.Begin, jpair.Begin));<br />                    }<br />                    else<br />                    {<br />                        jbegin = ipiece.Begin;<br />                    }<br />                    if (ipiece.End > jpair.End)<br />                    {<br />                        jend = jpair.End;<br />                        pieces.Push(new Period(jpair.End, ipiece.End));<br />                    }<br />                    else<br />                    {<br />                        jend = ipiece.End;<br />                    }<br /><br />                    if (jbegin != jend)<br />                    {<br />                        justified.Add(new Period(jbegin, jend));<br />                    }<br />                }<br />                // proceed with different pieces<br />                break;<br />            }<br />        }<br />    }<br /><br />    return justified;<br /><br />}</pre><p>For those who do not consider themselves as such, the answer is below:</p><pre>using System;<br />using System.Collections.Generic;<br /><br />namespace ConsoleApp<br />{<br />    internal class Program<br />    {<br />		<br />	// Test right here, so as not to drag dependencies<br />        private static void Main(string[] args)<br />        {<br />            var workTime = new Period(new TimeSpan(9, 0, 0), new TimeSpan(18, 0, 0));<br />            var inside = new Period(new TimeSpan(10, 0, 0), new TimeSpan(11, 0, 0));<br />            var outside = new Period(new TimeSpan(08, 0, 0), new TimeSpan(19, 0, 0));<br />            var includesStart = new Period(new TimeSpan(08, 0, 0), new TimeSpan(10, 0, 0));<br />            var includesEnd = new Period(new TimeSpan(15, 0, 0), new TimeSpan(20, 0, 0));<br />            var later = new Period(new TimeSpan(20, 0, 0), new TimeSpan(21, 0, 0));<br />            var before = new Period(new TimeSpan(07, 0, 0), new TimeSpan(08, 0, 0));<br /><br />            var periods = new List<Period> {<br />                inside, outside, includesStart, includesEnd, later, before };<br /><br />            Console.WriteLine(\"New\");<br />            foreach (var period in ApplyLogicalAnd2(workTime, periods))<br />                Console.WriteLine(period);<br />            Console.WriteLine(\"Old\");<br />            foreach (var period in ApplyLogicalAnd(workTime, periods))<br />                Console.WriteLine(period);<br /><br />            Console.Read();<br />        }<br /><br />        // New version<br />        internal static IEnumerable<Period> ApplyLogicalAnd2(Period thePeriod, IEnumerable<Period> periods)<br />        {<br />            var crossings = new List<Period>();<br />            foreach (var period in periods)<br />                FindCrossings(thePeriod, crossings, period);<br />            return crossings;<br />        }<br /><br />        private static void FindCrossings(Period thePeriod, IList<Period> crossings, Period period)<br />        {<br />            if (thePeriod.IsInside(period) || period.IsInside(thePeriod))<br />                crossings.Add(period);<br />            else if (period.IncludesStart(thePeriod))<br />                crossings.Add(new Period(thePeriod.Start, period.End));<br />            else if (period.IncludesEnd(thePeriod))<br />                crossings.Add(new Period(period.Start, thePeriod.End));<br />        }<br /><br />        // Original code<br />	// When studying, we understand that we are looking for the intersection of an interval with a list of intervals.<br />        public static List<Period> ApplyLogicalAnd(Period dtPair, List<Period> justification)<br />        {<br />            var justified = new List<Period>();<br />            var pieces = new Stack<Period>();<br />            pieces.Push(dtPair);<br /><br />            while (pieces.Count > 0)<br />            {<br />                var ipiece = pieces.Pop();<br />                foreach (var jpair in justification)<br />                {<br />                    // justification affects time piece<br />                    if (ipiece.Start < jpair.End && ipiece.End > jpair.Start)<br />                    {<br />                        if (ipiece.Start >= jpair.Start && ipiece.End <= jpair.End)<br />                        {<br />                            // piece is inside<br />                            justified.Add(ipiece);<br />                        }<br />                        else<br />                        {<br /><br />                            TimeSpan jbegin;<br />                            TimeSpan jend;<br /><br />                            if (ipiece.Start < jpair.Start)<br />                            {<br />                                jbegin = jpair.Start;<br />                                pieces.Push(new Period(ipiece.Start, jpair.Start));<br />                            }<br />                            else<br />                            {<br />                                jbegin = ipiece.Start;<br />                            }<br />                            if (ipiece.End > jpair.End)<br />                            {<br />                                jend = jpair.End;<br />                                pieces.Push(new Period(jpair.End, ipiece.End));<br />                            }<br />                            else<br />                            {<br />                                jend = ipiece.End;<br />                            }<br /><br />                            if (jbegin != jend)<br />                            {<br />                                justified.Add(new Period(jbegin, jend));<br />                            }<br />                        }<br />                        // proceed with different pieces<br />                        break;<br />                    }<br />                }<br />            }<br /><br />            return justified;<br />        }<br />    }<br /><br />    // TODO use generic or ready-made<br />    internal class Period<br />    {<br />        internal TimeSpan Start { get; private set; }<br />        internal TimeSpan End { get; private set; }<br /><br />        internal Period() { }<br /><br />	// TODO add the invariant: start> end<br />        internal Period(TimeSpan start, TimeSpan end)<br />        {<br />            Start = start;<br />            End = end;<br />        }<br /><br />        public override string ToString()<br />        {<br />            return Start + \" \" + End;<br />        }<br /><br />        internal bool IsInside(Period another)<br />        {<br />            return another.Start <= Start && End <= another.End;<br />        }<br /><br />        internal bool IncludesStart(Period another)<br />        {<br />            return another.Start < End && Start < another.Start && End < another.End;<br />        }<br /><br />        internal bool IncludesEnd(Period another)<br />        {<br />            return Start < another.End && another.Start < Start && another.End < End;<br />        }<br />    }<br />}</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Optimization TabControl.</h3><p>Most recently I had to face the following task: 'It is necessary to fill TabControl with a list at once'. That is, do not use foreach. I implemented the filling of TabControl as follows:</p><pre>Linq = (<br />	From q In db.databasess<br />	Select New TabPage(q.name)<br />).ToList().Where(<br />	Function(x) GetColor(x.Text) = Color.Gray<br />).ToArray(); <br /><br />TabRole.TabPages.AddRange(Linq);</pre><p>As you can see, the solution turned out to be in a couple of lines. And the productivity with this has greatly increased.</p><p id='createdDate'>" + date_publish(n) + "</p>", 'C#');
}

function sql(){
	if (document.getElementById('flag').innerHTML === 'flag ru')
		load_page(nav + back + "<h3>Как создать Excel файл средствами sql server.</h3><pre>EXEC sp_configure 'show advanced options', 1<br/>GO<br/><br/>EXEC sp_configure 'xp_cmdshell', 1<br/>GO<br/><br/>RECONFIGURE<br/>GO<br/><br/>DECLARE @sql varchar(300)<br/>SELECT @sql = 'bcp \"use TSQL2016; select ''Id'',''DateWrite'',''Euro'',''Brent'' union all select cast(Id as varchar(100)), cast(DateWrite as varchar(100)), cast(Euro as varchar(100)), cast(Brent as varchar(100)) from Euro_Brent\" queryout G:\\Excel.csv -c -t, -T -S' + @@servername<br/>EXEC master..xp_cmdshell @sql<br/><br/>-- Example query<br/>use TSQL2016;<br/>select 'Id', 'DateWrite', 'Euro', 'Brent'<br/>union all<br/>select cast(Id as varchar(100)), cast(DateWrite as varchar(100)), cast(Euro as varchar(100)), cast(Brent as varchar(100)) <br/>from Euro_Brent</pre><table border='1'><tr><th>Id</th><th>DateWrite</th><th>Euro</th><th>Brent</th></tr><tr><td>1</td><td>2017-12-15 10:00:00</td><td>69.3</td><td>63.42</td></tr><tr><td>2</td><td>2017-12-15 10:10:00</td><td>69.43</td><td>63.47</td></tr><tr><td>3</td><td>2017-12-15 10:20:00</td><td>69.49</td><td>63.46</td></tr><tr><td>...</td><td>...</td><td>...</td><td>...</td></tr><tr><td>39</td><td>2017-12-15 16:20:00</td><td>69.48</td><td>63.31</td></tr><tr><td>40</td><td>2017-12-15 16:30:00</td><td>69.48</td><td>63.35</td></tr></table><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Column name or number of supplied values does not match table definition.</h3><p>Если вы получаете данную ошибку, при этом соответствие столбцов соответствует исходной и вставляемой таблицам, используйте следующий синтаксис, чтобы избежать ее:</p><pre>select *into new_table_name from source_table_name where [date] between '20160101' and '20161231'</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Как удалить активные процессы всех пользователей ?.</h3><pre>declare @dbname varchar(100)<br />declare @query varchar(max)<br />set @query = ''<br />set @dbname = 'db_name'<br />select @query = coalesce(@query, ',') + 'kill ' + convert(varchar, spid) + '; '<br />from sys.sysprocesses where dbid = db_id(@dbname)<br />if len(@query) > 0 begin<br />	exec(@query)<br />end</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Лучшие практики.</h3><p>Лучшее что я мог видеть.</p><pre>declare @i int = 365;<br />select power(0.99, @i) [min_motivation], power(1.01, @i) [max_motivation]</pre><p><b>Результат:</b></p><table border='1'><tr><th>min_motivation</th><th>max_motivation</th></tr><tr><td>0.03</td><td>37.78</td></tr></table><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Максимальное значение типа данных bigint.</h3><p>Как получить максимальное значение типа bigint:</p><pre>select power(2., 64) - 1 as maxValueBigInt</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Смещение строк.</h3><p>Если вы хотите пропустить <b>n</b>-е число записей и получить следующие <b>m</b> записей, используйте следующий синтаксис:</p><pre>declare @n int = 0;<br />declare @m int = 5;<br />select *from (<br />	values (0), (1), (2), (3), (4), (5), (6), (7), (8), (9), (10), (11), (12), (13), (14), (15), (16), (17), (18), (19), (20)<br />) as t(id)<br />order by id<br />offset @n rows fetch first @m rows only</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Unpivot:</h3><p>Если вам нужно сделать транспонирование (строки, заменить столбцами) таблицы, возьмите следующий код в качестве примера и используйте оператор <b>PIVOT</b>. Для обратной реализации транспозиции (столбцы заменить строками) используется оператор <b>UNPIVOT</b>.</p><pre>select IdKey, [Type], summ, [01], [02], [03], [04], [05], [06], [07], [08], [09], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31]<br />from (<br />	values(1, 'TYPE', 10.125, 198.3905194, 198.3905194, 332.8376936, 347.1834089, 459.8195238, 339.3698885, 521.4020027, 186.6064438, 349.5779158, 468.5718135, 466.1038878, 466.1038878, 477.7564851, 498.1261596, 201.9377443, 486.0331927, 545.2503678, 452.2873126, 512.7663862, 549.3981369, 462.8785397, 391.3860639, 595.2856341, 396.8570894, 595.2856341, 595.2856341, 541.3424301, 594.5881906, 396.8570894, 575.4633152, 396.8570894)<br />) as t(IdKey, [Type], summ, [01], [02], [03], [04], [05], [06], [07], [08], [09], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31])<br /><br /></pre><p><b>Результат</b></p><table border='1'><tr><th>IdKey</th><th>Type</th><th>summ</th><th>01</th><th>...</th><th>31</th></tr><tr><td>1</td><td>TYPE</td><td>10.125</td><td>198.390</td><td>...</td><td>396.857</td></tr></table><br /><pre>declare @date date = getdate();<br />select IdKey, [Type], concat(FORMAT(@date, 'yyMM'), DateKey) DateKey, Quantity, Summ<br />from (<br />	values(1, 'TYPE', 10.125, 198.390, 198.390, 332.837, 347.183, 459.819, 339.369, 521.402, 186.606, 349.577, 468.571, 466.103, 466.103, 477.756, 498.126, 201.937, 486.033, 545.250, 452.287, 512.766, 549.398, 462.878, 391.386, 595.285, 396.857, 595.285, 595.285, 541.342, 594.588, 396.857, 575.463, 396.857)<br />) as t(IdKey, [Type], summ, [01], [02], [03], [04], [05], [06], [07], [08], [09], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31])<br />UNPIVOT (<br />    Quantity<br />    FOR DateKey IN ([01], [02], [03], [04], [05], [06], [07], [08], [09], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31])<br />) UNPIV<br />order by IdKey</pre><p><b>Результат</b></p><table border='1'><tr><th>IdKey</th><th>Type</th><th>DateKey</th><th>Quantity</th><th>Summ</th></tr><tr><td>1</td><td>TYPE</td><td>171001</td><td>198.390</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171002</td><td>198.390</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171003</td><td>332.837</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171004</td><td>347.183</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171005</td><td>459.819</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171006</td><td>339.369</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171007</td><td>521.402</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171008</td><td>186.606</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171009</td><td>349.577</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171010</td><td>468.571</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171011</td><td>466.103</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171012</td><td>466.103</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171013</td><td>477.756</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171014</td><td>498.126</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171015</td><td>201.937</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171016</td><td>486.033</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171017</td><td>545.250</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171018</td><td>452.287</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171019</td><td>512.766</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171020</td><td>549.398</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171021</td><td>462.878</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171022</td><td>391.386</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171023</td><td>595.285</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171024</td><td>396.857</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171025</td><td>595.285</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171026</td><td>595.285</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171027</td><td>541.342</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171028</td><td>594.588</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171029</td><td>396.857</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171030</td><td>575.463</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171031</td><td>396.857</td><td>10.125</td></tr></table><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Преобразование MDX запроса в плоскую таблицу.</h3><p>Как развернуть mdx запрос в плоскую таблицу ?.</p><pre>DECLARE @query VARCHAR(MAX);<br />DECLARE @mdxquery VARCHAR(MAX);<br /><br />SET @mdxquery = ' YOUR_MDX_QUERY ';<br /><br />SET @query = '<br />	WITH MDX AS (<br />		SELECT<br />			ListColumns<br />		FROM OPENQUERY(YOUR_SERVER_NAME, ''' + @mdxquery + ''')<br />	)<br /><br />	SELECT ListColumns FROM MDX<br />';<br /><br />EXEC (@query);</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Pivot:</h3><p>Как то не так давно, была поставлена задача. Необходимо было написать скрипт на выборку сумм по продажам (sales) со следующими условиями:<br />1. Выводить суммы продаж за указанный пользователем период;<br />2. В строки выводить наименование товаров, сумму продаж за указанную дату, при этом т.к. период выборки может меняться, количество колонок в итоговом отчете заранее неизвестно.<br />3. Данные выводить без учета времени. <br />4. В итоговый запрос выводить колонки: Наименование товара, дата1, дата2 и т.д</p><pre>--Table [ref_goods]:<br />select *from (<br />	values<br />		(1, 'Ballpoint pen black'),<br />		(1, 'Ballpoint pen blue'),<br />		(1, 'Gel black handle'),<br />		(1, 'Gel pen blue'),<br />		(2, 'Pencil blue'),<br />		(2, 'Pencil green'),<br />		(2, 'Pencil Red')<br />) as ref_goods(id, good_name)<br /><br />--Insert into Table [sales]:<br />declare @StartDate datetime<br />declare @EndDate datetime<br />declare @Good int<br />declare @Amount numeric(18, 2)<br /><br />set @StartDate = '20120101'<br />set @EndDate = getdate()<br />set @Good = 1<br />set @Amount = 15.12<br /><br />while @StartDate < @EndDate begin<br />	insert into sales<br />	select @Good, @StartDate, @Amount<br /><br />	set @StartDate = dateadd(hour, 4, @StartDate)<br />	set @Good = case when @Good = 7 then 1 else @Good + 1 end<br />	set @Amount = case when @Amount > 100000 then 15.12 else @Amount + 21.14 end<br />end<br /><br />--Strictly speaking, the request itselfset language british;<br />declare @StartDate datetime = '20120101';<br />declare @EndDate datetime = getdate();<br /><br />declare @cols nvarchar(max)<br />select @cols = coalesce(@cols + ',[' + convert(nvarchar, s_date, 104) + ']', '[' + convert(nvarchar, s_date, 104) + ']')<br />			   from (select distinct cast(s_date as date) s_date from sales where s_date between @StartDate and @EndDate) PV<br />			   order by s_date<br /><br />declare @query nvarchar(max)<br />set @query = '<br />				select *from (<br />					select r.good_name, sum(s.amount) [amount], cast(s_date as date) s_date<br />					from sales s<br />						join ref_goods r on s.id_good = r.id<br />					where s_date between ''' + convert(nvarchar, @StartDate, 104) + ''' and ''' + convert(nvarchar, @EndDate, 104) + '''<br />					group by r.good_name, s_date<br />				) x<br />				pivot (<br />					sum(amount)<br />					for s_date in (' + @cols + ')<br />				) p<br />			'<br /><br />exec SP_EXECUTESQL @query</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Что такое индекс в T-SQL ?.</h3><p>Индекс - это объект базы данных, созданный для повышения производительности поиска данных. Индекс похож на алфавитный указатель в книге. Если нам нужно найти определение функции в T-SQL, мы сделаем следующее:<br /><br />1. Найдём алфавитный указатель в книге (обычно в конце книги);<br />2. Затем найдём нужную функцию, например 'string_split', которая находится на странице 52;<br />3. После, перейдем на эту страницу и прочитаем все необходимое о данной функции.<br /><br />Индексы группируются и некластеризованы.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Оптимизация запроса.</h3><p>Имеются два запроса, результат выборки один и тот же.<br />Один из них выполняется за 40 секунд, а другой - за 4 секунды, в чем подвох ?. Смотрим ниже:<br /><br /><b>Запрос:</b></p><pre>select <br />	isnull(_all.rdc, plans.rdc) rdc, <br />	isnull(_all.distributor, '') distributor, <br />	isnull(_all.sv, '') sv, <br />	isnull(_all.etp, '') etp, <br />	isnull(_all.subject, plans.subject) subject, <br />	isnull(_all.cnt_all, 0) cnt_all, <br />	isnull(_period.cnt_period, 0) cnt_period, <br />	isnull(plans.pln,0) reestr_tt <br />from (<br />	select rdc, distributor, sv, etp, subject, count(id) cnt_all from #TT<br />	where isnull(@rdc, rdc) = rdc <br />	and isnull(@subject, subject) = subject<br />	and distributor = isnull(@company, distributor)<br />	group by rdc, distributor, sv, etp, subject<br />) _all join (<br />	select rdc, distributor, sv, etp, subject, count(id) cnt_period from #TT<br />	where dtCreate between isnull(@beginDate, '19000101') and isnull(@endDate, '21500101')<br />	and isnull(@rdc, rdc) = rdc <br />	and isnull(@subject, subject) = subject<br />	and distributor = isnull(@company, distributor)<br />	group by rdc, distributor, sv, etp, subject<br />) _period<br />on <br />	_all.distributor = _period.distributor and <br />	_all.etp = _period.etp and<br />	_all.subject = _period.subject and<br />	_period.sv = _all.sv<br />right join (<br />	select upl.rdc, p.subject, sum(p.count) pln from<br />	ReportPlan p join (select distinct rdc, subject from upload where isnull(@rdc, rdc) = rdc and isnull(@subject, subject) = subject) upl on p.subject = upl.subject and upl.rdc is not null<br />	group by upl.rdc, p.subject<br />) plans on plans.subject = _all.subject<br />order by _all.rdc, _all.subject<br /></pre><p><b>Результат:</b></p><pre>SQL Server Execution Times:			CPU time = 0 ms,  elapsed time = 0 ms.<br />SQL Server parse and compile time:  		CPU time = 859 ms, elapsed time = 950 ms.<br />SQL Server Execution Times:			CPU time = 0 ms,  elapsed time = 0 ms.<br /><br />(1026 row(s) affected)<br />Table 'Workfile'. Scan count 0, logical reads 0, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br />Table 'Worktable'. Scan count 0, logical reads 0, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br />Table 'ReportPlan'. Scan count 1, logical reads 144, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br />Table 'upload'. Scan count 1, logical reads 745, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br />Table '#TT'. Scan count 2, logical reads 1524, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br /><br />(1 row(s) affected)<br /><br />SQL Server Execution Times:			CPU time = 23188 ms,  elapsed time = 45460 ms.<br />SQL Server parse and compile time:		CPU time = 0 ms, elapsed time = 0 ms.<br />SQL Server Execution Times:			CPU time = 0 ms,  elapsed time = 0 ms.<br /></pre><p><b>Оптимизированный запрос:</b></p><pre>select <br />	isnull(_all.rdc, plans.rdc) rdc, <br />	_all.distributor, <br />	_all.sv, <br />	_all.etp, <br />	isnull(_all.subject, plans.subject) subject, <br />	_all.cnt_all, <br />	_period.cnt_period, <br />	plans.pln reestr_tt <br />from (<br />	select upl.rdc, p.subject, sum(p.count) pln from<br />	ReportPlan p join (<br />		select distinct rdc, subject from sensus_etp_upload where isnull(@rdc, rdc) = rdc and isnull(@subject, subject) = subject<br />	) upl on p.subject = upl.subject and upl.rdc is not null<br />	group by upl.rdc, p.subject<br />) plans left join (<br />	select rdc, distributor, sv, etp, subject, count(id) cnt_all from #TT<br />	where isnull(@rdc, rdc) = rdc <br />	and isnull(@subject, subject) = subject<br />	and distributor = isnull(@company, distributor)<br />	group by rdc, distributor, sv, etp, subject<br />) _all on plans.subject = _all.subject<br />left join (<br />	select rdc, distributor, sv, etp, subject, count(id) cnt_period from #TT<br />	where dtCreate between isnull(@beginDate, '19000101') and isnull(@endDate, '21500101')<br />	and isnull(@rdc, rdc) = rdc <br />	and isnull(@subject, subject) = subject<br />	and distributor = isnull(@company,distributor)<br />	group by rdc, distributor, sv, etp, subject<br />) _period<br />on <br />	_all.distributor = _period.distributor and <br />	_all.etp = _period.etp and<br />	_all.subject = _period.subject and<br />	_period.sv = _all.sv<br />order by _all.rdc, _all.subject<br /></pre><p><b>Результат:</b></p><pre>SQL Server Execution Times:			CPU time = 0 ms,  elapsed time = 0 ms.<br />SQL Server parse and compile time:		CPU time = 843 ms, elapsed time = 849 ms.<br />SQL Server Execution Times:			CPU time = 0 ms,  elapsed time = 0 ms.<br /><br />(995 row(s) affected)<br />Table 'Worktable'. Scan count 156, logical reads 6600, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br />Table '#TT'. Scan count 2, logical reads 1556, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br />Table 'upload'. Scan count 1, logical reads 1471, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br />Table 'ReportPlan'. Scan count 1, logical reads 144, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br /><br />(1 row(s) affected)<br /><br />SQL Server Execution Times:			CPU time = 2172 ms,  elapsed time = 2660 ms.<br />SQL Server parse and compile time:		CPU time = 0 ms, elapsed time = 0 ms.<br />SQL Server Execution Times:			CPU time = 0 ms,  elapsed time = 0 ms.</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Перенос DistinctBy на T-SQL.</h3><p>На данный момент я разрабатываю и поддерживаю проект типа MVC, и мне часто приходится иметь дело с переписыванием кода C# на T-SQL. Например, сегодня рассмотрим метод C# DistinctBy(). Я взял массив данных из прошлой статьи:</p><pre>// C#<br />data.DistinctBy(x => x.TmId).OrderBy(x => x.Points)<br /><br />// T-SQL<br />select *from(<br />	select Rm as Employee, (OutPoint + IncrementPoint + ArkbPoint + SdzPoint + RoutePoint + SchedulePoint) / 6 as ball, row_number() over (partition by RmId order by Id) rn from #tmp<br />) t where rn = 1</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Перенос LinqToSql на T-SQL.</h3><p>Всем хорошего дня, недавно я столкнулся с задачей переписать linq в t-sql, все было бы хорошо, но было одно но: нам пришлось переписать метод C# Array.FindIndex() на T-SQL. Реализация ниже:</p><pre>// C#<br />List<Rating2> data =<br />	Context.Rating.Where(x => x.CreatedDate.Month == date.Month && x.CreatedDate.Year == date.Year && x.CreatedDate.Day == date.Day).ToList();<br /><br />List<Rating> ratings = data.Select(<br />	x => new Rating<br />	{<br />		Id = x.Id,<br />		Rdc = x.Rdc,<br />		RdcId = x.RdcId,<br />		Distributor = x.Distributor,<br />		DistributorId = x.DistributorId,<br />		EtpId = x.EtpId,<br />		Etp = x.Etp,<br />		RmId = x.RmId,<br />		Rm = x.Rm,<br />		Sv = x.Sv,<br />		SvId = x.SvId,<br />		Tm = x.Tm,<br />		TmId = x.TmId,<br />		OutPoint = 2 * (Array.FindIndex(data.OrderByDescending(o => o.OutMass).ToArray(), a => a.EtpId == x.EtpId) + 1),<br />		IncrementPoint = 2 * (Array.FindIndex(data.OrderByDescending(o => o.PrevOutMass).ToArray(), a => a.EtpId == x.EtpId) + 1),<br />		ArkbPoint = Array.FindIndex(data.OrderByDescending(o => o.CountAtt).ToArray(), a => a.EtpId == x.EtpId) + 1,<br />		SdzPoint = Array.FindIndex(data.OrderByDescending(o => o.AvgOrdersPerDay).ToArray(), a => a.EtpId == x.EtpId) + 1,<br />		RoutePoint = Array.FindIndex(data.OrderByDescending(o => o.PenaltyRoute).ToArray(), a => a.EtpId == x.EtpId) + 1,<br />		SchedulePoint = Array.FindIndex(data.OrderByDescending(o => o.PenaltyWorktime).ToArray(), a => a.EtpId == x.EtpId) + 1,<br />		ObservanceRoute = x.PenaltyRoute,<br />		MaintenanceSchedule = x.PenaltyWorktime,<br />		Sdz = x.AvgOrdersPerDay,<br />		FactOutLast = x.PrevOutMass,<br />		PlanPercentArkb = x.CountAtt,<br />		FactOut = x.FactOut,<br />		PlanOut = x.PlanOut,<br />		FactArkb = x.FactArkb,<br />		PlanArkb = x.PlanArkb,<br />		PlanPercentOut = x.OutMass,<br />		IncrementRate = x.IncrementRate<br />}).ToList();<br /><br />// T-SQL<br />select<br />	Id,<br />	Rdc,<br />	RdcId,<br />	Distributor,<br />	DistributorId,<br />	EtpId,<br />	Etp,<br />	RmId,<br />	Rm,<br />	Sv,<br />	SvId,<br />	Tm,<br />	TmId,<br />	2 * cast(row_number() over(order by OutMass desc, Id) as int) OutPoint,<br />	2 * cast(row_number() over(order by PrevOutMass desc, Id) as int) IncrementPoint,<br />	cast(row_number() over(order by CountAtt desc, Id) as int) ArkbPoint,<br />	cast(row_number() over(order by AvgOrdersPerDay desc, Id) as int) SdzPoint,<br />	cast(row_number() over(order by PenaltyRoute desc, Id) as int) RoutePoint,<br />	cast(row_number() over(order by PenaltyWorktime desc, Id) as int) SchedulePoint,<br />	PenaltyRoute as ObservanceRoute,<br />	PenaltyWorktime as MaintenanceSchedule,<br />	AvgOrdersPerDay as Sdz,<br />	PrevOutMass as FactOutLast,<br />	CountAtt as PlanPercentArkb,<br />	FactOut,<br />	PlanOut,<br />	FactArkb,<br />	PlanArkb,<br />	OutMass as PlanPercentOut,<br />	IncrementRate<br />from Rating<br />where isnull(@load_date, CreatedDate) = CreatedDate<br />order by Id</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Null value is eliminated by an aggregate or other SET operation.</h3><p>Полученная ошибка появлялась временами в хранимых процедурах. Пример показал, как вы можете избавиться от нее.</p><pre>--Before:<br />select sum(col2) sum_col2 from(<br />	select *from (<br />		values<br />			( 1, NULL, 3 ),<br />            ( 1, 2, 3 )<br />	) as d(col1, col2, col3)<br />) t<br /><br /><b>Результат:</b><br />sum_col2<br />2<br />Warning: Null value is eliminated by an aggregate or other SET operation.<br />(1 row(s) affected)<br /><br />--After:<br />select sum(isnull(col2, 0)) sum_col2 from(<br />	select *from (<br />		values<br />			( 1, NULL, 3 ),<br />            ( 1, 2, 3 )<br />	) as d(col1, col2, col3)<br />) t<br /><br /><b>Результат:</b><br />sum_col2<br />2<br />(1 row(s) affected)</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Задания.</h3><p>В данной статье я хотел бы привести пример запроса, который отображает список всех заданий относительно желаемого имени таблиц, представлений, хранимых процедур, функций и многих других объектов sql.</p><pre>select name [JobName], step_name, *<br />from msdb.dbo.sysjobsteps s<br />	join msdb.dbo.sysjobs o on o.job_id = s.job_id<br />where command like '%contains%'</pre><p>Запрос «содержит» - ваши данные для поиска (это могут быть либо таблицы, либо процедуры, а также функции и другие объекты sql). Ниже приведен пример запроса, который возвращает реальные данные.</p><pre>select name [JobName], step_name, *<br />from msdb.dbo.sysjobsteps s<br />	join msdb.dbo.sysjobs o on o.job_id = s.job_id<br />where command like '%server%'<br /></pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Импорт и экспорт данных.</h3><p>В этой статье я хочу поделиться с вами опытом экспорта данных из Excel в MS SQL SERVER<br /><br />Предположим, что существует пустая таблица dbo.Coords.<br />Также есть файл Excel с некоторыми данными.<br />Сначала запустите «Импорт и экспорт данных сервера Sql», выберите «Местоположение файла» в раскрывающемся списке <b>Источник данных</b>: «Microsoft Excel» в записи пути к файлу <b>Excel</b>.<br />В поле <b>Назначение</b>: выберите «Собственный клиент SQL Server 11.0», выберите базу данных из списка ...<br />Скопируйте данные из файла Excel в таблицу, указанную на следующем шаге.<br />Файл Excel называется Coords.xlsx, таблица называется dbo.Coords.<br />Посмотрим, правильно ли мы выбрали все.<br />И начнем, пожалуй.<br />Экспорт завершен.<br />Не забудьте проверить, что данные в таблице dbo.Coords обновлены.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>База данных по умолчанию.</h3><p>Часто при подключении к компоненту DataBase Engine по умолчанию устанавливается база данных «master». Исправить данную ситуацию мы можем следующим образом:</p><pre>[Файл] -> [Подключиться к базе данных] -> [Опции >>] -> На вкладке [Подключение к] выберите [&lt;Обзор сервера ...&gt;] -> Ответьте утвердительно, чтобы посмотреть базы данных -> И выберите из списка требуемую базу данных.</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Блокировки.</h3><p>На одном из этапов своей карьеры разработчика вы можете начать использовать хинт WITH (NOLOCK) повсеместно, поскольку с ним ваши запросы выполняются быстрее. Это не всегда плохо, но может сопровождаться неожиданными побочными эффектами. Я же сфокусируюсь только на одном из них. Когда ваш запрос обращается к какой-либо таблице, даже с хинтом NOLOCK, вы накладываете блокировку стабилизации схемы (schema stability lock, Sch-S). Никто не сможет изменить эту таблицу или её индексы до тех пор, пока ваш запрос не завершится. Это не кажется серьёзной проблемой до тех пор, пока вам не понадобится удалить индекс, но вы не сможете этого сделать, поскольку люди постоянно работают с этой таблицей, находясь в полной уверенности, что не создают никаких проблем, поскольку они используют хинт WITH (NOLOCK). Здесь нет «серебряной пули», но начните читать об уровнях изоляции SQL Server — я полагаю, что уровень изоляции READ COMMITTED SNAPSHOT будет наилучшим выбором для вашего приложения. Вы будете получать целостные данные с меньшим количеством проблем с блокировками.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>IntelliSense.</h3><p>На днях я заметил, что IntelliSense не работает в sqlms 2014.<br />Он перестал работать из-за удаления sql Assistant.<br /><br />Эта проблема решается очень легко:</p><pre>Выберите: Интсрументы -> Опции -> Текстовый редактор -> Transact-SQL -> IntelliSense -> Включить IntelliSense</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Кубы.</h3><p>Чтобы подключиться к системе анализа информации OLAP, вам необходимо выполнить следующие шаги:<br />1. Запустите продукт Microsoft Excel, входящий в комплект Microsoft Office.<br />2. В меню Excel перейдите на вкладку «Данные».<br />3. На панели «Получить внешние данные» выберите «Из других источников» - «Из служб аналитики».<br />4. В появившемся диалоговом окне в поле «Имя сервера» введите имя сервера: «your-server-name». Оставьте остальные параметры неизменными. Нажмите кнопку «Далее».<br />5. В диалоговом окне «Мастер подключения к данным» вы должны выбрать базу данных «your_db_name» на панели выбора куба - куб «your_cube_name». Нажмите 'Далее'.<br />6. В диалоговом окне «Сохранить соединение с данными и завершение работы» согласитесь с предлагаемыми вариантами и нажмите «Готово».<br />7. В диалоговом окне «Импорт данных» вы можете выбрать любую ячейку листа Excel. Нажмите кнопку «ОК».<br />8. Интерфейс с аналитической системой «your_cube_name» является стандартным интерфейсом Microsoft Excel для работы со сводными таблицами. Область самого сводного отчета отображается в левом углу.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Деревья.</h3><p>Пример дерева в t-sql.<br />Я напишу следуюший запрос, а затем попытайтесь понять, что он делает, <a href='mailto:hru91nik@mail.ru'>сюда</a> вы можете отправлять свои комментарии.<br />Код показан ниже.</p><pre>with Employees as (<br />	select *from (<br />		values<br />		   (1,  NULL, 'David'  , $10000.00),<br />		   (2,  1,    'Eitan'  ,  $7000.00),<br />		   (3,  1,    'Ina'    ,  $7500.00),<br />		   (4,  2,    'Seraph' ,  $5000.00),<br />		   (5,  2,    'Jiru'   ,  $5500.00),<br />		   (6,  2,    'Steve'  ,  $4500.00),<br />		   (7,  3,    'Aaron'  ,  $5000.00),<br />		   (8,  5,    'Lilach' ,  $3500.00),<br />		   (9,  7,    'Rita'   ,  $3000.00),<br />		   (10, 5,    'Sean'   ,  $3000.00),<br />		   (11, 7,    'Gabriel',  $3000.00),<br />		   (12, 9,    'Emilia' ,  $2000.00),<br />		   (13, 9,    'Michael',  $2000.00),<br />		   (14, 9,    'Didi'   ,  $1500.00)<br />	) as d(empid, mgrid, empname, salary)<br />),<br />EmpsRN as (<br />	select *, row_number() over(partition by mgrid order by empname, empid) as n<br />	from Employees<br />),<br />EmpsPath as (<br />	 select empid, empname, salary, 0 AS lvl, cast(0x as varbinary(max)) as sortpath<br />	 from Employees<br />	 where mgrid is null<br />	 union all<br />	 select C.empid, C.empname, C.salary, P.lvl + 1, P.sortpath + cast(n as binary(2))<br />	 from EmpsPath as P<br />		join EmpsRN as C on C.mgrid = P.empid<br />)<br />select empid, salary, replicate(' | ', lvl) + empname as empname<br />from EmpsPath<br />order by sortpath;<br /></pre><p>Пример взят из книги Итцик Бен-Гана «Microsoft SQL Server 2012. Высокопроизводительный код T-SQL. Оконные функции». </p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Оконные функции.</h3><p>Плюсы оконных функций.<br />Я не буду здесь ничего комментировать, просто посмотрите на следующий код, и вы сами все поймете. Если у вас все еще остались вопросы, вы можете адресовать их мне по этому <a href='mailto:hru91nik@mail.ru'>адресу</a>.<br />Ниже перечислены как альтернативы, так и оконные функции.</p><pre>-- 1.1. without window func<br />with CustAggregates as(<br />	select custid, sum(val) as sumval, avg(val) as avgval<br />	from Sales.OrderValues<br />	group by custid<br />),<br />GrandAggragates as(<br />	select sum(val) as sumval, avg(val) as avgval<br />	from Sales.OrderValues<br />)<br />select o.orderid, o.custid, o.val,<br />	cast(100 * o.val / ca.sumval as numeric(5, 2)) as pctcust,<br />	o.val - ca.avgval as diffcust,<br />	cast(100 * o.val / ga.sumval as numeric(5, 2)) as pctall,<br />	o.val - ga.avgval as diffall<br />from Sales.OrderValues as o<br />	join CustAggregates as ca on o.custid = ca.custid<br />	cross join GrandAggragates as ga;<br /><br />-- 1.2. without window func<br />select orderid, custid, val,<br />	cast(100 * val / (<br />		select sum(o2.val)<br />		from Sales.OrderValues as o2<br />		where o2.custid = o1.custid<br />  ) as numeric(5, 2)) as pctcust,<br />	val - (<br />		select avg(o2.val)<br />		from Sales.OrderValues as o2<br />		where o2.custid = o1.custid<br />  ) diffcust,<br />	cast(100 * val / (<br />		select sum(o2.val)<br />		from Sales.OrderValues as o2) as numeric(5, 2)) as pctall,<br />	val - (<br />		select avg(o2.val)<br />		from Sales.OrderValues as o2<br />		where o2.custid = o1.custid<br />  ) diffall<br />from Sales.OrderValues as o1<br /><br />-- 1.3. with window func<br />select orderid, custid, val,<br />	cast(100 * val / sum(val) over(partition by custid) as numeric(5, 2)) as pctcust,<br />	val - avg(val) over(partiotion by custid) diffcust,<br />	cast(100 * val / sum(val) over() as numeric(5, 2)) as pctall,<br />	val - avg(val) over() diffall<br />from Sales.OrderValues;<br /><br />-- 1.4. without window func<br />select min(col1) as start_range, max(col1) as end_range<br />from (<br />	select col1,(<br />		select min(b.col1)<br />		from dbo.T1 as b<br />		where b1.col1 >= a.col1<br />			and not exists(<br />			select *<br />			from dbo.T1 as c<br />			where c.col1 = b.col1<br />		)<br />	) as grp<br />	from dbo.T1 as a<br />) as d<br />group by grp;<br /><br />-- 1.5. with window func<br />select min(col1) as start_range, max(col1) as end_range<br />from (<br />	select col1,<br />	col1 - row_number() over(order by col1) as grp<br />	from dbo.T1<br />) as d<br />group by grp;</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Запрос с двумя или более серверами.</h3><p>На днях упала задача, как объединить две таблицы с разных серверов. Итак, на t-sql проблема была решена следующим образом:</p><pre>select *from [srvName].[dbName].[shemaName].[tableName]<br />union all<br />select *from [srvNameOld].[dbName].[shemaName].[tableName]</pre><p>Таким образом, мы получаем набор результатов с двух разных серверов, стоит отметить, что таблицы в моем случае идентичны.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>For xml path.</h3><p>В этой статье я хотел бы поделиться с вами следующим инструментом. Предположим, что существует запрос, представленный следующим кодом</p><pre>with T1 as (<br />	select *from (<br />		values<br />			(1, 'A'),<br />			(2, 'B'),<br />			(3, 'C'),<br />			(4, 'D'),<br />			(5, 'E')<br />	) as d(id, word)<br />) select *from T1</pre><p>Запрос имеет следующий вид</p><pre>select *from T1;</pre><p>Задача состоит в том, чтобы собрать строки в одном поле, например, для поля «word», результат должен быть следующим: «A, B, C, D, E». В t-sql существует следующая конструкция: <b>for xml path('')</b>. Нам будет необходимо получить этот результат. Запрос будет выглядеть следующим образом:</p><pre>select word + ', ' from T1 for xml path('');</pre><p id='createdDate'>" + date_publish(n) + "</p>", 'T-SQL');
	else
		load_page(nav + back + "<h3>How to create Excel file from sql server.</h3><pre>EXEC sp_configure 'show advanced options', 1<br/>GO<br/><br/>EXEC sp_configure 'xp_cmdshell', 1<br/>GO<br/><br/>RECONFIGURE<br/>GO<br/><br/>DECLARE @sql varchar(300)<br/>SELECT @sql = 'bcp \"use TSQL2016; select ''Id'',''DateWrite'',''Euro'',''Brent'' union all select cast(Id as varchar(100)), cast(DateWrite as varchar(100)), cast(Euro as varchar(100)), cast(Brent as varchar(100)) from Euro_Brent\" queryout G:\\Excel.csv -c -t, -T -S' + @@servername<br/>EXEC master..xp_cmdshell @sql<br/><br/>-- Example query<br/>use TSQL2016;<br/>select 'Id', 'DateWrite', 'Euro', 'Brent'<br/>union all<br/>select cast(Id as varchar(100)), cast(DateWrite as varchar(100)), cast(Euro as varchar(100)), cast(Brent as varchar(100)) <br/>from Euro_Brent</pre><table border='1'><tr><th>Id</th><th>DateWrite</th><th>Euro</th><th>Brent</th></tr><tr><td>1</td><td>2017-12-15 10:00:00</td><td>69.3</td><td>63.42</td></tr><tr><td>2</td><td>2017-12-15 10:10:00</td><td>69.43</td><td>63.47</td></tr><tr><td>3</td><td>2017-12-15 10:20:00</td><td>69.49</td><td>63.46</td></tr><tr><td>...</td><td>...</td><td>...</td><td>...</td></tr><tr><td>39</td><td>2017-12-15 16:20:00</td><td>69.48</td><td>63.31</td></tr><tr><td>40</td><td>2017-12-15 16:30:00</td><td>69.48</td><td>63.35</td></tr></table><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Column name or number of supplied values does not match table definition.</h3><p>If you get this error, and the matching of the columns matches the source and inserted tables, use the following syntax to avoid it:</p><pre>select *into new_table_name from source_table_name where [date] between '20160101' and '20161231'</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>How to delete active processes for all users ?.</h3><pre>declare @dbname varchar(100)<br />declare @query varchar(max)<br />set @query = ''<br />set @dbname = 'db_name'<br />select @query = coalesce(@query, ',') + 'kill ' + convert(varchar, spid) + '; '<br />from sys.sysprocesses where dbid = db_id(@dbname)<br />if len(@query) > 0 begin<br />	exec(@query)<br />end</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Best practices.</h3><p>The best motivation from all that I've seen.</p><pre>declare @i int = 365;<br />select power(0.99, @i) [min_motivation], power(1.01, @i) [max_motivation]</pre><p><b>Output:</b></p><table border='1'><tr><th>min_motivation</th><th>max_motivation</th></tr><tr><td>0.03</td><td>37.78</td></tr></table><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Max value data type bigint.</h3><p>How to get the maximum value of type bigint:</p><pre>select power(2., 64) - 1 as maxValueBigInt</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Offset rows fetch.</h3><p>If you want to skip the <b>n</b>-th number of records, and get the following <b>m</b> entries, then use the following syntax:</p><pre>declare @n int = 0;<br />declare @m int = 5;<br />select *from (<br />	values (0), (1), (2), (3), (4), (5), (6), (7), (8), (9), (10), (11), (12), (13), (14), (15), (16), (17), (18), (19), (20)<br />) as t(id)<br />order by id<br />offset @n rows fetch first @m rows only</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Unpivot:</h3><p>If you need to make a transposition (rows replaced by columns) of the table, take the following code as an example and use the <b>PIVOT</b> operator. For the reverse implementation of the transposition (columns to replace rows), the <b>UNPIVOT</b> operator is used.</p><pre>select IdKey, [Type], summ, [01], [02], [03], [04], [05], [06], [07], [08], [09], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31]<br />from (<br />	values(1, 'TYPE', 10.125, 198.3905194, 198.3905194, 332.8376936, 347.1834089, 459.8195238, 339.3698885, 521.4020027, 186.6064438, 349.5779158, 468.5718135, 466.1038878, 466.1038878, 477.7564851, 498.1261596, 201.9377443, 486.0331927, 545.2503678, 452.2873126, 512.7663862, 549.3981369, 462.8785397, 391.3860639, 595.2856341, 396.8570894, 595.2856341, 595.2856341, 541.3424301, 594.5881906, 396.8570894, 575.4633152, 396.8570894)<br />) as t(IdKey, [Type], summ, [01], [02], [03], [04], [05], [06], [07], [08], [09], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31])<br /><br /></pre><p><b>RESULT</b></p><table border='1'><tr><th>IdKey</th><th>Type</th><th>summ</th><th>01</th><th>...</th><th>31</th></tr><tr><td>1</td><td>TYPE</td><td>10.125</td><td>198.390</td><td>...</td><td>396.857</td></tr></table><br /><pre>declare @date date = getdate();<br />select IdKey, [Type], concat(FORMAT(@date, 'yyMM'), DateKey) DateKey, Quantity, Summ<br />from (<br />	values(1, 'TYPE', 10.125, 198.390, 198.390, 332.837, 347.183, 459.819, 339.369, 521.402, 186.606, 349.577, 468.571, 466.103, 466.103, 477.756, 498.126, 201.937, 486.033, 545.250, 452.287, 512.766, 549.398, 462.878, 391.386, 595.285, 396.857, 595.285, 595.285, 541.342, 594.588, 396.857, 575.463, 396.857)<br />) as t(IdKey, [Type], summ, [01], [02], [03], [04], [05], [06], [07], [08], [09], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31])<br />UNPIVOT (<br />    Quantity<br />    FOR DateKey IN ([01], [02], [03], [04], [05], [06], [07], [08], [09], [10], [11], [12], [13], [14], [15], [16], [17], [18], [19], [20], [21], [22], [23], [24], [25], [26], [27], [28], [29], [30], [31])<br />) UNPIV<br />order by IdKey</pre><p><b>RESULT</b></p><table border='1'><tr><th>IdKey</th><th>Type</th><th>DateKey</th><th>Quantity</th><th>Summ</th></tr><tr><td>1</td><td>TYPE</td><td>171001</td><td>198.390</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171002</td><td>198.390</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171003</td><td>332.837</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171004</td><td>347.183</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171005</td><td>459.819</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171006</td><td>339.369</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171007</td><td>521.402</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171008</td><td>186.606</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171009</td><td>349.577</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171010</td><td>468.571</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171011</td><td>466.103</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171012</td><td>466.103</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171013</td><td>477.756</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171014</td><td>498.126</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171015</td><td>201.937</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171016</td><td>486.033</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171017</td><td>545.250</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171018</td><td>452.287</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171019</td><td>512.766</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171020</td><td>549.398</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171021</td><td>462.878</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171022</td><td>391.386</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171023</td><td>595.285</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171024</td><td>396.857</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171025</td><td>595.285</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171026</td><td>595.285</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171027</td><td>541.342</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171028</td><td>594.588</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171029</td><td>396.857</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171030</td><td>575.463</td><td>10.125</td></tr><tr><td>1</td><td>TYPE</td><td>171031</td><td>396.857</td><td>10.125</td></tr></table><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Convert MDX to flat table.</h3><p>How to deploy mdx query in a flat table ?.</p><pre>DECLARE @query VARCHAR(MAX);<br />DECLARE @mdxquery VARCHAR(MAX);<br /><br />SET @mdxquery = ' YOUR_MDX_QUERY ';<br /><br />SET @query = '<br />	WITH MDX AS (<br />		SELECT<br />			ListColumns<br />		FROM OPENQUERY(YOUR_SERVER_NAME, ''' + @mdxquery + ''')<br />	)<br /><br />	SELECT ListColumns FROM MDX<br />';<br /><br />EXEC (@query);</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Pivot:</h3><p>Write a script to sample sales amounts (sales) with the following conditions:<br />1. Display sales amounts for the period specified by the user;<br />2. In the line to output the name of the goods, the amount of sales for the specified date, the sampling period may change, the number of columns in the final report is not known in advance.<br />Data output without time. In the final query output columns: Product name, date1, date2, etc.</p><pre>--Table [ref_goods]:<br />select *from (<br />	values<br />		(1, 'Ballpoint pen black'),<br />		(1, 'Ballpoint pen blue'),<br />		(1, 'Gel black handle'),<br />		(1, 'Gel pen blue'),<br />		(2, 'Pencil blue'),<br />		(2, 'Pencil green'),<br />		(2, 'Pencil Red')<br />) as ref_goods(id, good_name)<br /><br />--Insert into Table [sales]:<br />declare @StartDate datetime<br />declare @EndDate datetime<br />declare @Good int<br />declare @Amount numeric(18, 2)<br /><br />set @StartDate = '20120101'<br />set @EndDate = getdate()<br />set @Good = 1<br />set @Amount = 15.12<br /><br />while @StartDate < @EndDate begin<br />	insert into sales<br />	select @Good, @StartDate, @Amount<br /><br />	set @StartDate = dateadd(hour, 4, @StartDate)<br />	set @Good = case when @Good = 7 then 1 else @Good + 1 end<br />	set @Amount = case when @Amount > 100000 then 15.12 else @Amount + 21.14 end<br />end<br /><br />--Strictly speaking, the request itselfset language british;<br />declare @StartDate datetime = '20120101';<br />declare @EndDate datetime = getdate();<br /><br />declare @cols nvarchar(max)<br />select @cols = coalesce(@cols + ',[' + convert(nvarchar, s_date, 104) + ']', '[' + convert(nvarchar, s_date, 104) + ']')<br />			   from (select distinct cast(s_date as date) s_date from sales where s_date between @StartDate and @EndDate) PV<br />			   order by s_date<br /><br />declare @query nvarchar(max)<br />set @query = '<br />				select *from (<br />					select r.good_name, sum(s.amount) [amount], cast(s_date as date) s_date<br />					from sales s<br />						join ref_goods r on s.id_good = r.id<br />					where s_date between ''' + convert(nvarchar, @StartDate, 104) + ''' and ''' + convert(nvarchar, @EndDate, 104) + '''<br />					group by r.good_name, s_date<br />				) x<br />				pivot (<br />					sum(amount)<br />					for s_date in (' + @cols + ')<br />				) p<br />			'<br /><br />exec SP_EXECUTESQL @query</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>What is an index in T-SQL ?.</h3><p>Index is a database object created to improve the performance of data retrieval. The index is similar to the alphabetical index in the book. If we need to find the definition of a function in T-SQL, we will do the following:<br /><br />1. Find the alphabetical index in the book (it is usually at the end of the book);<br />2. Then find the desired function, for example, select (page 52);<br />3. We pass on this page, and read about the function select.<br /><br />Indices are clustered and nonclustered. Here's how the index works in a nutshell.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Optimizing the query.</h3><p>Cited two queries, the result of the sample is the same.<br />One is performed in 40 seconds, the other in 4 seconds, where is the catch ?. See below:<br /><br /><b>Query:</b></p><pre>select <br />	isnull(_all.rdc, plans.rdc) rdc, <br />	isnull(_all.distributor, '') distributor, <br />	isnull(_all.sv, '') sv, <br />	isnull(_all.etp, '') etp, <br />	isnull(_all.subject, plans.subject) subject, <br />	isnull(_all.cnt_all, 0) cnt_all, <br />	isnull(_period.cnt_period, 0) cnt_period, <br />	isnull(plans.pln,0) reestr_tt <br />from (<br />	select rdc, distributor, sv, etp, subject, count(id) cnt_all from #TT<br />	where isnull(@rdc, rdc) = rdc <br />	and isnull(@subject, subject) = subject<br />	and distributor = isnull(@company, distributor)<br />	group by rdc, distributor, sv, etp, subject<br />) _all join (<br />	select rdc, distributor, sv, etp, subject, count(id) cnt_period from #TT<br />	where dtCreate between isnull(@beginDate, '19000101') and isnull(@endDate, '21500101')<br />	and isnull(@rdc, rdc) = rdc <br />	and isnull(@subject, subject) = subject<br />	and distributor = isnull(@company, distributor)<br />	group by rdc, distributor, sv, etp, subject<br />) _period<br />on <br />	_all.distributor = _period.distributor and <br />	_all.etp = _period.etp and<br />	_all.subject = _period.subject and<br />	_period.sv = _all.sv<br />right join (<br />	select upl.rdc, p.subject, sum(p.count) pln from<br />	ReportPlan p join (select distinct rdc, subject from upload where isnull(@rdc, rdc) = rdc and isnull(@subject, subject) = subject) upl on p.subject = upl.subject and upl.rdc is not null<br />	group by upl.rdc, p.subject<br />) plans on plans.subject = _all.subject<br />order by _all.rdc, _all.subject<br /></pre><p><b>Result:</b></p><pre>SQL Server Execution Times:			CPU time = 0 ms,  elapsed time = 0 ms.<br />SQL Server parse and compile time:  		CPU time = 859 ms, elapsed time = 950 ms.<br />SQL Server Execution Times:			CPU time = 0 ms,  elapsed time = 0 ms.<br /><br />(1026 row(s) affected)<br />Table 'Workfile'. Scan count 0, logical reads 0, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br />Table 'Worktable'. Scan count 0, logical reads 0, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br />Table 'ReportPlan'. Scan count 1, logical reads 144, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br />Table 'upload'. Scan count 1, logical reads 745, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br />Table '#TT'. Scan count 2, logical reads 1524, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br /><br />(1 row(s) affected)<br /><br />SQL Server Execution Times:			CPU time = 23188 ms,  elapsed time = 45460 ms.<br />SQL Server parse and compile time:		CPU time = 0 ms, elapsed time = 0 ms.<br />SQL Server Execution Times:			CPU time = 0 ms,  elapsed time = 0 ms.<br /></pre><p><b>Optimized query:</b></p><pre>select <br />	isnull(_all.rdc, plans.rdc) rdc, <br />	_all.distributor, <br />	_all.sv, <br />	_all.etp, <br />	isnull(_all.subject, plans.subject) subject, <br />	_all.cnt_all, <br />	_period.cnt_period, <br />	plans.pln reestr_tt <br />from (<br />	select upl.rdc, p.subject, sum(p.count) pln from<br />	ReportPlan p join (<br />		select distinct rdc, subject from sensus_etp_upload where isnull(@rdc, rdc) = rdc and isnull(@subject, subject) = subject<br />	) upl on p.subject = upl.subject and upl.rdc is not null<br />	group by upl.rdc, p.subject<br />) plans left join (<br />	select rdc, distributor, sv, etp, subject, count(id) cnt_all from #TT<br />	where isnull(@rdc, rdc) = rdc <br />	and isnull(@subject, subject) = subject<br />	and distributor = isnull(@company, distributor)<br />	group by rdc, distributor, sv, etp, subject<br />) _all on plans.subject = _all.subject<br />left join (<br />	select rdc, distributor, sv, etp, subject, count(id) cnt_period from #TT<br />	where dtCreate between isnull(@beginDate, '19000101') and isnull(@endDate, '21500101')<br />	and isnull(@rdc, rdc) = rdc <br />	and isnull(@subject, subject) = subject<br />	and distributor = isnull(@company,distributor)<br />	group by rdc, distributor, sv, etp, subject<br />) _period<br />on <br />	_all.distributor = _period.distributor and <br />	_all.etp = _period.etp and<br />	_all.subject = _period.subject and<br />	_period.sv = _all.sv<br />order by _all.rdc, _all.subject<br /></pre><p><b>Optimized result:</b></p><pre>SQL Server Execution Times:			CPU time = 0 ms,  elapsed time = 0 ms.<br />SQL Server parse and compile time:		CPU time = 843 ms, elapsed time = 849 ms.<br />SQL Server Execution Times:			CPU time = 0 ms,  elapsed time = 0 ms.<br /><br />(995 row(s) affected)<br />Table 'Worktable'. Scan count 156, logical reads 6600, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br />Table '#TT'. Scan count 2, logical reads 1556, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br />Table 'upload'. Scan count 1, logical reads 1471, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br />Table 'ReportPlan'. Scan count 1, logical reads 144, physical reads 0, read-ahead reads 0, lob logical reads 0, lob physical reads 0, lob read-ahead reads 0.<br /><br />(1 row(s) affected)<br /><br />SQL Server Execution Times:			CPU time = 2172 ms,  elapsed time = 2660 ms.<br />SQL Server parse and compile time:		CPU time = 0 ms, elapsed time = 0 ms.<br />SQL Server Execution Times:			CPU time = 0 ms,  elapsed time = 0 ms.</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Convert DistinctBy to T-SQL.</h3><p>At the moment, I'm developing and supporting an MVC type project and I often have to deal with rewriting C# code on T-SQL. For an example today, let's take a look at the C# DistinctBy() method. I took the array of data from the last article:</p><pre>// C#<br />data.DistinctBy(x => x.TmId).OrderBy(x => x.Points)<br /><br />// T-SQL<br />select *from(<br />	select Rm as Employee, (OutPoint + IncrementPoint + ArkbPoint + SdzPoint + RoutePoint + SchedulePoint) / 6 as ball, row_number() over (partition by RmId order by Id) rn from #tmp<br />) t where rn = 1</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Convert LinqToSql to T-SQL.</h3><p>Friends, all of a good day, not long ago I faced the task of rewriting linq to t-sql, everything would be fine, but there was one thing: you had to rewrite the C# method Array.FindIndex() on T-SQL. And this is how it is implemented.</p><pre>// C#<br />List<Rating2> data =<br />	Context.Rating.Where(x => x.CreatedDate.Month == date.Month && x.CreatedDate.Year == date.Year && x.CreatedDate.Day == date.Day).ToList();<br /><br />List<Rating> ratings = data.Select(<br />	x => new Rating<br />	{<br />		Id = x.Id,<br />		Rdc = x.Rdc,<br />		RdcId = x.RdcId,<br />		Distributor = x.Distributor,<br />		DistributorId = x.DistributorId,<br />		EtpId = x.EtpId,<br />		Etp = x.Etp,<br />		RmId = x.RmId,<br />		Rm = x.Rm,<br />		Sv = x.Sv,<br />		SvId = x.SvId,<br />		Tm = x.Tm,<br />		TmId = x.TmId,<br />		OutPoint = 2 * (Array.FindIndex(data.OrderByDescending(o => o.OutMass).ToArray(), a => a.EtpId == x.EtpId) + 1),<br />		IncrementPoint = 2 * (Array.FindIndex(data.OrderByDescending(o => o.PrevOutMass).ToArray(), a => a.EtpId == x.EtpId) + 1),<br />		ArkbPoint = Array.FindIndex(data.OrderByDescending(o => o.CountAtt).ToArray(), a => a.EtpId == x.EtpId) + 1,<br />		SdzPoint = Array.FindIndex(data.OrderByDescending(o => o.AvgOrdersPerDay).ToArray(), a => a.EtpId == x.EtpId) + 1,<br />		RoutePoint = Array.FindIndex(data.OrderByDescending(o => o.PenaltyRoute).ToArray(), a => a.EtpId == x.EtpId) + 1,<br />		SchedulePoint = Array.FindIndex(data.OrderByDescending(o => o.PenaltyWorktime).ToArray(), a => a.EtpId == x.EtpId) + 1,<br />		ObservanceRoute = x.PenaltyRoute,<br />		MaintenanceSchedule = x.PenaltyWorktime,<br />		Sdz = x.AvgOrdersPerDay,<br />		FactOutLast = x.PrevOutMass,<br />		PlanPercentArkb = x.CountAtt,<br />		FactOut = x.FactOut,<br />		PlanOut = x.PlanOut,<br />		FactArkb = x.FactArkb,<br />		PlanArkb = x.PlanArkb,<br />		PlanPercentOut = x.OutMass,<br />		IncrementRate = x.IncrementRate<br />}).ToList();<br /><br />// T-SQL<br />select<br />	Id,<br />	Rdc,<br />	RdcId,<br />	Distributor,<br />	DistributorId,<br />	EtpId,<br />	Etp,<br />	RmId,<br />	Rm,<br />	Sv,<br />	SvId,<br />	Tm,<br />	TmId,<br />	2 * cast(row_number() over(order by OutMass desc, Id) as int) OutPoint,<br />	2 * cast(row_number() over(order by PrevOutMass desc, Id) as int) IncrementPoint,<br />	cast(row_number() over(order by CountAtt desc, Id) as int) ArkbPoint,<br />	cast(row_number() over(order by AvgOrdersPerDay desc, Id) as int) SdzPoint,<br />	cast(row_number() over(order by PenaltyRoute desc, Id) as int) RoutePoint,<br />	cast(row_number() over(order by PenaltyWorktime desc, Id) as int) SchedulePoint,<br />	PenaltyRoute as ObservanceRoute,<br />	PenaltyWorktime as MaintenanceSchedule,<br />	AvgOrdersPerDay as Sdz,<br />	PrevOutMass as FactOutLast,<br />	CountAtt as PlanPercentArkb,<br />	FactOut,<br />	PlanOut,<br />	FactArkb,<br />	PlanArkb,<br />	OutMass as PlanPercentOut,<br />	IncrementRate<br />from Rating<br />where isnull(@load_date, CreatedDate) = CreatedDate<br />order by Id</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Null value is eliminated by an aggregate or other SET operation.</h3><p>As that one of these days received the given error, in the stored procedures. The example showed how you can get rid of it.</p><pre>--Before:<br />select sum(col2) sum_col2 from(<br />	select *from (<br />		values<br />			( 1, NULL, 3 ),<br />            ( 1, 2, 3 )<br />	) as d(col1, col2, col3)<br />) t<br /><br /><b>result:</b><br />sum_col2<br />2<br />Warning: Null value is eliminated by an aggregate or other SET operation.<br />(1 row(s) affected)<br /><br />--After:<br />select sum(isnull(col2, 0)) sum_col2 from(<br />	select *from (<br />		values<br />			( 1, NULL, 3 ),<br />            ( 1, 2, 3 )<br />	) as d(col1, col2, col3)<br />) t<br /><br /><b>result:</b><br />sum_col2<br />2<br />(1 row(s) affected)</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Jobs.</h3><p>In this post, I would like to give you an example of a query that displays a list of all Jobs with respect to the desired name of tables, views, stored procedures, functions, and many other sql objects.</p><pre>select name [JobName], step_name, *<br />from msdb.dbo.sysjobsteps s<br />	join msdb.dbo.sysjobs o on o.job_id = s.job_id<br />where command like '%contains%'</pre><p>In the query \"contains\" - your data for searching (it can be either tables or procedures, as well as functions and other sql objects). Below is an example of a query that returns real data.</p><pre>select name [JobName], step_name, *<br />from msdb.dbo.sysjobsteps s<br />	join msdb.dbo.sysjobs o on o.job_id = s.job_id<br />where command like '%server%'<br /></pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Importing and exporting data.</h3><p>In this post I want to share with you the experience of exporting data from Excel to MS SQL SERVER.<br /><br />Suppose there is an empty dbo.Coords table.<br />Also there is an Excel file with some data.<br />First, start the \"Sql Server Import and Export Data\", select the \"File Location\" in the <b> Data source </b> drop-down list: \"Microsoft Excel\" in the <b> Excel file path </b> entry.<br />In the <b> Destination </b>: select \"SQL Server Native Client 11.0\", select the database from the list ...<br />Copy the data from the Excel file to the table specified in the next step.<br />The Excel file is called Coords.xlsx, the table is called dbo.Coords.<br />Let's see if we've chosen everything correctly.<br />And let's start, perhaps.<br />The export is complete.<br />Do not forget to check that the data in the dbo.Coords table is updated.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Default Database.</h3><p>Often, when connecting to the DataBase Engine component, the \"master\" database is installed by default. We will correct this situation in this post. All we need is to select the</p><pre>[File] -> [Connect Object Explorer] -> [Options >>] -> In the [Connection to] tab, select [&lt;Browse server ...&gt;] -> Reply in the affirmative, to view the databases -> And select from the list the desired database.</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Locks.</h3><p>With the \"with (nolock)\" hint, locks still appear. Many young developers at one stage of their career begin to use hint with (nolock) wherever they like, because with this hint, queries run faster. This is not always a bad thing, but it can be accompanied by unexpected actions. When the query accesses any table, say [YourServerName].[YourNameDb].[Dbo].[Orders], even with the nolock hint, you impose a schema stability lock (Sch-S). Nobody can make changes to this table or its indexes until your request is completed. This does not seem to be a significant problem until you need to delete the index, but you can not do this because people constantly work with the given table, being in full confidence that they do not create any problems, as a result they use hint with (nolock). There is no \"silver bullet\", but worth looking at the isolation levels of SQL Server.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>IntelliSense.</h3><p>Today I noticed that I do not have IntelliSense running in sqlms (sql server management studio 2014).<br />It ceased to work because of the removal of sql Assistant.<br /><br />This problem is solved very easily:</p><pre>Choose: Tools -> Options -> Text Editor -> Transact-SQL -> IntelliSense -> Enable IntelliSense</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Cube.</h3><p>To connect to the OLAP information analysis system, you need to perform a number of the following steps:<br />1. Start the Microsoft Excel product that is included in the Microsoft Office suite.<br />2. In the Excel menu, go to the \"Data\" tab.<br />3. In the \"Obtain external data\" panel, select \"From other sources\" - \"From analytics services\".<br />4. In the dialog box that appears, in the \"Server name\" field enter the server name: \"your-server-name\". Leave the remaining parameters unchanged. Click the \"Next\" button.<br />5. In the \"Data Connection Wizard\" dialog box, you must select the database \"your_db_name\", in the cube selection panel - the cube \"your_cube_name\". Click \"Next\".<br />6. In the \"Save Data Connection and Shutdown File\" dialog box, agree with the proposed options and click \"Finish\".<br />7. In the \"Import Data\" dialog box, you can select the cell that will be the top-left corner of the summary table. Click the \"OK\" button.<br />8. The interface with the analytical system \"your_cube_name\" is a standard Microsoft Excel interface for working with pivot tables. The area of the pivot table itself is displayed in the left corner.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Sql Trees.</h3><p>An example of a tree in t-sql.<br />I'll quote the query and then try to guess what it does, there will be questions to address them <a href='mailto:hru91nik@mail.ru'>here</a>.<br />The code is shown below.</p><pre>with Employees as (<br />	select *from (<br />		values<br />		   (1,  NULL, 'David'  , $10000.00),<br />		   (2,  1,    'Eitan'  ,  $7000.00),<br />		   (3,  1,    'Ina'    ,  $7500.00),<br />		   (4,  2,    'Seraph' ,  $5000.00),<br />		   (5,  2,    'Jiru'   ,  $5500.00),<br />		   (6,  2,    'Steve'  ,  $4500.00),<br />		   (7,  3,    'Aaron'  ,  $5000.00),<br />		   (8,  5,    'Lilach' ,  $3500.00),<br />		   (9,  7,    'Rita'   ,  $3000.00),<br />		   (10, 5,    'Sean'   ,  $3000.00),<br />		   (11, 7,    'Gabriel',  $3000.00),<br />		   (12, 9,    'Emilia' ,  $2000.00),<br />		   (13, 9,    'Michael',  $2000.00),<br />		   (14, 9,    'Didi'   ,  $1500.00)<br />	) as d(empid, mgrid, empname, salary)<br />),<br />EmpsRN as (<br />	select *, row_number() over(partition by mgrid order by empname, empid) as n<br />	from Employees<br />),<br />EmpsPath as (<br />	 select empid, empname, salary, 0 AS lvl, cast(0x as varbinary(max)) as sortpath<br />	 from Employees<br />	 where mgrid is null<br />	 union all<br />	 select C.empid, C.empname, C.salary, P.lvl + 1, P.sortpath + cast(n as binary(2))<br />	 from EmpsPath as P<br />		join EmpsRN as C on C.mgrid = P.empid<br />)<br />select empid, salary, replicate(' | ', lvl) + empname as empname<br />from EmpsPath<br />order by sortpath;<br /></pre><p>The example is taken from Itzik Ben-Ghana's book \"Microsoft SQL Server 2012. High-performance T-SQL code.\" Window functions.\"</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Window functions.</h3><p>Pros of window functions.<br />I will not comment here, just look at the following code and you will understand everything yourself. If you still have any questions, you can address them <a href='mailto:hru91nik@mail.ru'>here</a>.<br />The following are both alternatives and window functions.</p><pre>-- 1.1. without window func<br />with CustAggregates as(<br />	select custid, sum(val) as sumval, avg(val) as avgval<br />	from Sales.OrderValues<br />	group by custid<br />),<br />GrandAggragates as(<br />	select sum(val) as sumval, avg(val) as avgval<br />	from Sales.OrderValues<br />)<br />select o.orderid, o.custid, o.val,<br />	cast(100 * o.val / ca.sumval as numeric(5, 2)) as pctcust,<br />	o.val - ca.avgval as diffcust,<br />	cast(100 * o.val / ga.sumval as numeric(5, 2)) as pctall,<br />	o.val - ga.avgval as diffall<br />from Sales.OrderValues as o<br />	join CustAggregates as ca on o.custid = ca.custid<br />	cross join GrandAggragates as ga;<br /><br />-- 1.2. without window func<br />select orderid, custid, val,<br />	cast(100 * val / (<br />		select sum(o2.val)<br />		from Sales.OrderValues as o2<br />		where o2.custid = o1.custid<br />  ) as numeric(5, 2)) as pctcust,<br />	val - (<br />		select avg(o2.val)<br />		from Sales.OrderValues as o2<br />		where o2.custid = o1.custid<br />  ) diffcust,<br />	cast(100 * val / (<br />		select sum(o2.val)<br />		from Sales.OrderValues as o2) as numeric(5, 2)) as pctall,<br />	val - (<br />		select avg(o2.val)<br />		from Sales.OrderValues as o2<br />		where o2.custid = o1.custid<br />  ) diffall<br />from Sales.OrderValues as o1<br /><br />-- 1.3. with window func<br />select orderid, custid, val,<br />	cast(100 * val / sum(val) over(partition by custid) as numeric(5, 2)) as pctcust,<br />	val - avg(val) over(partiotion by custid) diffcust,<br />	cast(100 * val / sum(val) over() as numeric(5, 2)) as pctall,<br />	val - avg(val) over() diffall<br />from Sales.OrderValues;<br /><br />-- 1.4. without window func<br />select min(col1) as start_range, max(col1) as end_range<br />from (<br />	select col1,(<br />		select min(b.col1)<br />		from dbo.T1 as b<br />		where b1.col1 >= a.col1<br />			and not exists(<br />			select *<br />			from dbo.T1 as c<br />			where c.col1 = b.col1<br />		)<br />	) as grp<br />	from dbo.T1 as a<br />) as d<br />group by grp;<br /><br />-- 1.5. with window func<br />select min(col1) as start_range, max(col1) as end_range<br />from (<br />	select col1,<br />	col1 - row_number() over(order by col1) as grp<br />	from dbo.T1<br />) as d<br />group by grp;</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Request with two or more servers.</h3><p>One of these days the task fell, to unite two tables from different servers. So on t-sql the problem was solved as follows:</p><pre>select *from [srvName].[dbName].[shemaName].[tableName]<br />union all<br />select *from [srvNameOld].[dbName].[shemaName].[tableName]</pre><p>Thus we get the result set from two different servers, it's worth noting that the tables in my case are identical.</p><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>For xml path.</h3><p>In this article I would like to share with you the following tool. Suppose there is a sample represented by the following code:</p><pre>with T1 as (<br />	select *from (<br />		values<br />			(1, 'A'),<br />			(2, 'B'),<br />			(3, 'C'),<br />			(4, 'D'),<br />			(5, 'E')<br />	) as d(id, word)<br />) select *from T1</pre><p>The query has the following form:</p><pre>select *from T1;</pre><p>The task is to collect the rows in one result field, for example for the field 'word' the result should be the following 'A, B, C, D, E'. In t-sql there is the following construction: <b>for xml path ('')</b>. It will be necessary for us to obtain this result. The query will look like this:</p><pre>select word + ', ' from T1 for xml path('');</pre><p id='createdDate'>" + date_publish(n) + "</p>", 'T-SQL');
}

function vb(){
	if (document.getElementById('flag').innerHTML === 'flag ru')
		load_page(nav + back + "<h3>Оптимизация контрола.</h3><p>Копаясь в своих исходниках, я нашел следующие строки:<pre>Dim i As Integer<br />TabRole.SelectedTab.Controls.Add(DGRole)<br />DGRole.DataSource = Nothing<br />If DGRole.ColumnCount > 0 Then DGRole.Columns.RemoveAt(0)<br />Linq =  From rName In db.viewRoleFamilyAll<br />	Where rName.pref = TabRole.SelectedTab.Text<br />	Order By rName.RoleName<br />	Select New With {.Role = rName.RoleName, .Description = rName.Description, rName.Select}<br />DGRole.DataSource = Linq<br />TabRole.Visible = True<br />DGRole.Columns().Add(New DataGridViewCheckBoxColumn)<br />DGRole.Columns(2).HeaderText = \"Select\"<br />DGRole.Columns(2).Width = 46<br />DGRole.Width = TabRole.Width - 15<br />If SelectUser <> \"\" Then<br />	For Each item In Linq<br />		GetValue = cmd.GFTRS(TabRole.SelectedTab.Text & \".dbo.familyRole\", \"count(*)\", \"RoleName = '\" & item.Role & \"' and Users like '%\" & SelectUser & \"%'\")<br />		If GetValue = \"1\" Then DGRole(2, i).Value = True<br />		i += 1<br />	Next<br />End If<br /></pre><p>Посмотрев на них, я немного ужаснулся и решил переписать их, чтобы улучшить производительность программы. Вот что я получил в результате:</p><pre>TabRole.SelectedTab.Controls.Add(DGRole)<br />DGRole.DataSource = Nothing<br />If DGRole.ColumnCount > 0 Then DGRole.Columns.RemoveAt(0)<br />Linq = (From rName In db.sp_CheckRole(SelectUser, TabRole.SelectedTab.Text)<br />	Order By rName.Role<br />	Select New With {rName.Role, rName.Description, .Select = CBool(rName.Select)}).ToList()<br />DGRole.DataSource = Linq<br /><br />TabRole.Visible = True</pre><p>Производительность была увеличена на 70%.</p><p>Старайтесь всегда делать рефакторинг старого кода.</p><p id='createdDate'>" + date_publish(n) + "</p>", 'VB.Net');
	else
		load_page(nav + back + "<h3>Optimization control.</h3><p>Digging into their sources, I found the following lines:<pre>Dim i As Integer<br />TabRole.SelectedTab.Controls.Add(DGRole)<br />DGRole.DataSource = Nothing<br />If DGRole.ColumnCount > 0 Then DGRole.Columns.RemoveAt(0)<br />Linq =  From rName In db.viewRoleFamilyAll<br />	Where rName.pref = TabRole.SelectedTab.Text<br />	Order By rName.RoleName<br />	Select New With {.Role = rName.RoleName, .Description = rName.Description, rName.Select}<br />DGRole.DataSource = Linq<br />TabRole.Visible = True<br />DGRole.Columns().Add(New DataGridViewCheckBoxColumn)<br />DGRole.Columns(2).HeaderText = \"Select\"<br />DGRole.Columns(2).Width = 46<br />DGRole.Width = TabRole.Width - 15<br />If SelectUser <> \"\" Then<br />	For Each item In Linq<br />		GetValue = cmd.GFTRS(TabRole.SelectedTab.Text & \".dbo.familyRole\", \"count(*)\", \"RoleName = '\" & item.Role & \"' and Users like '%\" & SelectUser & \"%'\")<br />		If GetValue = \"1\" Then DGRole(2, i).Value = True<br />		i += 1<br />	Next<br />End If<br /></pre><p>Looking at them, I was a little horrified and decided to rewrite them in order to improve the program's performance. Here's what I got as a result:</p><pre>TabRole.SelectedTab.Controls.Add(DGRole)<br />DGRole.DataSource = Nothing<br />If DGRole.ColumnCount > 0 Then DGRole.Columns.RemoveAt(0)<br />Linq = (From rName In db.sp_CheckRole(SelectUser, TabRole.SelectedTab.Text)<br />	Order By rName.Role<br />	Select New With {rName.Role, rName.Description, .Select = CBool(rName.Select)}).ToList()<br />DGRole.DataSource = Linq<br /><br />TabRole.Visible = True</pre><p>Productivity increased by 70%.</p><p>Conclusion: always refactor your old code.</p><p id='createdDate'>" + date_publish(n) + "</p>", 'VB.Net');
}

function admin(){
	if (document.getElementById('flag').innerHTML === 'flag ru')
		load_page(nav + back + "<h3>Как ввести пароль при входе в систему, если нет необходимой раскладки клавиатуры.</h3><p>Чтобы понять, как это работает, вы можете открыть простой блокнот и выполнить следующие шаги:<br />- Нажмите и удерживайте клавишу ALT<br />- Введите значение (например, 97 для английской строчной буквы «a»)<br />- Отпустите клавишу ALT, и вы увидите результат<br />- Например, слово «admin» вводится как:<br />a = ALT + 97<br />d = ALT + 100<br />m = ALT + 109<br />i = ALT + 105<br />n = ALT + 110<br /><br />Таблица ASCII (для кириллического алфавита указана таблица кодов MS-DOS 866)</p><table border='1'><tr><th>LATIN</th><th>VALUE</th></tr><tr><td>A</td><td>65</td></tr><tr><td>B</td><td>66</td></tr><tr><td>C</td><td>67</td></tr><tr><td>D</td><td>68</td></tr><tr><td>E</td><td>69</td></tr><tr><td>F</td><td>70</td></tr><tr><td>G</td><td>71</td></tr><tr><td>H</td><td>72</td></tr><tr><td>I</td><td>73</td></tr><tr><td>J</td><td>74</td></tr><tr><td>K</td><td>75</td></tr><tr><td>L</td><td>76</td></tr><tr><td>M</td><td>77</td></tr><tr><td>N</td><td>78</td></tr><tr><td>O</td><td>79</td></tr><tr><td>P</td><td>80</td></tr><tr><td>Q</td><td>81</td></tr><tr><td>R</td><td>82</td></tr><tr><td>S</td><td>83</td></tr><tr><td>T</td><td>84</td></tr><tr><td>U</td><td>85</td></tr><tr><td>V</td><td>86</td></tr><tr><td>W</td><td>87</td></tr><tr><td>X</td><td>88</td></tr><tr><td>Y</td><td>89</td></tr><tr><td>Z</td><td>90</td></tr><tr><td>a</td><td>97</td></tr><tr><td>b</td><td>98</td></tr><tr><td>c</td><td>99</td></tr><tr><td>d</td><td>100</td></tr><tr><td>e</td><td>101</td></tr><tr><td>f</td><td>102</td></tr><tr><td>g</td><td>103</td></tr><tr><td>h</td><td>104</td></tr><tr><td>i</td><td>105</td></tr><tr><td>j</td><td>106</td></tr><tr><td>k</td><td>107</td></tr><tr><td>l</td><td>108</td></tr><tr><td>m</td><td>109</td></tr><tr><td>n</td><td>110</td></tr><tr><td>o</td><td>111</td></tr><tr><td>p</td><td>112</td></tr><tr><td>q</td><td>113</td></tr><tr><td>r</td><td>114</td></tr><tr><td>s</td><td>115</td></tr><tr><td>t</td><td>116</td></tr><tr><td>u</td><td>117</td></tr><tr><td>v</td><td>118</td></tr><tr><td>w</td><td>119</td></tr><tr><td>x</td><td>120</td></tr><tr><td>y</td><td>121</td></tr><tr><td>z</td><td>122</td></tr></table><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Удаление программ.</h3><p>Для быстрого доступа к программам удаления нажмите сочетание клавиш «Win + R» и используйте следующий синтаксис:</p><pre>appwiz.cpl</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Windows 10: Автоматический вход в систему.</h3><p>Чтобы автологиниться в Windows 10, вам нужно сделать следующие шаги. Откройте следующий путь к редактору реестра:</p><pre>HKEY_LOCAL_MACHINE - SOFTWARE - Microsoft - Windows NT - CurrentVersion - Winlogon:</pre><p>И установите или добавьте следующие свойства.</p><pre>AutoAdminLogon: 1<br />DefaultUserName: YOUR_USERNAME<br />DefaultPassword: YOUR_PASSWORD</pre><p id='createdDate'>" + date_publish(n) + "</p>", 'Администрирование');
	else
		load_page(nav + back + "<h3>How to enter the password when logging in, if there is no necessary keyboard layout.</h3><p>To see how this works, you can open a simple notepad and follow the instructions below:<br />Press and hold the ALT key<br />Enter a value (for example, 97 for the English lowercase letter 'a')<br />Release the ALT key and you will see the result<br />For example, the word 'admin' is entered as:<br />a = ALT + 97<br />d = ALT + 100<br />m = ALT + 109<br />i = ALT + 105<br />n = ALT + 110<br /><br />ASCII tables (for the Cyrillic alphabet the code table MS-DOS 866 is specified)</p><table border='1'><tr><th>LATIN</th><th>VALUE</th></tr><tr><td>A</td><td>65</td></tr><tr><td>B</td><td>66</td></tr><tr><td>C</td><td>67</td></tr><tr><td>D</td><td>68</td></tr><tr><td>E</td><td>69</td></tr><tr><td>F</td><td>70</td></tr><tr><td>G</td><td>71</td></tr><tr><td>H</td><td>72</td></tr><tr><td>I</td><td>73</td></tr><tr><td>J</td><td>74</td></tr><tr><td>K</td><td>75</td></tr><tr><td>L</td><td>76</td></tr><tr><td>M</td><td>77</td></tr><tr><td>N</td><td>78</td></tr><tr><td>O</td><td>79</td></tr><tr><td>P</td><td>80</td></tr><tr><td>Q</td><td>81</td></tr><tr><td>R</td><td>82</td></tr><tr><td>S</td><td>83</td></tr><tr><td>T</td><td>84</td></tr><tr><td>U</td><td>85</td></tr><tr><td>V</td><td>86</td></tr><tr><td>W</td><td>87</td></tr><tr><td>X</td><td>88</td></tr><tr><td>Y</td><td>89</td></tr><tr><td>Z</td><td>90</td></tr><tr><td>a</td><td>97</td></tr><tr><td>b</td><td>98</td></tr><tr><td>c</td><td>99</td></tr><tr><td>d</td><td>100</td></tr><tr><td>e</td><td>101</td></tr><tr><td>f</td><td>102</td></tr><tr><td>g</td><td>103</td></tr><tr><td>h</td><td>104</td></tr><tr><td>i</td><td>105</td></tr><tr><td>j</td><td>106</td></tr><tr><td>k</td><td>107</td></tr><tr><td>l</td><td>108</td></tr><tr><td>m</td><td>109</td></tr><tr><td>n</td><td>110</td></tr><tr><td>o</td><td>111</td></tr><tr><td>p</td><td>112</td></tr><tr><td>q</td><td>113</td></tr><tr><td>r</td><td>114</td></tr><tr><td>s</td><td>115</td></tr><tr><td>t</td><td>116</td></tr><tr><td>u</td><td>117</td></tr><tr><td>v</td><td>118</td></tr><tr><td>w</td><td>119</td></tr><tr><td>x</td><td>120</td></tr><tr><td>y</td><td>121</td></tr><tr><td>z</td><td>122</td></tr></table><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Uninstall all program.</h3><p>For quick access to uninstall programs, press the \"Win + R\" shortcut and use the following syntax:</p><pre>appwiz.cpl</pre><p id='createdDate'>" + date_publish(n) + "</p><hr /><h3>Windows 10: Auto login.</h3><p>To autoshoot in windows 10, you need to do some tricks. Open the following registry editor path:</p><pre>HKEY_LOCAL_MACHINE - SOFTWARE - Microsoft - Windows NT - CurrentVersion - Winlogon:</pre><p>And install or add the following properties.</p><pre>AutoAdminLogon: 1<br />DefaultUserName: YOUR_USERNAME<br />DefaultPassword: YOUR_PASSWORD</pre><p id='createdDate'>" + date_publish(n) + "</p>", 'Administration');
}

function patterns() {
	if (document.getElementById('flag').innerHTML === 'flag ru')
		load_page(nav + back + "<h3>Паттерны проектирования.</h3><b>Порождающие:</b><ul><li>Фабричный метод</li><li>Абстрактная фабрика</li><li>Строитель</li><li>Прототип</li><li>Одиночка</li></ul><b>Структурные:</b><ul><li>Адаптер</li><li>Мост</li><li>Компоновщик</li><li>Декоратор</li><li>Фасад</li><li>Легковес</li><li>Заместитель</li></ul><b>Поведенческие:</b><ul><li>Цепочка обязанностей</li><li>Команда</li><li>Итератор</li><li>Посредник</li><li>Снимок</li><li>Наблюдатель</li><li>Состояние</li><li>Стратегия</li><li>Шаблонный метод</li><li>Посетитель</li></ul><p id='createdDate'>" + date_publish(n) + "</p>", 'Паттерны проектирования');
	else
		load_page(nav + back + "<h3>Design patterns.</h3><b>Creational:</b><ul><li>Factory method</li><li>Abstract Factory</li><li>Builder</li><li>Prototype</li><li>Singleton</li></ul><b>Structural:</b><ul><li>Adapter</li><li>Bridge</li><li>Composite</li><li>Decorator</li><li>Facade</li><li>Flyweight</li><li>Proxy</li></ul><b>Behavioral:</b><ul><li>Chain of Responsibility</li><li>Command</li><li>Iterator</li><li>Mediator</li><li>Memento</li><li>Observer</li><li>State</li><li>Strategy</li><li>Template method</li><li>Visitor</li></ul><p id='createdDate'>" + date_publish(n) + "</p>", 'Design patterns');
}

function exam_70483() {
	if (document.getElementById('flag').innerHTML === 'flag ru')
		load_page(nav + back_c + "", 'Экзамен 70-483');
	else
		load_page(nav + back_c + "", 'Exam 70-483');
}

function load_page(html, title) {
	n = 0;
	change_css(title);
	document.getElementById("body-content").innerHTML = translate(html + footer);
	
	for (i = 0; i < 6; i++)
		if (document.getElementsByTagName("div")[5] !== undefined)
			document.getElementsByTagName("div")[5].remove();
}

function translate(html){
	var el = document.getElementById('flag');
	if (el !== null && el.innerHTML === 'flag ru')
		html = ru_en(html, { 'About':'Обо мне', 'Contact':'Контакты', 'Working out':'Разработка', 'Literature':'Литература', 'Copyright all rights reserved':'Все права защищены', 'Already leave':'Уже уходите', ' come back':' вернуться', 'flag en':'flag ru', 'Search':'Поиск' });
	else
		html = ru_en(html, { 'Обо мне':'About', 'Контакты':'Contact', 'Разработка':'Working out', 'Литература':'Literature', 'Все права защищены':'Copyright all rights reserved', 'Уже уходите':'Already leave', ' вернуться':' come back', 'flag ru':'flag en', 'Поиск':'Search' });
	
	return html;
}

function load_lang() {
	
	var e = document.location.href;
	if (e.indexOf('en') > 0)
		window.location.href = e.replace('en/', 'ru/');
	else
		window.location.href = e.replace('ru/', 'en/');
	
	var body = document.body.innerHTML;
	
	if (document.getElementById('flag').innerHTML === 'flag ru')
		document.body.innerHTML = ru_en(body, { 'flag ru':'flag en' });
	else
		document.body.innerHTML = ru_en(body, { 'flag en':'flag ru' });
	
	switch(document.title) {
		case 'Home':
		case 'Домой':
			home();
			break;
			
		case 'About':
		case 'Обо мне':
			about();
			break;
			
		case 'Contact':
		case 'Контакты':
			contact();
			break;
			
		case 'Working out':
		case 'Разработка':
			work();
			break;
			
		case 'Literature':
		case 'Литература':
			literature();
			break;
			
		case 'Story':
		case 'История из жизни':
			story();
			break;
			
		case 'Js':
			js();
			break;
			
		case 'C#':
			c();
			break;
			
		case 'Exam 70-483':
		case 'Экзамен 70-483':
			exam_70483();
			break;
			
		case 'T-SQL':
			sql();
			break;
			
		case 'VB.Net':
			vb();
			break;
			
		case 'Administration':
		case 'Администрирование':
			admin();
			break;
			
		case 'Design patterns':
		case 'Паттерны проектирования':
			patterns();
			break;
			
		default:
			break;
	}
}

function ru_en(body, en) {
	for (var val in en)
		body = body.split(val).join(en[val]);

	return body;
}